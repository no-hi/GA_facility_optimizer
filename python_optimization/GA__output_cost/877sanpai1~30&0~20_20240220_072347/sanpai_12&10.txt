局----------------------  実行情報  ----------------------
実行時間＝2488秒
個体数＝1100
合計世代数＝100
==============================
Total cost: 11169178.476057118
==============================
------------------------  前提  ------------------------

waste=sanpai

ごみ量32位以内：
苫小牧市 (2039382), 釧路市 (1177668), 札幌市 (728360), 室蘭市 (677679), 登別市 (430316), 伊達市 (334124), 帯広市 (182218), 旭川市 (138210), 函館市 (133081), 釧路町 (121597), 白老町 (99038), 北見市 (91496), 小樽市 (91037), 千歳市 (69923), 江別市 (64214), 安平町 (60328), 洞爺湖町 (54767), 厚岸町 (49048), 岩見沢市 (47176), 稚内市 (46228), 音更町 (44302), 標茶町 (43861), むかわ町 (42881), 厚真町 (42445), 北斗市 (42381), 弟子屈町 (39869), 恵庭市 (36267), 豊浦町 (36146), 中標津町 (35109), 浜中町 (33093), 北広島市 (30922), 七飯町 (30521)

焼却施設数: 12
中継施設数: 10

輸送単価＝ 877 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='sanpai'
unit ='t/year'

inc_size= [2439263, 1338813, 1062976, 677679, 495491, 430316, 325699, 320858, 255303, 254539, 188846, 78509]
inc_facility = ['苫小牧市', '釧路市', '札幌市', '室蘭市', '伊達市', '登別市', '帯広市', '深川市', '函館市', '標茶町', '北見市', '稚内市']
inc_blocks = [['芦別市', '赤平市', '滝川市', '砂川市', '歌志内市', '深川市', '奈井江町', '上砂川町', '新十津川町', '妹背牛町', '秩父別町', '雨竜町', '北竜町', '沼田町', '幌加内町', '留萌市', '増毛町', '小平町', '苫前町', '羽幌町'], ['南幌町', '札幌市', '江別市', '北広島市', '石狩市', '当別町'], ['室蘭市'], ['苫小牧市', '厚真町', 'むかわ町', '日高町', '平取町'], ['登別市'], ['島牧村', '寿都町', '黒松内町', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町', '伊達市', '豊浦町', '壮瞥町', '洞爺湖町', '長万部町', '今金町', 'せたな町'], ['函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '八雲町', '江差町', '上ノ国町', '厚沢部町', '乙部町'], ['中川町', '初山別村', '遠別町', '天塩町', '稚内市', '猿払村', '浜頓別町', '中頓別町', '枝幸町', '豊富町', '幌延町'], ['北見市', '網走市', '紋別市', '美幌町', '津別町', '斜里町', '小清水町', '訓子府町', '置戸町', '佐呂間町', '遠軽町', '湧別町', '滝上町', '興部町', '大空町', '陸別町'], ['南富良野町', '帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町', '本別町', '足寄町', '浦幌町'], ['釧路市', '釧路町', '鶴居村', '白糠町'], ['清里町', '標茶町', '弟子屈町']]

trans_size=[198842, 167381, 125721, 99038, 82141, 78585, 62104, 36667, 36029, 24477]
trans_facility = ['旭川市', '千歳市', '小樽市', '白老町', '厚岸町', '岩見沢市', '中標津町', '士別市', '新ひだか町', '根室市']
trans_blocks = [['別海町', '中標津町', '標津町', '羅臼町'], ['千歳市', '恵庭市', '安平町', '占冠村'], ['小樽市', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村'], ['夕張市', '岩見沢市', '美唄市', '三笠市', '由仁町', '長沼町', '栗山町', '月形町', '浦臼町', '新篠津村'], ['新冠町', '浦河町', '様似町', 'えりも町', '新ひだか町'], ['旭川市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町'], ['白老町'], ['士別市', '名寄市', '和寒町', '剣淵町', '下川町', '美深町', '音威子府村', '西興部村', '雄武町'], ['厚岸町', '浜中町'], ['根室市']]

arrows = [[['深川市'], ['士別市', '旭川市']], [['札幌市'], ['小樽市', '岩見沢市']], [['苫小牧市'], ['千歳市', '白老町', '新ひだか町']], [['標茶町'], ['根室市', '中標津町', '厚岸町']]]


---------------------  コスト情報  ---------------------
[2947961.388939599, 1911420.8232669004, 4524659.180462118, 1485632.0963753585, 149647.0684270267, 149857.91858611608]

TC_direct: {'苫小牧市': 306156.2587843, '釧路市': 205083.3241966, '札幌市': 233915.96646159998, '室蘭市': 0.0, '伊達市': 475143.1892683001, '登別市': 0.0, '帯広市': 309207.7568684, '深川市': 256760.8453595, '函館市': 367384.46219439997, '標茶町': 102383.11812599999, '北見市': 467138.0385082999, '稚内市': 224788.42917219998}
IC_inc: {'苫小牧市': 1383297.6752423083, '釧路市': 759236.2572154704, '札幌市': 602810.0412453957, '室蘭市': 384309.43496479554, '伊達市': 280991.24547188496, '登別市': 244030.72666603362, '帯広市': 185144.59186416608, '深川市': 183156.34525666825, '函館市': 155330.84510770143, '標茶町': 154995.56182241775, '北見市': 124981.03158822995, '稚内市': 66375.42401704588}
OC_inc: {'苫小牧市': 438276.86442847835, '釧路市': 240552.47986628927, '札幌市': 190991.20850958925, '室蘭市': 121762.60911965079, '伊達市': 89027.80956072845, '登別市': 77317.43038508152, '帯広市': 58520.27291337218, '深川市': 57650.46170371654, '函館市': 45871.80567211646, '標茶町': 45734.5332564633, '北見市': 52464.503516401805, '稚内市': 67462.11744347046}

TC_indirect: {'旭川市': 337914.3686572, '千歳市': 290518.23620670004, '小樽市': 267518.21403449995, '白老町': 74164.853895, '厚岸町': 201833.1156316, '岩見沢市': 158790.7551869, '中標津町': 164327.1210531, '士別市': 169462.3321765, '新ひだか町': 160778.8031854, '根室市': 86113.02324000001}
IC_trans: {'旭川市': 24625.09714487864, '千歳市': 22012.54211899579, '小樽市': 18568.06717200099, '白老町': 16223.64309900052, '厚岸町': 14537.339389361081, '岩見沢市': 14181.567705068075, '中標津町': 12593.234031159203, '士別市': 9651.06784328992, '新ひだか町': 9404.522309150798, '根室市': 7849.987614121693}
OC_trans: {'旭川市': 26624.54235654891, '千歳市': 23087.930022785564, '小樽市': 19001.34466983611, '白老町': 16255.275348952313, '厚岸町': 13958.753688105198, '岩見沢市': 13764.410307328559, '中標津町': 12130.497493387822, '士別市': 9126.363103014823, '新ひだか町': 8382.196098137043, '根室市': 7526.6054980197505}


----------------------  輸送情報  ----------------------

direct 苫小牧市(5854/6683) t/day → receive from: 苫小牧市, 厚真町, むかわ町, 日高町, 平取町
indirect 苫小牧市(829/6683) t/day → receive from: 中継施設＝ 千歳市(167381) → receive from: 千歳市, 恵庭市, 安平町, 占冠村
白老町(99038) → receive from: 白老町
新ひだか町(36029) → receive from: 新冠町, 浦河町, 様似町, えりも町, 新ひだか町
direct 釧路市(3668/3668) t/day → receive from: 釧路市, 釧路町, 鶴居村, 白糠町
direct 札幌市(2353/2912) t/day → receive from: 南幌町, 札幌市, 江別市, 北広島市, 石狩市, 当別町
indirect 札幌市(560/2912) t/day → receive from: 中継施設＝ 小樽市(125721) → receive from: 小樽市, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村
岩見沢市(78585) → receive from: 夕張市, 岩見沢市, 美唄市, 三笠市, 由仁町, 長沼町, 栗山町, 月形町, 浦臼町, 新篠津村
direct 室蘭市(1857/1857) t/day → receive from: 室蘭市
direct 伊達市(1358/1358) t/day → receive from: 島牧村, 寿都町, 黒松内町, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町, 伊達市, 豊浦町, 壮瞥町, 洞爺湖町, 長万部町, 今金町, せたな町
direct 登別市(1179/1179) t/day → receive from: 登別市
direct 帯広市(892/892) t/day → receive from: 南富良野町, 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町, 本別町, 足寄町, 浦幌町
direct 深川市(234/879) t/day → receive from: 芦別市, 赤平市, 滝川市, 砂川市, 歌志内市, 深川市, 奈井江町, 上砂川町, 新十津川町, 妹背牛町, 秩父別町, 雨竜町, 北竜町, 沼田町, 幌加内町, 留萌市, 増毛町, 小平町, 苫前町, 羽幌町
indirect 深川市(645/879) t/day → receive from: 中継施設＝ 士別市(36667) → receive from: 士別市, 名寄市, 和寒町, 剣淵町, 下川町, 美深町, 音威子府村, 西興部村, 雄武町
旭川市(198842) → receive from: 旭川市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町
direct 函館市(699/699) t/day → receive from: 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 八雲町, 江差町, 上ノ国町, 厚沢部町, 乙部町
direct 標茶町(235/697) t/day → receive from: 清里町, 標茶町, 弟子屈町
indirect 標茶町(462/697) t/day → receive from: 中継施設＝ 根室市(24477) → receive from: 根室市
中標津町(62104) → receive from: 別海町, 中標津町, 標津町, 羅臼町
厚岸町(82141) → receive from: 厚岸町, 浜中町
direct 北見市(517/517) t/day → receive from: 北見市, 網走市, 紋別市, 美幌町, 津別町, 斜里町, 小清水町, 訓子府町, 置戸町, 佐呂間町, 遠軽町, 湧別町, 滝上町, 興部町, 大空町, 陸別町
direct 稚内市(215/215) t/day → receive from: 中川町, 初山別村, 遠別町, 天塩町, 稚内市, 猿払村, 浜頓別町, 中頓別町, 枝幸町, 豊富町, 幌延町

----------------------  遺伝情報  ----------------------

個体数＝1100
世代数＝100
0: neval=1100{'avg': inf, 'max': inf, 'min': 13050354.674231227} best=13050354.674231227
1: neval=864{'avg': inf, 'max': inf, 'min': 13578394.359437658} best=13050354.674231227
2: neval=863{'avg': inf, 'max': inf, 'min': 13578394.359437658} best=13050354.674231227
3: neval=862{'avg': inf, 'max': inf, 'min': 13578394.359437658} best=13050354.674231227
4: neval=877{'avg': inf, 'max': inf, 'min': 13692852.22631289} best=13050354.674231227
5: neval=861{'avg': inf, 'max': inf, 'min': 13681098.178988308} best=13050354.674231227
6: neval=868{'avg': inf, 'max': inf, 'min': 13700892.800697338} best=13050354.674231227
7: neval=884{'avg': inf, 'max': inf, 'min': 12996843.290886141} best=12996843.290886141
8: neval=872{'avg': inf, 'max': inf, 'min': 12996843.290886141} best=12996843.290886141
9: neval=859{'avg': inf, 'max': inf, 'min': 13051914.768456843} best=12996843.290886141
10: neval=875{'avg': 15645994.755743755, 'max': 37293598.97641224, 'min': 13051914.768456843} best=12996843.290886141
11: neval=863{'avg': inf, 'max': inf, 'min': 12893512.52782186} best=12893512.52782186
12: neval=870{'avg': inf, 'max': inf, 'min': 12558439.891629105} best=12558439.891629105
13: neval=882{'avg': inf, 'max': inf, 'min': 12474072.996377984} best=12474072.996377984
14: neval=909{'avg': inf, 'max': inf, 'min': 12295949.16304721} best=12295949.16304721
15: neval=870{'avg': inf, 'max': inf, 'min': 12295949.16304721} best=12295949.16304721
16: neval=824{'avg': inf, 'max': inf, 'min': 12295949.16304721} best=12295949.16304721
17: neval=871{'avg': inf, 'max': inf, 'min': 12256052.773504775} best=12256052.773504775
18: neval=887{'avg': inf, 'max': inf, 'min': 11974122.556911977} best=11974122.556911977
19: neval=890{'avg': inf, 'max': inf, 'min': 11974122.556911977} best=11974122.556911977
20: neval=863{'avg': 13072994.406894743, 'max': 28137834.9804084, 'min': 11974122.556911977} best=11974122.556911977
21: neval=898{'avg': inf, 'max': inf, 'min': 11974122.556911977} best=11974122.556911977
22: neval=877{'avg': 12981935.293892395, 'max': 40844258.435075745, 'min': 11974122.556911977} best=11974122.556911977
23: neval=891{'avg': inf, 'max': inf, 'min': 11977901.50719303} best=11974122.556911977
24: neval=848{'avg': 12546725.510212207, 'max': 30174072.40473505, 'min': 11868980.43557761} best=11868980.43557761
25: neval=886{'avg': inf, 'max': inf, 'min': 11868980.43557761} best=11868980.43557761
26: neval=855{'avg': 12361657.57678106, 'max': 26245903.256929703, 'min': 11834159.778796932} best=11834159.778796932
27: neval=910{'avg': 12285405.658548871, 'max': 26939864.68463064, 'min': 11794485.867292518} best=11794485.867292518
28: neval=871{'avg': 12108406.61204402, 'max': 22967352.545991104, 'min': 11694818.162627565} best=11694818.162627565
29: neval=898{'avg': 12021903.363440432, 'max': 19199652.779656507, 'min': 11685014.698563755} best=11685014.698563755
30: neval=889{'avg': 11925865.50521955, 'max': 19884465.695851102, 'min': 11651577.574822798} best=11651577.574822798
31: neval=873{'avg': 11866239.132860815, 'max': 18169169.522182524, 'min': 11563405.37306769} best=11563405.37306769
32: neval=898{'avg': 11773756.300488204, 'max': 18086813.8740192, 'min': 11563405.37306769} best=11563405.37306769
33: neval=909{'avg': 11703138.092496172, 'max': 20020808.739730153, 'min': 11490544.106466433} best=11490544.106466433
34: neval=843{'avg': 11677194.698103448, 'max': 29252568.248654354, 'min': 11473813.113880493} best=11473813.113880493
35: neval=887{'avg': 11633727.533553502, 'max': 18126308.752523668, 'min': 11441109.596060451} best=11441109.596060451
36: neval=909{'avg': 11615957.185071113, 'max': 23613153.65141949, 'min': 11407684.630921287} best=11407684.630921287
37: neval=852{'avg': 11559995.278500466, 'max': 17133601.120021757, 'min': 11407684.630921287} best=11407684.630921287
38: neval=881{'avg': 11512589.523167027, 'max': 17578817.311412957, 'min': 11383178.467009408} best=11383178.467009408
39: neval=914{'avg': 11481384.889955403, 'max': 20800196.72203806, 'min': 11383178.467009408} best=11383178.467009408
40: neval=856{'avg': 11453692.973274881, 'max': 17357152.09609633, 'min': 11379478.881754054} best=11379478.881754054
41: neval=878{'avg': 11418409.66972992, 'max': 13826607.763345715, 'min': 11379478.881754054} best=11379478.881754054
42: neval=891{'avg': 11443707.568342896, 'max': 19564976.431035627, 'min': 11379478.881754054} best=11379478.881754054
43: neval=891{'avg': 11457017.850525856, 'max': 20600026.38408988, 'min': 11379478.881754054} best=11379478.881754054
44: neval=886{'avg': 11432835.076561231, 'max': 22088455.164892435, 'min': 11379478.881754054} best=11379478.881754054
45: neval=852{'avg': 11414702.23784244, 'max': 24296734.79424575, 'min': 11379478.881754054} best=11379478.881754054
46: neval=858{'avg': 11403491.209250847, 'max': 18179153.95704694, 'min': 11379478.881754054} best=11379478.881754054
47: neval=853{'avg': 11394977.095968174, 'max': 16368245.866947984, 'min': 11379478.881754054} best=11379478.881754054
48: neval=886{'avg': 11401970.954122419, 'max': 19809165.561626878, 'min': 11379478.881754054} best=11379478.881754054
49: neval=888{'avg': 11401932.228322212, 'max': 18625474.803291336, 'min': 11379478.881754054} best=11379478.881754054
50: neval=848{'avg': 11409299.204360723, 'max': 17014729.81568474, 'min': 11379478.881754054} best=11379478.881754054
51: neval=878{'avg': 11408576.620503385, 'max': 22705417.616675865, 'min': 11379478.881754054} best=11379478.881754054
52: neval=880{'avg': 11404447.581357421, 'max': 15509941.545532877, 'min': 11379478.881754054} best=11379478.881754054
53: neval=871{'avg': 11416970.399327373, 'max': 19459739.42119357, 'min': 11379478.881754054} best=11379478.881754054
54: neval=849{'avg': 11387146.27598779, 'max': 14258427.08540941, 'min': 11379478.881754054} best=11379478.881754054
55: neval=850{'avg': 11413675.607026562, 'max': 21165485.556605037, 'min': 11379478.881754054} best=11379478.881754054
56: neval=869{'avg': 11402731.797801662, 'max': 17761020.100234497, 'min': 11379478.881754054} best=11379478.881754054
57: neval=899{'avg': 11410101.203066522, 'max': 22318644.77735642, 'min': 11379478.881754054} best=11379478.881754054
58: neval=904{'avg': 11425818.57824261, 'max': 25190681.531913124, 'min': 11379478.881754054} best=11379478.881754054
59: neval=881{'avg': 11385105.400282953, 'max': 14446527.24980888, 'min': 11379478.881754054} best=11379478.881754054
60: neval=864{'avg': 11409598.271303795, 'max': 17353908.750211608, 'min': 11379478.881754054} best=11379478.881754054
61: neval=849{'avg': 11422948.989745567, 'max': 22072138.528156046, 'min': 11379478.881754054} best=11379478.881754054
62: neval=864{'avg': 11406116.632791309, 'max': 17209097.99582035, 'min': 11379478.881754054} best=11379478.881754054
63: neval=854{'avg': 11402903.379324982, 'max': 19708964.276886966, 'min': 11365474.639189616} best=11365474.639189616
64: neval=893{'avg': 11418480.831619918, 'max': 18075208.98186237, 'min': 11365474.639189616} best=11365474.639189616
65: neval=888{'avg': 11416504.55212397, 'max': 19528187.24076609, 'min': 11365474.639189616} best=11365474.639189616
66: neval=820{'avg': 11387378.63021257, 'max': 13675795.13800388, 'min': 11365474.639189616} best=11365474.639189616
67: neval=816{'avg': 11398410.849327993, 'max': 19823935.283632044, 'min': 11365474.639189616} best=11365474.639189616
68: neval=882{'avg': 11439496.440859927, 'max': 21130750.58880659, 'min': 11365474.639189616} best=11365474.639189616
69: neval=886{'avg': 11407864.02132492, 'max': 19014294.953421652, 'min': 11365474.639189616} best=11365474.639189616
70: neval=867{'avg': 11390053.278859586, 'max': 18914295.99234867, 'min': 11365474.639189616} best=11365474.639189616
71: neval=859{'avg': 11393448.812400363, 'max': 17858843.299482238, 'min': 11365474.639189616} best=11365474.639189616
72: neval=880{'avg': 11387495.52131203, 'max': 17032434.78055481, 'min': 11365474.639189616} best=11365474.639189616
73: neval=848{'avg': 11396241.868374327, 'max': 23983348.552155677, 'min': 11365474.639189616} best=11365474.639189616
74: neval=859{'avg': 11397098.249662483, 'max': 24531689.99285858, 'min': 11365474.639189616} best=11365474.639189616
75: neval=894{'avg': 11412817.33710664, 'max': 19586621.908146758, 'min': 11365474.639189616} best=11365474.639189616
76: neval=825{'avg': 11397823.762905313, 'max': 20476645.783202272, 'min': 11365474.639189616} best=11365474.639189616
77: neval=851{'avg': 11389402.782946287, 'max': 18752952.13402238, 'min': 11365474.639189616} best=11365474.639189616
78: neval=854{'avg': 11396232.829489566, 'max': 16381671.709720552, 'min': 11365474.639189616} best=11365474.639189616
79: neval=874{'avg': 11401919.141576251, 'max': 18013339.75650513, 'min': 11365474.639189616} best=11365474.639189616
80: neval=908{'avg': 11396944.652075486, 'max': 16903708.828085076, 'min': 11365474.639189616} best=11365474.639189616
81: neval=884{'avg': 11397903.644832522, 'max': 19464019.2029664, 'min': 11365474.639189616} best=11365474.639189616
82: neval=888{'avg': 11410397.250025399, 'max': 22480366.897529792, 'min': 11365474.639189616} best=11365474.639189616
83: neval=882{'avg': 11389846.29062911, 'max': 18710697.903777253, 'min': 11365474.639189616} best=11365474.639189616
84: neval=881{'avg': 11386176.344789771, 'max': 17097451.617548633, 'min': 11365474.639189616} best=11365474.639189616
85: neval=865{'avg': 11391859.536140958, 'max': 21281212.37909314, 'min': 11365474.639189616} best=11365474.639189616
86: neval=876{'avg': 11392259.396859987, 'max': 20504213.572118025, 'min': 11365474.639189616} best=11365474.639189616
87: neval=876{'avg': 11408297.789428778, 'max': 19082745.0954926, 'min': 11365474.639189616} best=11365474.639189616
88: neval=891{'avg': 11413631.564921523, 'max': 23910241.907303464, 'min': 11365474.639189616} best=11365474.639189616
89: neval=858{'avg': 11386816.837656867, 'max': 16980087.414635524, 'min': 11365474.639189616} best=11365474.639189616
90: neval=860{'avg': 11390673.162729384, 'max': 20064123.912137575, 'min': 11365474.639189616} best=11365474.639189616
91: neval=853{'avg': 11384420.59223178, 'max': 19457784.485564053, 'min': 11365474.639189616} best=11365474.639189616
92: neval=849{'avg': 11381517.712183062, 'max': 16714312.402775398, 'min': 11365474.639189616} best=11365474.639189616
93: neval=869{'avg': 11395166.889093133, 'max': 17845786.50271822, 'min': 11365474.639189616} best=11365474.639189616
94: neval=866{'avg': 11381437.615242112, 'max': 17310993.435784165, 'min': 11365474.639189616} best=11365474.639189616
95: neval=880{'avg': 11401349.891015833, 'max': 18908508.335434783, 'min': 11365474.639189616} best=11365474.639189616
96: neval=879{'avg': 11379686.560353743, 'max': 17521807.707409013, 'min': 11365474.639189616} best=11365474.639189616
97: neval=842{'avg': 11380091.066932691, 'max': 17742864.574612986, 'min': 11365474.639189616} best=11365474.639189616
98: neval=872{'avg': 11393365.183279432, 'max': 19738628.38052735, 'min': 11365474.639189616} best=11365474.639189616
99: neval=894{'avg': 11384304.578247545, 'max': 17778662.37164716, 'min': 11365474.639189616} best=11365474.639189616


----------------------  最適個体  ----------------------

best_individual.inc_facility = [9, 24, 52, 53, 54, 55, 70, 118, 125, 143, 162, 166]
best_individual.trans_facility = [172, 26, 32, 1, 69, 87, 58, 88, 164, 170]
best_individual.unused_cities = {0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 167, 168, 169, 171, 173, 174}
best_individual.fitness.values = (11169178.476057118,)