局----------------------  実行情報  ----------------------
実行時間＝1975秒
個体数＝950
合計世代数＝100
=============================
Total cost: 11467714.12042632
=============================
------------------------  前提  ------------------------

waste=sanpai

ごみ量29位以内：
苫小牧市 (2039382), 釧路市 (1177668), 札幌市 (728360), 室蘭市 (677679), 登別市 (430316), 伊達市 (334124), 帯広市 (182218), 旭川市 (138210), 函館市 (133081), 釧路町 (121597), 白老町 (99038), 北見市 (91496), 小樽市 (91037), 千歳市 (69923), 江別市 (64214), 安平町 (60328), 洞爺湖町 (54767), 厚岸町 (49048), 岩見沢市 (47176), 稚内市 (46228), 音更町 (44302), 標茶町 (43861), むかわ町 (42881), 厚真町 (42445), 北斗市 (42381), 弟子屈町 (39869), 恵庭市 (36267), 豊浦町 (36146), 中標津町 (35109)

焼却施設数: 12
中継施設数: 7

輸送単価＝ 877 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='sanpai'
unit ='t/year'

inc_size= [2229437, 1591265, 1055330, 677679, 495491, 430316, 325699, 317443, 255303, 219907, 191698, 78724]
inc_facility = ['苫小牧市', '釧路市', '札幌市', '室蘭市', '伊達市', '登別市', '帯広市', '旭川市', '函館市', '千歳市', '美幌町', '稚内市']
inc_blocks = [['南幌町', '札幌市', '江別市', '北広島市', '石狩市', '当別町'], ['夕張市', '由仁町', '長沼町', '千歳市', '恵庭市', '厚真町', '安平町', '占冠村'], ['室蘭市'], ['苫小牧市', '白老町', 'むかわ町', '日高町', '平取町'], ['登別市'], ['島牧村', '寿都町', '黒松内町', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町', '伊達市', '豊浦町', '壮瞥町', '洞爺湖町', '長万部町', '今金町', 'せたな町'], ['函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '八雲町', '江差町', '上ノ国町', '厚沢部町', '乙部町'], ['芦別市', '旭川市', '士別市', '名寄市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町', '和寒町', '剣淵町', '下川町', '美深町', '幌加内町', '滝上町', '西興部村'], ['音威子府村', '中川町', '初山別村', '遠別町', '天塩町', '稚内市', '猿払村', '浜頓別町', '中頓別町', '枝幸町', '豊富町', '幌延町'], ['南富良野町', '帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町', '本別町', '足寄町', '浦幌町'], ['釧路市', '釧路町', '鶴居村', '白糠町'], ['北見市', '網走市', '紋別市', '美幌町', '津別町', '清里町', '斜里町', '小清水町', '訓子府町', '置戸町', '佐呂間町', '遠軽町', '湧別町', '興部町', '雄武町', '大空町', '陸別町']]

trans_size=[125721, 106618, 83730, 76880, 70939, 62104, 36029]
trans_facility = ['小樽市', '厚岸町', '標茶町', '深川市', '岩見沢市', '中標津町', '新ひだか町']
trans_blocks = [['新冠町', '浦河町', '様似町', 'えりも町', '新ひだか町'], ['岩見沢市', '美唄市', '三笠市', '奈井江町', '栗山町', '月形町', '浦臼町', '新篠津村'], ['小樽市', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村'], ['標茶町', '弟子屈町'], ['赤平市', '滝川市', '砂川市', '歌志内市', '深川市', '上砂川町', '新十津川町', '妹背牛町', '秩父別町', '雨竜町', '北竜町', '沼田町', '留萌市', '増毛町', '小平町', '苫前町', '羽幌町'], ['厚岸町', '浜中町', '根室市'], ['別海町', '中標津町', '標津町', '羅臼町']]

arrows = [[['札幌市'], ['小樽市', '岩見沢市']], [['苫小牧市'], ['新ひだか町']], [['旭川市'], ['深川市']], [['釧路市'], ['中標津町', '厚岸町', '標茶町']]]


---------------------  コスト情報  ---------------------
[3516227.6525882995, 1742281.0203844998, 4529066.202500099, 1484011.878724475, 99614.27296431933, 96513.09326462542]

TC_direct: {'苫小牧市': 393319.8983008, '釧路市': 205083.3241966, '札幌市': 233915.96646159998, '室蘭市': 0.0, '伊達市': 475143.1892683001, '登別市': 0.0, '帯広市': 309207.7568684, '旭川市': 415765.6238036999, '函館市': 367384.46219439997, '千歳市': 266841.8438939, '美幌町': 622556.3576383999, '稚内市': 227009.22996219998}
IC_inc: {'苫小牧市': 1264306.070808759, '釧路市': 902400.9199477265, '札幌市': 598474.0208880571, '室蘭市': 384309.43496479554, '伊達市': 280991.24547188496, '登別市': 244030.72666603362, '帯広市': 185144.59186416608, '旭川市': 181748.73524342396, '函館市': 155330.84510770143, '千歳市': 139484.11331208172, '美幌町': 126339.06680549197, '稚内市': 66506.43141997656}
OC_inc: {'苫小牧市': 400576.1813305222, '釧路市': 285912.02944282047, '札幌市': 189617.4062974374, '室蘭市': 121762.60911965079, '伊達市': 89027.80956072845, '登別市': 77317.43038508152, '帯広市': 58520.27291337218, '旭川市': 57036.86837982187, '函館市': 45871.80567211646, '千歳市': 39511.99621601828, '美幌町': 51353.23336028732, '稚内市': 67504.23604661807}

TC_indirect: {'小樽市': 267518.21403449995, '厚岸町': 424942.47579939995, '標茶町': 214482.634581, '深川市': 296371.3171486, '岩見沢市': 130480.7296337, '中標津町': 247706.8460019, '新ひだか町': 160778.8031854}
IC_trans: {'小樽市': 18568.06717200099, '厚岸町': 16907.060129314974, '標茶町': 14605.545175398795, '深川市': 14105.269115423318, '岩見沢市': 13430.575031871267, '中標津町': 12593.234031159203, '新ひだか町': 9404.522309150798}
OC_trans: {'小樽市': 19001.34466983611, '厚岸町': 16645.22574904105, '標茶町': 14044.895678110355, '深川市': 13670.422963191111, '岩見沢市': 12638.510612921935, '中標津町': 12130.497493387822, '新ひだか町': 8382.196098137043}


----------------------  輸送情報  ----------------------

direct 苫小牧市(6009/6108) t/day → receive from: 苫小牧市, 白老町, むかわ町, 日高町, 平取町
indirect 苫小牧市(99/6108) t/day → receive from: 中継施設＝ 新ひだか町(36029) → receive from: 新冠町, 浦河町, 様似町, えりも町, 新ひだか町
direct 釧路市(3668/4360) t/day → receive from: 釧路市, 釧路町, 鶴居村, 白糠町
indirect 釧路市(692/4360) t/day → receive from: 中継施設＝ 中標津町(62104) → receive from: 別海町, 中標津町, 標津町, 羅臼町
厚岸町(106618) → receive from: 厚岸町, 浜中町, 根室市
標茶町(83730) → receive from: 標茶町, 弟子屈町
direct 札幌市(2353/2891) t/day → receive from: 南幌町, 札幌市, 江別市, 北広島市, 石狩市, 当別町
indirect 札幌市(539/2891) t/day → receive from: 中継施設＝ 小樽市(125721) → receive from: 小樽市, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村
岩見沢市(70939) → receive from: 岩見沢市, 美唄市, 三笠市, 奈井江町, 栗山町, 月形町, 浦臼町, 新篠津村
direct 室蘭市(1857/1857) t/day → receive from: 室蘭市
direct 伊達市(1358/1358) t/day → receive from: 島牧村, 寿都町, 黒松内町, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町, 伊達市, 豊浦町, 壮瞥町, 洞爺湖町, 長万部町, 今金町, せたな町
direct 登別市(1179/1179) t/day → receive from: 登別市
direct 帯広市(892/892) t/day → receive from: 南富良野町, 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町, 本別町, 足寄町, 浦幌町
direct 旭川市(659/870) t/day → receive from: 芦別市, 旭川市, 士別市, 名寄市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町, 和寒町, 剣淵町, 下川町, 美深町, 幌加内町, 滝上町, 西興部村
indirect 旭川市(211/870) t/day → receive from: 中継施設＝ 深川市(76880) → receive from: 赤平市, 滝川市, 砂川市, 歌志内市, 深川市, 上砂川町, 新十津川町, 妹背牛町, 秩父別町, 雨竜町, 北竜町, 沼田町, 留萌市, 増毛町, 小平町, 苫前町, 羽幌町
direct 函館市(699/699) t/day → receive from: 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 八雲町, 江差町, 上ノ国町, 厚沢部町, 乙部町
direct 千歳市(602/602) t/day → receive from: 夕張市, 由仁町, 長沼町, 千歳市, 恵庭市, 厚真町, 安平町, 占冠村
direct 美幌町(525/525) t/day → receive from: 北見市, 網走市, 紋別市, 美幌町, 津別町, 清里町, 斜里町, 小清水町, 訓子府町, 置戸町, 佐呂間町, 遠軽町, 湧別町, 興部町, 雄武町, 大空町, 陸別町
direct 稚内市(216/216) t/day → receive from: 音威子府村, 中川町, 初山別村, 遠別町, 天塩町, 稚内市, 猿払村, 浜頓別町, 中頓別町, 枝幸町, 豊富町, 幌延町

----------------------  遺伝情報  ----------------------

個体数＝950
世代数＝100
0: neval=950{'avg': inf, 'max': inf, 'min': 13869855.983751265} best=13869855.983751265
1: neval=726{'avg': inf, 'max': inf, 'min': 13657631.858713515} best=13657631.858713515
2: neval=747{'avg': inf, 'max': inf, 'min': 13657631.858713515} best=13657631.858713515
3: neval=731{'avg': inf, 'max': inf, 'min': 13657631.858713515} best=13657631.858713515
4: neval=758{'avg': inf, 'max': inf, 'min': 13052808.5069841} best=13052808.5069841
5: neval=772{'avg': inf, 'max': inf, 'min': 12751714.924645543} best=12751714.924645543
6: neval=762{'avg': inf, 'max': inf, 'min': 12751714.924645543} best=12751714.924645543
7: neval=745{'avg': inf, 'max': inf, 'min': 12473412.316393917} best=12473412.316393917
8: neval=743{'avg': inf, 'max': inf, 'min': 12364348.729634408} best=12364348.729634408
9: neval=727{'avg': inf, 'max': inf, 'min': 12437378.657761788} best=12364348.729634408
10: neval=716{'avg': inf, 'max': inf, 'min': 12334196.67058895} best=12334196.67058895
11: neval=756{'avg': inf, 'max': inf, 'min': 12334196.67058895} best=12334196.67058895
12: neval=763{'avg': 13808916.95079408, 'max': 27532092.514131945, 'min': 12066188.967180246} best=12066188.967180246
13: neval=725{'avg': 13349279.716579216, 'max': 26034140.884768073, 'min': 12066188.967180246} best=12066188.967180246
14: neval=747{'avg': 13103063.815385904, 'max': 36144476.88904941, 'min': 12014272.416195093} best=12014272.416195093
15: neval=746{'avg': inf, 'max': inf, 'min': 12014272.416195093} best=12014272.416195093
16: neval=754{'avg': 12591038.361894459, 'max': 20975636.760583673, 'min': 11994159.20814681} best=11994159.20814681
17: neval=776{'avg': 12374064.428594127, 'max': 19193456.17926142, 'min': 11987242.53861691} best=11987242.53861691
18: neval=739{'avg': 12245610.33951261, 'max': 23424462.900382575, 'min': 11886010.966667907} best=11886010.966667907
19: neval=710{'avg': 12143997.591467267, 'max': 20259056.380536824, 'min': 11879615.170900373} best=11879615.170900373
20: neval=774{'avg': 12073518.85602581, 'max': 20545987.80255424, 'min': 11829340.826281952} best=11829340.826281952
21: neval=741{'avg': 12009952.962024596, 'max': 20440948.088156726, 'min': 11829340.826281952} best=11829340.826281952
22: neval=762{'avg': 11967161.35437185, 'max': 20757775.671191096, 'min': 11785421.749954697} best=11785421.749954697
23: neval=740{'avg': 11927559.592737202, 'max': 18053383.610644586, 'min': 11756039.280430855} best=11756039.280430855
24: neval=751{'avg': 11952809.609127797, 'max': 21864975.184667144, 'min': 11751613.800073275} best=11751613.800073275
25: neval=766{'avg': 11896950.72947016, 'max': 23371874.591760583, 'min': 11734456.513102148} best=11734456.513102148
26: neval=775{'avg': 11859429.291025674, 'max': 17207914.471656006, 'min': 11706050.104782313} best=11706050.104782313
27: neval=756{'avg': 11822562.21157286, 'max': 25369323.502072837, 'min': 11706050.104782313} best=11706050.104782313
28: neval=755{'avg': 11794751.366923671, 'max': 22784310.12632931, 'min': 11685463.932014948} best=11685463.932014948
29: neval=736{'avg': 11773264.917164138, 'max': 19025485.442354225, 'min': 11685463.932014948} best=11685463.932014948
30: neval=748{'avg': 11765336.791464482, 'max': 19860185.52033989, 'min': 11682523.815153513} best=11682523.815153513
31: neval=758{'avg': 11758551.976664925, 'max': 21531381.83230888, 'min': 11685463.932014948} best=11682523.815153513
32: neval=745{'avg': 11737760.749594884, 'max': 23229902.05603098, 'min': 11682523.815153513} best=11682523.815153513
33: neval=745{'avg': 11740864.515398722, 'max': 23311483.681719646, 'min': 11682523.815153513} best=11682523.815153513
34: neval=728{'avg': 11697025.878948165, 'max': 15917302.26989981, 'min': 11682523.815153513} best=11682523.815153513
35: neval=748{'avg': 11711914.244169349, 'max': 21939560.961420216, 'min': 11682523.815153513} best=11682523.815153513
36: neval=738{'avg': 11704577.909533367, 'max': 15988118.700227808, 'min': 11682523.815153513} best=11682523.815153513
37: neval=738{'avg': 11717318.812984696, 'max': 15644441.251818953, 'min': 11682523.815153513} best=11682523.815153513
38: neval=750{'avg': 11706199.326508863, 'max': 15880748.358427962, 'min': 11682523.815153513} best=11682523.815153513
39: neval=758{'avg': 11757991.904069867, 'max': 23520726.34255146, 'min': 11682523.815153513} best=11682523.815153513
40: neval=753{'avg': 11715775.970738493, 'max': 18419976.98438938, 'min': 11682523.815153513} best=11682523.815153513
41: neval=738{'avg': 11725756.515448803, 'max': 20494337.529101722, 'min': 11682523.815153513} best=11682523.815153513
42: neval=775{'avg': 11708634.208635358, 'max': 16311369.313422363, 'min': 11682523.815153513} best=11682523.815153513
43: neval=728{'avg': 11704264.920150131, 'max': 15979908.15135041, 'min': 11682523.815153513} best=11682523.815153513
44: neval=781{'avg': 11731679.295773264, 'max': 21231444.248396896, 'min': 11682523.815153513} best=11682523.815153513
45: neval=748{'avg': 11712589.203755474, 'max': 18413515.266973328, 'min': 11682523.815153513} best=11682523.815153513
46: neval=764{'avg': 11700484.813241681, 'max': 16482286.592466619, 'min': 11682523.815153513} best=11682523.815153513
47: neval=737{'avg': 11692106.633306334, 'max': 14162831.52743897, 'min': 11682523.815153513} best=11682523.815153513
48: neval=760{'avg': 11708127.697102522, 'max': 16548745.417803392, 'min': 11682523.815153513} best=11682523.815153513
49: neval=733{'avg': 11700704.979207497, 'max': 20436755.689985525, 'min': 11682523.815153513} best=11682523.815153513
50: neval=751{'avg': 11719008.013291787, 'max': 18620322.21353825, 'min': 11682523.815153513} best=11682523.815153513
51: neval=741{'avg': 11715006.010701964, 'max': 19049448.764141195, 'min': 11682523.815153513} best=11682523.815153513
52: neval=730{'avg': 11717532.044393755, 'max': 19738627.10931624, 'min': 11682523.815153513} best=11682523.815153513
53: neval=742{'avg': 11706179.44688424, 'max': 19737032.9122539, 'min': 11682523.815153513} best=11682523.815153513
54: neval=764{'avg': 11708289.502148943, 'max': 17642184.97748787, 'min': 11682523.815153513} best=11682523.815153513
55: neval=741{'avg': 11704096.805044577, 'max': 16058678.713839658, 'min': 11682523.815153513} best=11682523.815153513
56: neval=767{'avg': 11703931.856693741, 'max': 19137276.23450281, 'min': 11682523.815153513} best=11682523.815153513
57: neval=750{'avg': 11700938.96587187, 'max': 16352487.832199045, 'min': 11682523.815153513} best=11682523.815153513
58: neval=719{'avg': 11733181.527094599, 'max': 19940921.48228159, 'min': 11682523.815153513} best=11682523.815153513
59: neval=757{'avg': 11712053.51035154, 'max': 16899228.075617313, 'min': 11682523.815153513} best=11682523.815153513
60: neval=766{'avg': 11703275.181882722, 'max': 17702529.36295473, 'min': 11682523.815153513} best=11682523.815153513
61: neval=727{'avg': 11707978.209199088, 'max': 18967970.07456519, 'min': 11682523.815153513} best=11682523.815153513
62: neval=764{'avg': 11713407.82656074, 'max': 18146483.162207685, 'min': 11645553.078558724} best=11645553.078558724
63: neval=739{'avg': 11714708.405737938, 'max': 16216634.00869679, 'min': 11645553.078558724} best=11645553.078558724
64: neval=776{'avg': 11701302.216559863, 'max': 17225130.75073275, 'min': 11645553.078558724} best=11645553.078558724
65: neval=756{'avg': 11717627.431782587, 'max': 19147088.204442162, 'min': 11645553.078558724} best=11645553.078558724
66: neval=715{'avg': 11693430.22415547, 'max': 14853460.978726054, 'min': 11645553.078558724} best=11645553.078558724
67: neval=755{'avg': 11696306.886558015, 'max': 19454238.813704457, 'min': 11645553.078558724} best=11645553.078558724
68: neval=743{'avg': 11668629.797631301, 'max': 15100289.123628048, 'min': 11645553.078558724} best=11645553.078558724
69: neval=745{'avg': 11677739.571050813, 'max': 21545843.55439007, 'min': 11645553.078558724} best=11645553.078558724
70: neval=742{'avg': 11676076.259454956, 'max': 24860980.14773997, 'min': 11645553.078558724} best=11645553.078558724
71: neval=737{'avg': 11664024.958479526, 'max': 15596999.013719842, 'min': 11645553.078558724} best=11645553.078558724
72: neval=743{'avg': 11670621.415745264, 'max': 19118599.71865618, 'min': 11645553.078558724} best=11645553.078558724
73: neval=740{'avg': 11681987.879925698, 'max': 18736539.813164968, 'min': 11645553.078558724} best=11645553.078558724
74: neval=794{'avg': 11689840.347528588, 'max': 21457654.88641434, 'min': 11645553.078558724} best=11645553.078558724
75: neval=768{'avg': 11660422.182814391, 'max': 15957567.519442081, 'min': 11645553.078558724} best=11645553.078558724
76: neval=770{'avg': 11682513.988393579, 'max': 17856327.433548406, 'min': 11645553.078558724} best=11645553.078558724
77: neval=759{'avg': 11674385.269443022, 'max': 16654173.884851301, 'min': 11645553.078558724} best=11645553.078558724
78: neval=769{'avg': 11664026.27562149, 'max': 15743313.979777152, 'min': 11645553.078558724} best=11645553.078558724
79: neval=753{'avg': 11651258.359067608, 'max': 13545009.545615314, 'min': 11645553.078558724} best=11645553.078558724
80: neval=755{'avg': 11664433.034022136, 'max': 15549669.922556613, 'min': 11645553.078558724} best=11645553.078558724
81: neval=752{'avg': 11701248.80149424, 'max': 19511586.59147421, 'min': 11645553.078558724} best=11645553.078558724
82: neval=748{'avg': 11657638.330716355, 'max': 14926926.206090312, 'min': 11645553.078558724} best=11645553.078558724
83: neval=752{'avg': 11673025.09262793, 'max': 21814391.990144793, 'min': 11645553.078558724} best=11645553.078558724
84: neval=745{'avg': 11658877.041636122, 'max': 19249115.07075424, 'min': 11645553.078558724} best=11645553.078558724
85: neval=778{'avg': 11675850.213897884, 'max': 23031858.710367322, 'min': 11645553.078558724} best=11645553.078558724
86: neval=726{'avg': 11673351.018236436, 'max': 17797336.960991383, 'min': 11645553.078558724} best=11645553.078558724
87: neval=745{'avg': 11672793.348079726, 'max': 17922166.688817367, 'min': 11645553.078558724} best=11645553.078558724
88: neval=765{'avg': 11664436.453089928, 'max': 16840845.45281768, 'min': 11645553.078558724} best=11645553.078558724
89: neval=757{'avg': 11678827.558437284, 'max': 17762109.611759987, 'min': 11645553.078558724} best=11645553.078558724
90: neval=762{'avg': 11694691.871207561, 'max': 20403856.289153606, 'min': 11645553.078558724} best=11645553.078558724
91: neval=741{'avg': 11677849.594022116, 'max': 18151206.47273538, 'min': 11645553.078558724} best=11645553.078558724
92: neval=775{'avg': 11690586.819462433, 'max': 20309956.29061152, 'min': 11645553.078558724} best=11645553.078558724
93: neval=744{'avg': 11655545.203115985, 'max': 14738735.75380314, 'min': 11645553.078558724} best=11645553.078558724
94: neval=749{'avg': 11675611.990553562, 'max': 23211856.026487138, 'min': 11623184.972457714} best=11623184.972457714
95: neval=747{'avg': 11686188.30019959, 'max': 21266211.804038092, 'min': 11623184.972457714} best=11623184.972457714
96: neval=736{'avg': 11658045.556029316, 'max': 18499471.19543731, 'min': 11623184.972457714} best=11623184.972457714
97: neval=769{'avg': 11662555.603142101, 'max': 17115216.073603123, 'min': 11623184.972457714} best=11623184.972457714
98: neval=751{'avg': 11674669.771652572, 'max': 18790374.370430652, 'min': 11623184.972457714} best=11623184.972457714
99: neval=747{'avg': 11660073.608386174, 'max': 15553868.342300184, 'min': 11623184.972457714} best=11623184.972457714


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 26, 52, 53, 54, 55, 70, 87, 118, 143, 162, 128]
best_individual.trans_facility = [69, 1, 32, 166, 9, 164, 172]
best_individual.unused_cities = {0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 167, 168, 169, 170, 171, 173, 174}
best_individual.fitness.values = (11467714.12042632,)