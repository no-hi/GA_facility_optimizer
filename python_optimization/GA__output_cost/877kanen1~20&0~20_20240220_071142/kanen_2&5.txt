----------------------  実行情報  ----------------------
実行時間＝469秒
個体数＝350
合計世代数＝84
=============================
Total cost: 4347439.793966761
=============================
------------------------  前提  ------------------------

waste=kanen

ごみ量17位以内：
札幌市 (349353), 函館市 (66649), 旭川市 (64890), 苫小牧市 (42288), 釧路市 (38335), 帯広市 (35291), 千歳市 (25770), 小樽市 (25049), 江別市 (24906), 北見市 (20809), 室蘭市 (20448), 岩見沢市 (12638), 登別市 (11426), 北広島市 (10822), 石狩市 (9341), 音更町 (7531), 稚内市 (7127)

焼却施設数: 2
中継施設数: 5

輸送単価＝ 877 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='kanen'
unit ='t/year'

inc_size= [776369, 164727]
inc_facility = ['札幌市', '帯広市']
inc_blocks = [['夕張市', '岩見沢市', '美唄市', '赤平市', '三笠市', '滝川市', '砂川市', '歌志内市', '南幌町', '奈井江町', '上砂川町', '由仁町', '長沼町', '栗山町', '月形町', '浦臼町', '新十津川町', '札幌市', '江別市', '千歳市', '恵庭市', '北広島市', '石狩市', '当別町', '新篠津村', '小樽市', '島牧村', '寿都町', '黒松内町', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村', '豊浦町', '安平町', '長万部町'], ['浦河町', '様似町', 'えりも町', '南富良野町', '占冠村', '斜里町', '帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町', '本別町', '足寄町', '陸別町', '浦幌町']]

trans_size=[96956, 95700, 88709, 60124, 40136]
trans_facility = ['旭川市', '苫小牧市', '函館市', '釧路市', '北見市']
trans_blocks = [['室蘭市', '苫小牧市', '登別市', '伊達市', '壮瞥町', '白老町', '厚真町', '洞爺湖町', 'むかわ町', '日高町', '平取町', '新冠町', '新ひだか町'], ['函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '八雲町', '江差町', '上ノ国町', '厚沢部町', '乙部町', '今金町', 'せたな町'], ['芦別市', '深川市', '妹背牛町', '秩父別町', '雨竜町', '北竜町', '沼田町', '旭川市', '士別市', '名寄市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町', '和寒町', '剣淵町', '下川町', '美深町', '音威子府村', '中川町', '幌加内町', '留萌市', '増毛町', '小平町', '苫前町', '羽幌町', '初山別村', '遠別町', '天塩町', '稚内市', '猿払村', '浜頓別町', '中頓別町', '枝幸町', '豊富町', '幌延町', '西興部村'], ['北見市', '網走市', '紋別市', '美幌町', '津別町', '清里町', '小清水町', '訓子府町', '置戸町', '佐呂間町', '遠軽町', '湧別町', '滝上町', '興部町', '雄武町', '大空町'], ['釧路市', '釧路町', '厚岸町', '浜中町', '標茶町', '弟子屈町', '鶴居村', '白糠町', '根室市', '別海町', '中標津町', '標津町', '羅臼町']]

arrows = [[['札幌市'], ['苫小牧市', '函館市', '旭川市']], [['帯広市'], ['釧路市', '北見市']]]


---------------------  コスト情報  ---------------------
[619660.5233708997, 2838324.003269398, 553531.3039124779, 200170.33422018134, 69237.04485066191, 66516.58434313917]

TC_direct: {'札幌市': 528881.4509159, '帯広市': 90779.07245500003}
IC_inc: {'札幌市': 440276.1952401998, '帯広市': 113255.10867227807}
OC_inc: {'札幌市': 139494.8273144279, '帯広市': 60675.506905753435}

TC_indirect: {'旭川市': 690967.2161074999, '苫小牧市': 532581.0173415, '函館市': 959292.5762503, '釧路市': 374597.78023050004, '北見市': 280885.4133396}
IC_trans: {'旭川市': 15943.368164444219, '苫小牧市': 15894.403765487414, '函館市': 15214.019217287458, '釧路市': 12289.806250424992, '北見市': 9895.447453017827}
OC_trans: {'旭川市': 15446.953237290603, '苫小牧市': 15381.337553976582, '函館市': 15012.192902890305, '釧路市': 11313.939416719344, '北見市': 9362.161232262339}


----------------------  輸送情報  ----------------------

direct 札幌市(1356/2127) t/day → receive from: 夕張市, 岩見沢市, 美唄市, 赤平市, 三笠市, 滝川市, 砂川市, 歌志内市, 南幌町, 奈井江町, 上砂川町, 由仁町, 長沼町, 栗山町, 月形町, 浦臼町, 新十津川町, 札幌市, 江別市, 千歳市, 恵庭市, 北広島市, 石狩市, 当別町, 新篠津村, 小樽市, 島牧村, 寿都町, 黒松内町, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村, 豊浦町, 安平町, 長万部町
indirect 札幌市(771/2127) t/day → receive from: 中継施設＝ 苫小牧市(95700) → receive from: 室蘭市, 苫小牧市, 登別市, 伊達市, 壮瞥町, 白老町, 厚真町, 洞爺湖町, むかわ町, 日高町, 平取町, 新冠町, 新ひだか町
函館市(88709) → receive from: 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 八雲町, 江差町, 上ノ国町, 厚沢部町, 乙部町, 今金町, せたな町
旭川市(96956) → receive from: 芦別市, 深川市, 妹背牛町, 秩父別町, 雨竜町, 北竜町, 沼田町, 旭川市, 士別市, 名寄市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町, 和寒町, 剣淵町, 下川町, 美深町, 音威子府村, 中川町, 幌加内町, 留萌市, 増毛町, 小平町, 苫前町, 羽幌町, 初山別村, 遠別町, 天塩町, 稚内市, 猿払村, 浜頓別町, 中頓別町, 枝幸町, 豊富町, 幌延町, 西興部村
direct 帯広市(177/451) t/day → receive from: 浦河町, 様似町, えりも町, 南富良野町, 占冠村, 斜里町, 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町, 本別町, 足寄町, 陸別町, 浦幌町
indirect 帯広市(275/451) t/day → receive from: 中継施設＝ 釧路市(60124) → receive from: 釧路市, 釧路町, 厚岸町, 浜中町, 標茶町, 弟子屈町, 鶴居村, 白糠町, 根室市, 別海町, 中標津町, 標津町, 羅臼町
北見市(40136) → receive from: 北見市, 網走市, 紋別市, 美幌町, 津別町, 清里町, 小清水町, 訓子府町, 置戸町, 佐呂間町, 遠軽町, 湧別町, 滝上町, 興部町, 雄武町, 大空町

----------------------  遺伝情報  ----------------------

個体数＝350
世代数＝100
0: neval=350{'avg': 6424794.061441148, 'max': 10742721.092703389, 'min': 4756183.873968299} best=4756183.873968299
1: neval=277{'avg': 5916286.471399249, 'max': 9078423.664478015, 'min': 4550403.345104362} best=4550403.345104362
2: neval=267{'avg': 5502840.547509091, 'max': 6586378.384101591, 'min': 4550403.345104362} best=4550403.345104362
3: neval=273{'avg': 5290617.714837217, 'max': 7158142.534096907, 'min': 4550403.345104362} best=4550403.345104362
4: neval=278{'avg': 5064662.301940544, 'max': 6538958.307979801, 'min': 4465667.833126616} best=4465667.833126616
5: neval=274{'avg': 4887059.898980639, 'max': 9174540.542862933, 'min': 4465667.833126616} best=4465667.833126616
6: neval=288{'avg': 4717562.341025922, 'max': 5709866.402177526, 'min': 4396897.900120512} best=4396897.900120512
7: neval=281{'avg': 4643018.017133359, 'max': 5539123.270326243, 'min': 4394431.280245439} best=4394431.280245439
8: neval=281{'avg': 4558553.848453528, 'max': 8063073.138119816, 'min': 4370742.148410922} best=4370742.148410922
9: neval=282{'avg': 4491474.083201742, 'max': 5389691.868737721, 'min': 4364117.363186939} best=4364117.363186939
10: neval=282{'avg': 4468029.534108481, 'max': 6426911.046019218, 'min': 4364117.363186939} best=4364117.363186939
11: neval=274{'avg': 4437300.238960828, 'max': 11165465.595198343, 'min': 4364117.363186939} best=4364117.363186939
12: neval=270{'avg': 4398651.922142058, 'max': 5065817.947997725, 'min': 4364117.363186939} best=4364117.363186939
13: neval=267{'avg': 4395055.798348401, 'max': 8037776.775461232, 'min': 4347439.793966761} best=4347439.793966761
14: neval=282{'avg': 4369419.985634335, 'max': 5038312.37795628, 'min': 4347439.793966761} best=4347439.793966761
15: neval=279{'avg': 4373524.337534195, 'max': 5824101.507488354, 'min': 4347439.793966761} best=4347439.793966761
16: neval=284{'avg': 4362830.8078470975, 'max': 4364117.363186939, 'min': 4347439.793966761} best=4347439.793966761
17: neval=269{'avg': 4363722.563448291, 'max': 4889356.530409175, 'min': 4347439.793966761} best=4347439.793966761
18: neval=272{'avg': 4360866.949998961, 'max': 5128876.099160677, 'min': 4347439.793966761} best=4347439.793966761
19: neval=271{'avg': 4359307.274472099, 'max': 5140054.975161923, 'min': 4347439.793966761} best=4347439.793966761
20: neval=288{'avg': 4366048.874821654, 'max': 6799376.764235423, 'min': 4347439.793966761} best=4347439.793966761
21: neval=253{'avg': 4363633.589492279, 'max': 9626108.54842876, 'min': 4347439.793966761} best=4347439.793966761
22: neval=304{'avg': 4351652.90056674, 'max': 5190825.3434351375, 'min': 4347439.793966761} best=4347439.793966761
23: neval=270{'avg': 4347439.793966762, 'max': 4347439.793966761, 'min': 4347439.793966761} best=4347439.793966761
24: neval=276{'avg': 4350828.385263397, 'max': 4979943.357790895, 'min': 4347439.793966761} best=4347439.793966761
25: neval=276{'avg': 4347439.793966762, 'max': 4347439.793966761, 'min': 4347439.793966761} best=4347439.793966761
26: neval=271{'avg': 4348913.800295992, 'max': 4863342.0091972565, 'min': 4347439.793966761} best=4347439.793966761
27: neval=276{'avg': 4347439.793966762, 'max': 4347439.793966761, 'min': 4347439.793966761} best=4347439.793966761
28: neval=266{'avg': 4347439.793966762, 'max': 4347439.793966761, 'min': 4347439.793966761} best=4347439.793966761
29: neval=280{'avg': 4352981.669755897, 'max': 5537698.948554047, 'min': 4347439.793966761} best=4347439.793966761
30: neval=284{'avg': 4357283.744591279, 'max': 5597691.932405015, 'min': 4347439.793966761} best=4347439.793966761
31: neval=282{'avg': 4352030.624656609, 'max': 4708432.523867946, 'min': 4347439.793966761} best=4347439.793966761
32: neval=279{'avg': 4350593.876456143, 'max': 4830680.058724641, 'min': 4347439.793966761} best=4347439.793966761
33: neval=276{'avg': 4357256.494990502, 'max': 6030724.845535189, 'min': 4347439.793966761} best=4347439.793966761
34: neval=285{'avg': 4349962.277156633, 'max': 5172592.092548229, 'min': 4347439.793966761} best=4347439.793966761
35: neval=281{'avg': 4349001.259347148, 'max': 4636408.071855465, 'min': 4347439.793966761} best=4347439.793966761
36: neval=278{'avg': 4351714.255268688, 'max': 4985716.968378572, 'min': 4347439.793966761} best=4347439.793966761
37: neval=273{'avg': 4347439.793966762, 'max': 4347439.793966761, 'min': 4347439.793966761} best=4347439.793966761
38: neval=270{'avg': 4347439.793966762, 'max': 4347439.793966761, 'min': 4347439.793966761} best=4347439.793966761
39: neval=260{'avg': 4347439.793966762, 'max': 4347439.793966761, 'min': 4347439.793966761} best=4347439.793966761
40: neval=294{'avg': 4348125.08063309, 'max': 4587290.127181353, 'min': 4347439.793966761} best=4347439.793966761
41: neval=268{'avg': 4348897.158234473, 'max': 4624559.606035548, 'min': 4347439.793966761} best=4347439.793966761
42: neval=270{'avg': 4352380.688605954, 'max': 5001685.398786292, 'min': 4347439.793966761} best=4347439.793966761
43: neval=262{'avg': 4349230.009981383, 'max': 4786177.280084729, 'min': 4347439.793966761} best=4347439.793966761
44: neval=269{'avg': 4349106.2431346215, 'max': 4742858.883718492, 'min': 4347439.793966761} best=4347439.793966761
45: neval=284{'avg': 4350672.525502154, 'max': 4915666.793134631, 'min': 4347439.793966761} best=4347439.793966761
46: neval=262{'avg': 4352004.664573454, 'max': 5376917.507141101, 'min': 4347439.793966761} best=4347439.793966761
47: neval=280{'avg': 4356121.949975132, 'max': 5849834.198120844, 'min': 4347439.793966761} best=4347439.793966761
48: neval=278{'avg': 4348508.076261146, 'max': 4691846.002691075, 'min': 4347439.793966761} best=4347439.793966761
49: neval=257{'avg': 4357907.925666373, 'max': 5598534.43831007, 'min': 4347439.793966761} best=4347439.793966761
50: neval=311{'avg': 4354608.731781601, 'max': 5222795.606322904, 'min': 4347439.793966761} best=4347439.793966761
51: neval=269{'avg': 4354573.7797554545, 'max': 5178527.154790892, 'min': 4347439.793966761} best=4347439.793966761
52: neval=285{'avg': 4347439.793966762, 'max': 4347439.793966761, 'min': 4347439.793966761} best=4347439.793966761
53: neval=290{'avg': 4348403.206560753, 'max': 4684634.20186363, 'min': 4347439.793966761} best=4347439.793966761
54: neval=281{'avg': 4351797.176039972, 'max': 5254466.496479147, 'min': 4347439.793966761} best=4347439.793966761
55: neval=275{'avg': 4351521.387184756, 'max': 5211462.549490146, 'min': 4347439.793966761} best=4347439.793966761
56: neval=282{'avg': 4349928.260495958, 'max': 4582421.130002704, 'min': 4347439.793966761} best=4347439.793966761
57: neval=273{'avg': 4347617.202557162, 'max': 4409532.800606907, 'min': 4347439.793966761} best=4347439.793966761
58: neval=278{'avg': 4348938.7507616, 'max': 4872074.672160022, 'min': 4347439.793966761} best=4347439.793966761
59: neval=282{'avg': 4358989.336791468, 'max': 6522845.850346695, 'min': 4347439.793966761} best=4347439.793966761
60: neval=286{'avg': 4351562.851861463, 'max': 4763320.677464569, 'min': 4347439.793966761} best=4347439.793966761
61: neval=292{'avg': 4352273.635735866, 'max': 5434743.011130519, 'min': 4347439.793966761} best=4347439.793966761
62: neval=278{'avg': 4350158.204921572, 'max': 4630305.928250942, 'min': 4347439.793966761} best=4347439.793966761
63: neval=265{'avg': 4361840.892388903, 'max': 6286708.9287928995, 'min': 4347439.793966761} best=4347439.793966761
64: neval=275{'avg': 4351558.964969159, 'max': 4688542.147545914, 'min': 4347439.793966761} best=4347439.793966761
65: neval=267{'avg': 4351891.2109758295, 'max': 5243944.092146144, 'min': 4347439.793966761} best=4347439.793966761
66: neval=272{'avg': 4349870.863557282, 'max': 4706750.700068952, 'min': 4347439.793966761} best=4347439.793966761
67: neval=290{'avg': 4348008.980666468, 'max': 4546655.13886386, 'min': 4347439.793966761} best=4347439.793966761
68: neval=274{'avg': 4347439.793966762, 'max': 4347439.793966761, 'min': 4347439.793966761} best=4347439.793966761
69: neval=281{'avg': 4347439.793966762, 'max': 4347439.793966761, 'min': 4347439.793966761} best=4347439.793966761
70: neval=285{'avg': 4352557.358456055, 'max': 5500653.234214994, 'min': 4347439.793966761} best=4347439.793966761
71: neval=274{'avg': 4350910.280437494, 'max': 5050434.136359925, 'min': 4347439.793966761} best=4347439.793966761
72: neval=247{'avg': 4351798.956122666, 'max': 5639658.334805614, 'min': 4347439.793966761} best=4347439.793966761
73: neval=290{'avg': 4348241.464165575, 'max': 4628024.36355141, 'min': 4347439.793966761} best=4347439.793966761
74: neval=288{'avg': 4354475.63619261, 'max': 5491037.692302149, 'min': 4347439.793966761} best=4347439.793966761
75: neval=271{'avg': 4351407.05411483, 'max': 5596829.261905858, 'min': 4347439.793966761} best=4347439.793966761
76: neval=278{'avg': 4348050.299584446, 'max': 4561116.760156198, 'min': 4347439.793966761} best=4347439.793966761
77: neval=286{'avg': 4350416.214223188, 'max': 5051992.475819037, 'min': 4347439.793966761} best=4347439.793966761
78: neval=290{'avg': 4350351.874466589, 'max': 5274892.181309355, 'min': 4347439.793966761} best=4347439.793966761
79: neval=280{'avg': 4348786.754184752, 'max': 4818875.870263172, 'min': 4347439.793966761} best=4347439.793966761
80: neval=265{'avg': 4349206.655554616, 'max': 4666057.435980269, 'min': 4347439.793966761} best=4347439.793966761
81: neval=277{'avg': 4349877.902928874, 'max': 4928279.823330092, 'min': 4347439.793966761} best=4347439.793966761
82: neval=274{'avg': 4347439.793966762, 'max': 4347439.793966761, 'min': 4347439.793966761} best=4347439.793966761
83: neval=273{'avg': 4353242.758202682, 'max': 5482020.149691694, 'min': 4347439.793966761} best=4347439.793966761


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 143]
best_individual.trans_facility = [53, 70, 87, 125, 162]
best_individual.unused_cities = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174}
best_individual.fitness.values = (4347439.793966761,)