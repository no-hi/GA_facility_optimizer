局----------------------  実行情報  ----------------------
実行時間＝3368秒
個体数＝1050
合計世代数＝100
==============================
Total cost: 2052609.8510258053
==============================
------------------------  前提  ------------------------

waste=kanen

ごみ量31位以内：
札幌市 (349353), 函館市 (66649), 旭川市 (64890), 苫小牧市 (42288), 釧路市 (38335), 帯広市 (35291), 千歳市 (25770), 小樽市 (25049), 江別市 (24906), 北見市 (20809), 室蘭市 (20448), 岩見沢市 (12638), 登別市 (11426), 北広島市 (10822), 石狩市 (9341), 音更町 (7531), 稚内市 (7127), 恵庭市 (6987), 伊達市 (6907), 網走市 (6299), 滝川市 (5831), 北斗市 (5150), 七飯町 (5008), 中標津町 (4837), 根室市 (4736), 幕別町 (4414), 新ひだか町 (4277), 釧路町 (4090), 美幌町 (4063), 白老町 (3395), 紋別市 (3325)

焼却施設数: 9
中継施設数: 12

輸送単価＝ 877 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='kanen'
unit ='t/year'

inc_size= [448337, 98268, 90455, 88882, 61374, 60124, 44025, 40350, 9281]
inc_facility = ['札幌市', '旭川市', '苫小牧市', '函館市', '帯広市', '釧路市', '室蘭市', '北見市', '稚内市']
inc_blocks = [['札幌市', '石狩市', '喜茂別町', '京極町'], ['寿都町', '黒松内町', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '俱知安町', '室蘭市', '登別市', '伊達市', '豊浦町', '壮瞥町', '洞爺湖町', '長万部町'], ['苫小牧市', '白老町', '厚真町', 'むかわ町', '日高町', '平取町'], ['函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '八雲町', '江差町', '上ノ国町', '厚沢部町', '乙部町'], ['芦別市', '深川市', '秩父別町', '沼田町', '旭川市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町', '和寒町', '幌加内町', '留萌市', '小平町'], ['中川町', '初山別村', '遠別町', '天塩町', '稚内市', '猿払村', '浜頓別町', '中頓別町', '枝幸町', '豊富町', '幌延町'], ['北見市', '美幌町', '津別町', '斜里町', '訓子府町', '置戸町', '佐呂間町', '遠軽町', '陸別町'], ['南富良野町', '帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町', '本別町', '足寄町', '浦幌町'], ['釧路市', '釧路町', '厚岸町', '浜中町', '標茶町', '弟子屈町', '鶴居村', '白糠町']]

trans_size=[38452, 34276, 32045, 19146, 11235, 7726, 7656, 7532, 5524, 4736, 4586, 3703]
trans_facility = ['江別市', '千歳市', '小樽市', '岩見沢市', '滝川市', '中標津町', '新ひだか町', '網走市', '士別市', '根室市', '紋別市', 'せたな町']
trans_blocks = [['夕張市', '岩見沢市', '美唄市', '三笠市', '由仁町', '栗山町', '月形町', '新篠津村'], ['赤平市', '滝川市', '砂川市', '歌志内市', '奈井江町', '上砂川町', '浦臼町', '新十津川町', '妹背牛町', '雨竜町', '北竜町', '増毛町'], ['南幌町', '長沼町', '江別市', '北広島市', '当別町'], ['千歳市', '恵庭市', '安平町', '占冠村'], ['小樽市', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村'], ['網走市', '清里町', '小清水町', '大空町'], ['新冠町', '浦河町', '様似町', 'えりも町', '新ひだか町'], ['島牧村', '今金町', 'せたな町'], ['士別市', '名寄市', '剣淵町', '下川町', '美深町', '音威子府村', '苫前町', '羽幌町'], ['紋別市', '湧別町', '滝上町', '興部町', '西興部村', '雄武町'], ['根室市'], ['別海町', '中標津町', '標津町', '羅臼町']]

arrows = [[['札幌市'], ['小樽市', '岩見沢市', '江別市']], [['苫小牧市'], ['千歳市', '新ひだか町']], [['函館市'], ['せたな町']], [['旭川市'], ['士別市', '滝川市']], [['北見市'], ['網走市', '紋別市']], [['釧路市'], ['根室市', '中標津町']]]


---------------------  コスト情報  ---------------------
[323155.10610970017, 356500.2053448, 687777.8989636931, 542001.1163101534, 71127.59341985857, 72047.93087760052]

TC_direct: {'札幌市': 12310.204053899999, '旭川市': 45934.29188119999, '苫小牧市': 18456.8913974, '函館市': 59564.06951239999, '帯広市': 58324.53919889999, '釧路市': 28493.500401399997, '室蘭市': 58683.3835691, '北見市': 23773.650575800002, '稚内市': 17614.575519600003}
IC_inc: {'札幌市': 254250.37391421536, '旭川市': 78036.81299975277, '苫小牧市': 73512.00649131913, '函館市': 72588.05359916264, '帯広市': 55578.54350715017, '釧路市': 54760.05802276098, '室蘭市': 43739.884314511546, '北見市': 41075.56820500691, '稚内市': 14236.597909813574}
OC_inc: {'札幌市': 80555.37044069076, '旭川市': 69826.63793592765, '苫小牧市': 69239.47541065168, '函館市': 69068.38508818335, '帯広市': 62749.58328038413, '釧路市': 62291.18196717612, '室蘭市': 54701.48208580893, '北見市': 52465.32344821266, '稚内市': 21103.676653118102}

TC_indirect: {'江別市': 40466.7595131, '千歳市': 42838.88438439999, '小樽市': 63528.13045340001, '岩見沢市': 37022.66110500001, '滝川市': 25311.854208, '中標津町': 29369.3088606, '新ひだか町': 31834.173747899993, '網走市': 13655.4745749, '士別市': 20695.0192451, '根室市': 18198.1425152, '紋別市': 16998.878966900003, 'せたな町': 16580.917770300002}
IC_trans: {'江別市': 9778.587459954684, '千歳市': 9273.839023359767, '小樽市': 8901.14901254098, '岩見沢市': 7108.456916668126, '滝川市': 5684.575153584573, '中標津町': 4873.385153486525, '新ひだか町': 4859.522285113481, '網走市': 4834.763768829587, '士別市': 4191.026041881543, '根室市': 3988.3449240458713, '紋別市': 3947.3510067387924, 'せたな町': 3686.5926736546476}
OC_trans: {'江別市': 9248.58092778556, '千歳市': 8259.444425652486, '小樽市': 8100.0350870924085, '岩見沢市': 6381.252090114885, '滝川市': 5610.229209668999, '中標津町': 5189.715901674769, '新ひだか町': 5180.491996255371, '網走市': 5164.051789072328, '士別市': 4876.4217508037855, '根室市': 4749.274515721566, '紋別市': 4723.865118711862, 'せたな町': 4564.568065046502}


----------------------  輸送情報  ----------------------

direct 札幌市(983/1228) t/day → receive from: 札幌市, 石狩市, 喜茂別町, 京極町
indirect 札幌市(246/1228) t/day → receive from: 中継施設＝ 小樽市(32045) → receive from: 小樽市, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村
岩見沢市(19146) → receive from: 夕張市, 岩見沢市, 美唄市, 三笠市, 由仁町, 栗山町, 月形町, 新篠津村
江別市(38452) → receive from: 南幌町, 長沼町, 江別市, 北広島市, 当別町
direct 旭川市(223/269) t/day → receive from: 芦別市, 深川市, 秩父別町, 沼田町, 旭川市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町, 和寒町, 幌加内町, 留萌市, 小平町
indirect 旭川市(46/269) t/day → receive from: 中継施設＝ 士別市(5524) → receive from: 士別市, 名寄市, 剣淵町, 下川町, 美深町, 音威子府村, 苫前町, 羽幌町
滝川市(11235) → receive from: 赤平市, 滝川市, 砂川市, 歌志内市, 奈井江町, 上砂川町, 浦臼町, 新十津川町, 妹背牛町, 雨竜町, 北竜町, 増毛町
direct 苫小牧市(133/248) t/day → receive from: 苫小牧市, 白老町, 厚真町, むかわ町, 日高町, 平取町
indirect 苫小牧市(115/248) t/day → receive from: 中継施設＝ 千歳市(34276) → receive from: 千歳市, 恵庭市, 安平町, 占冠村
新ひだか町(7656) → receive from: 新冠町, 浦河町, 様似町, えりも町, 新ひだか町
direct 函館市(233/244) t/day → receive from: 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 八雲町, 江差町, 上ノ国町, 厚沢部町, 乙部町
indirect 函館市(10/244) t/day → receive from: 中継施設＝ せたな町(3703) → receive from: 島牧村, 今金町, せたな町
direct 帯広市(168/168) t/day → receive from: 南富良野町, 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町, 本別町, 足寄町, 浦幌町
direct 釧路市(131/165) t/day → receive from: 釧路市, 釧路町, 厚岸町, 浜中町, 標茶町, 弟子屈町, 鶴居村, 白糠町
indirect 釧路市(34/165) t/day → receive from: 中継施設＝ 根室市(4736) → receive from: 根室市
中標津町(7726) → receive from: 別海町, 中標津町, 標津町, 羅臼町
direct 室蘭市(121/121) t/day → receive from: 寿都町, 黒松内町, 蘭越町, ニセコ町, 真狩村, 留寿都村, 俱知安町, 室蘭市, 登別市, 伊達市, 豊浦町, 壮瞥町, 洞爺湖町, 長万部町
direct 北見市(77/111) t/day → receive from: 北見市, 美幌町, 津別町, 斜里町, 訓子府町, 置戸町, 佐呂間町, 遠軽町, 陸別町
indirect 北見市(33/111) t/day → receive from: 中継施設＝ 網走市(7532) → receive from: 網走市, 清里町, 小清水町, 大空町
紋別市(4586) → receive from: 紋別市, 湧別町, 滝上町, 興部町, 西興部村, 雄武町
direct 稚内市(25/25) t/day → receive from: 中川町, 初山別村, 遠別町, 天塩町, 稚内市, 猿払村, 浜頓別町, 中頓別町, 枝幸町, 豊富町, 幌延町

----------------------  遺伝情報  ----------------------

個体数＝1050
世代数＝100
0: neval=1050{'avg': inf, 'max': inf, 'min': 2372941.652755158} best=2372941.652755158
1: neval=861{'avg': inf, 'max': inf, 'min': 2370517.947325788} best=2370517.947325788
2: neval=816{'avg': inf, 'max': inf, 'min': 2370517.947325788} best=2370517.947325788
3: neval=827{'avg': inf, 'max': inf, 'min': 2370517.947325788} best=2370517.947325788
4: neval=808{'avg': inf, 'max': inf, 'min': 2370517.947325788} best=2370517.947325788
5: neval=838{'avg': inf, 'max': inf, 'min': 2333984.71570058} best=2333984.71570058
6: neval=820{'avg': inf, 'max': inf, 'min': 2333984.71570058} best=2333984.71570058
7: neval=828{'avg': inf, 'max': inf, 'min': 2333984.71570058} best=2333984.71570058
8: neval=835{'avg': inf, 'max': inf, 'min': 2370517.947325788} best=2333984.71570058
9: neval=806{'avg': inf, 'max': inf, 'min': 2370517.947325788} best=2333984.71570058
10: neval=808{'avg': inf, 'max': inf, 'min': 2370517.947325788} best=2333984.71570058
11: neval=843{'avg': inf, 'max': inf, 'min': 2323479.1243937463} best=2323479.1243937463
12: neval=839{'avg': inf, 'max': inf, 'min': 2323479.1243937463} best=2323479.1243937463
13: neval=826{'avg': inf, 'max': inf, 'min': 2331352.696783343} best=2323479.1243937463
14: neval=845{'avg': inf, 'max': inf, 'min': 2289254.8115359335} best=2289254.8115359335
15: neval=820{'avg': inf, 'max': inf, 'min': 2272067.533453363} best=2272067.533453363
16: neval=850{'avg': inf, 'max': inf, 'min': 2206120.788516488} best=2206120.788516488
17: neval=870{'avg': inf, 'max': inf, 'min': 2206120.788516488} best=2206120.788516488
18: neval=813{'avg': 2457256.4044972975, 'max': 4709032.136756945, 'min': 2202895.2675967957} best=2202895.2675967957
19: neval=824{'avg': 2438169.4884580723, 'max': 4881998.36923684, 'min': 2176227.2902205577} best=2176227.2902205577
20: neval=839{'avg': 2394619.784953514, 'max': 4506464.580598602, 'min': 2176227.2902205577} best=2176227.2902205577
21: neval=827{'avg': 2359645.5850208793, 'max': 5820166.425548469, 'min': 2168893.6530150967} best=2168893.6530150967
22: neval=805{'avg': 2319921.2962846686, 'max': 7815575.232899218, 'min': 2144652.537237085} best=2144652.537237085
23: neval=873{'avg': inf, 'max': inf, 'min': 2168893.6530150967} best=2144652.537237085
24: neval=854{'avg': inf, 'max': inf, 'min': 2171803.717138706} best=2144652.537237085
25: neval=835{'avg': 2238632.9691187604, 'max': 4364973.110343235, 'min': 2160704.211199674} best=2144652.537237085
26: neval=863{'avg': 2211782.1772818356, 'max': 3853735.743372558, 'min': 2106893.7340325247} best=2106893.7340325247
27: neval=843{'avg': 2186067.7156881997, 'max': 2688190.642416186, 'min': 2106893.7340325247} best=2106893.7340325247
28: neval=833{'avg': 2169729.414831376, 'max': 3583805.8225067207, 'min': 2092934.6983711359} best=2092934.6983711359
29: neval=859{'avg': 2149654.202000234, 'max': 2805061.6381557193, 'min': 2092934.6983711359} best=2092934.6983711359
30: neval=865{'avg': 2133936.856284259, 'max': 3012563.5802573874, 'min': 2087264.812010523} best=2087264.812010523
31: neval=799{'avg': 2117270.587949749, 'max': 2608606.505430112, 'min': 2074777.0174209} best=2074777.0174209
32: neval=842{'avg': 2104758.338523237, 'max': 3496227.7325593536, 'min': 2074040.184671904} best=2074040.184671904
33: neval=830{'avg': 2097518.974292349, 'max': 3530817.97023177, 'min': 2064013.4911136085} best=2064013.4911136085
34: neval=832{'avg': 2090249.052787279, 'max': 2804307.1345919794, 'min': 2064013.4911136085} best=2064013.4911136085
35: neval=796{'avg': 2081457.7560577996, 'max': 2751739.7066229708, 'min': 2060801.3197222317} best=2060801.3197222317
36: neval=862{'avg': 2076146.9385395714, 'max': 3411316.7895269017, 'min': 2059597.2548798441} best=2059597.2548798441
37: neval=815{'avg': 2070504.2828669385, 'max': 2735602.473347703, 'min': 2057191.270370945} best=2057191.270370945
38: neval=841{'avg': 2066923.9895985576, 'max': 2728246.7326528537, 'min': 2055749.6995653452} best=2055749.6995653452
39: neval=829{'avg': 2067349.06895751, 'max': 2799700.849285505, 'min': 2055749.6995653452} best=2055749.6995653452
40: neval=823{'avg': 2062710.314233582, 'max': 3249918.8266124823, 'min': 2055749.6995653452} best=2055749.6995653452
41: neval=815{'avg': 2064854.0483540948, 'max': 3760590.5132341348, 'min': 2055344.0296558319} best=2055344.0296558319
42: neval=837{'avg': 2058704.7709996896, 'max': 2661680.3191451873, 'min': 2055344.0296558319} best=2055344.0296558319
43: neval=814{'avg': 2059812.1804868854, 'max': 2938002.4436771786, 'min': 2055344.0296558319} best=2055344.0296558319
44: neval=850{'avg': 2059299.8747025616, 'max': 2715591.007560105, 'min': 2055344.0296558319} best=2055344.0296558319
45: neval=816{'avg': 2056858.3666037219, 'max': 2601614.9799042065, 'min': 2055344.0296558319} best=2055344.0296558319
46: neval=830{'avg': 2061773.1097438077, 'max': 3305368.7775015314, 'min': 2055344.0296558319} best=2055344.0296558319
47: neval=846{'avg': 2062078.1993428476, 'max': 3727628.519236253, 'min': 2055344.0296558319} best=2055344.0296558319
48: neval=805{'avg': 2058413.6804692277, 'max': 2682213.260562402, 'min': 2055344.0296558319} best=2055344.0296558319
49: neval=808{'avg': 2057191.6010825979, 'max': 2658730.4532664786, 'min': 2055344.0296558319} best=2055344.0296558319
50: neval=848{'avg': 2061523.901441927, 'max': 2904959.712416198, 'min': 2055344.0296558319} best=2055344.0296558319
51: neval=835{'avg': 2060490.2007676188, 'max': 2956838.5137431975, 'min': 2055344.0296558319} best=2055344.0296558319
52: neval=832{'avg': 2057856.4930979484, 'max': 2697075.054000459, 'min': 2055344.0296558319} best=2055344.0296558319
53: neval=818{'avg': 2063818.2680946232, 'max': 3697058.254193098, 'min': 2055344.0296558319} best=2055344.0296558319
54: neval=811{'avg': 2057681.6730133693, 'max': 2666165.445861526, 'min': 2055344.0296558319} best=2055344.0296558319
55: neval=831{'avg': 2059115.5942593012, 'max': 3187084.983393802, 'min': 2055344.0296558319} best=2055344.0296558319
56: neval=820{'avg': 2060360.29486625, 'max': 3104925.6038206816, 'min': 2055344.0296558319} best=2055344.0296558319
57: neval=851{'avg': 2062904.0681479208, 'max': 3449296.2766939434, 'min': 2055344.0296558319} best=2055344.0296558319
58: neval=850{'avg': 2058733.9921537917, 'max': 2881629.9691065936, 'min': 2055344.0296558319} best=2055344.0296558319
59: neval=848{'avg': 2058232.3613749063, 'max': 2891582.988199053, 'min': 2055344.0296558319} best=2055344.0296558319
60: neval=817{'avg': 2058747.7843940936, 'max': 3872182.021040152, 'min': 2055344.0296558319} best=2055344.0296558319
61: neval=837{'avg': 2058259.3606376217, 'max': 2919419.920771411, 'min': 2055344.0296558319} best=2055344.0296558319
62: neval=822{'avg': 2059716.7635677725, 'max': 2956800.5441681305, 'min': 2055344.0296558319} best=2055344.0296558319
63: neval=843{'avg': 2059985.6201317057, 'max': 2897275.281901546, 'min': 2055344.0296558319} best=2055344.0296558319
64: neval=814{'avg': 2057962.2735033967, 'max': 3065233.5690852986, 'min': 2055344.0296558319} best=2055344.0296558319
65: neval=832{'avg': 2059324.2411993616, 'max': 3260350.921966064, 'min': 2055344.0296558319} best=2055344.0296558319
66: neval=821{'avg': 2058607.029263465, 'max': 2929749.807523821, 'min': 2055344.0296558319} best=2055344.0296558319
67: neval=830{'avg': 2058915.8446831417, 'max': 3413521.734712629, 'min': 2055344.0296558319} best=2055344.0296558319
68: neval=852{'avg': 2064195.1507265123, 'max': 4165702.350948686, 'min': 2055344.0296558319} best=2055344.0296558319
69: neval=843{'avg': 2060469.1266817139, 'max': 3050728.5504426723, 'min': 2055344.0296558319} best=2055344.0296558319
70: neval=818{'avg': 2063033.6890327018, 'max': 3922757.5227277717, 'min': 2055344.0296558319} best=2055344.0296558319
71: neval=856{'avg': 2064089.433066339, 'max': 3956153.154494411, 'min': 2055344.0296558319} best=2055344.0296558319
72: neval=855{'avg': 2061637.8400412032, 'max': 3182680.790594173, 'min': 2055344.0296558319} best=2055344.0296558319
73: neval=820{'avg': 2059462.912679966, 'max': 2858122.4731232207, 'min': 2055344.0296558319} best=2055344.0296558319
74: neval=834{'avg': 2061826.9728068556, 'max': 3623605.939362743, 'min': 2055344.0296558319} best=2055344.0296558319
75: neval=802{'avg': 2059440.7025993792, 'max': 3358205.784194461, 'min': 2055344.0296558319} best=2055344.0296558319
76: neval=843{'avg': 2063384.2725027003, 'max': 2992449.8874524245, 'min': 2055344.0296558319} best=2055344.0296558319
77: neval=831{'avg': 2060528.8745423371, 'max': 2888349.6154565807, 'min': 2055344.0296558319} best=2055344.0296558319
78: neval=843{'avg': 2056855.6735012296, 'max': 2747571.590793679, 'min': 2055344.0296558319} best=2055344.0296558319
79: neval=836{'avg': 2057858.369763783, 'max': 2743529.3976962627, 'min': 2055344.0296558319} best=2055344.0296558319
80: neval=821{'avg': 2059325.3536498302, 'max': 3740813.011844311, 'min': 2055344.0296558319} best=2055344.0296558319
81: neval=838{'avg': 2059293.4249157587, 'max': 3512286.878968275, 'min': 2055344.0296558319} best=2055344.0296558319
82: neval=830{'avg': 2057851.7248913674, 'max': 2733274.7709053457, 'min': 2055344.0296558319} best=2055344.0296558319
83: neval=818{'avg': 2058258.3027190445, 'max': 3072336.0354877957, 'min': 2055344.0296558319} best=2055344.0296558319
84: neval=842{'avg': 2064270.1905837667, 'max': 3624485.303771513, 'min': 2055344.0296558319} best=2055344.0296558319
85: neval=792{'avg': 2058107.7929833853, 'max': 2865822.690488917, 'min': 2055344.0296558319} best=2055344.0296558319
86: neval=815{'avg': 2063341.4883493842, 'max': 3828644.455345874, 'min': 2055344.0296558319} best=2055344.0296558319
87: neval=845{'avg': 2058260.115420306, 'max': 3020501.1618982693, 'min': 2055344.0296558319} best=2055344.0296558319
88: neval=856{'avg': 2057855.9922664561, 'max': 3016237.969528646, 'min': 2055344.0296558319} best=2055344.0296558319
89: neval=820{'avg': 2059801.7185680063, 'max': 2978180.735893447, 'min': 2055344.0296558319} best=2055344.0296558319
90: neval=828{'avg': 2060269.4262101774, 'max': 2859482.7376733334, 'min': 2055344.0296558319} best=2055344.0296558319
91: neval=825{'avg': 2063970.5080012612, 'max': 3959161.9367833044, 'min': 2055344.0296558319} best=2055344.0296558319
92: neval=840{'avg': 2057327.2328461288, 'max': 2856754.461172668, 'min': 2055344.0296558319} best=2055344.0296558319
93: neval=803{'avg': 2058857.5188723293, 'max': 3285188.060270683, 'min': 2055344.0296558319} best=2055344.0296558319
94: neval=839{'avg': 2059078.6654080795, 'max': 3220659.170388884, 'min': 2055344.0296558319} best=2055344.0296558319
95: neval=832{'avg': 2058798.2788284125, 'max': 3074375.1769850818, 'min': 2055344.0296558319} best=2055344.0296558319
96: neval=822{'avg': 2056933.2446260857, 'max': 2870112.175144898, 'min': 2055344.0296558319} best=2055344.0296558319
97: neval=833{'avg': 2057675.5995806286, 'max': 3341565.0076732924, 'min': 2055344.0296558319} best=2055344.0296558319
98: neval=858{'avg': 2058022.9008721325, 'max': 2711023.438166699, 'min': 2055344.0296558319} best=2055344.0296558319
99: neval=837{'avg': 2059181.2789999545, 'max': 3407665.2051969725, 'min': 2055344.0296558319} best=2055344.0296558319


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 52, 53, 70, 87, 118, 125, 143, 162]
best_individual.trans_facility = [1, 6, 25, 26, 32, 126, 69, 86, 88, 127, 170, 172]
best_individual.unused_cities = {0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174}
best_individual.fitness.values = (2052609.8510258053,)