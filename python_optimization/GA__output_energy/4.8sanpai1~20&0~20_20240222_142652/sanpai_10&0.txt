----------------------  実行情報  ----------------------
実行時間＝673秒
個体数＝500
合計世代数＝100
==============================
Total cost: -3883006.810558743
==============================
------------------------  前提  ------------------------

waste=sanpai

ごみ量20位以内：
苫小牧市 (2039382), 釧路市 (1177668), 札幌市 (728360), 室蘭市 (677679), 登別市 (430316), 伊達市 (334124), 帯広市 (182218), 旭川市 (138210), 函館市 (133081), 釧路町 (121597), 白老町 (99038), 北見市 (91496), 小樽市 (91037), 千歳市 (69923), 江別市 (64214), 安平町 (60328), 洞爺湖町 (54767), 厚岸町 (49048), 岩見沢市 (47176), 稚内市 (46228)

焼却施設数: 10
中継施設数: 0

輸送単価＝ 4.8 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='sanpai'
unit ='t/year'

inc_size= [2396432, 1591265, 1107995, 1091275, 502712, 332263, 315100, 255303, 192760, 83187]
inc_facility = ['苫小牧市', '釧路市', '室蘭市', '札幌市', '伊達市', '帯広市', '旭川市', '函館市', '北見市', '稚内市']
inc_blocks = [['夕張市', '岩見沢市', '美唄市', '三笠市', '南幌町', '由仁町', '長沼町', '栗山町', '月形町', '札幌市', '江別市', '恵庭市', '北広島市', '石狩市', '当別町', '新篠津村', '小樽市', '岩内町', '積丹町', '古平町', '仁木町', '余市町', '赤井川村'], ['室蘭市', '登別市'], ['千歳市', '苫小牧市', '白老町', '厚真町', '安平町', 'むかわ町', '日高町', '平取町', '新冠町', '浦河町', '新ひだか町'], ['島牧村', '寿都町', '黒松内町', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町', '共和町', '泊村', '神恵内村', '伊達市', '豊浦町', '壮瞥町', '洞爺湖町', '長万部町', '今金町', 'せたな町'], ['函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '八雲町', '江差町', '上ノ国町', '厚沢部町', '乙部町'], ['芦別市', '赤平市', '滝川市', '砂川市', '歌志内市', '深川市', '奈井江町', '上砂川町', '浦臼町', '新十津川町', '妹背牛町', '秩父別町', '雨竜町', '北竜町', '沼田町', '旭川市', '士別市', '名寄市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町', '和寒町', '剣淵町', '下川町', '美深町', '幌加内町', '留萌市', '増毛町', '小平町', '苫前町', '西興部村'], ['音威子府村', '中川町', '羽幌町', '初山別村', '遠別町', '天塩町', '稚内市', '猿払村', '浜頓別町', '中頓別町', '枝幸町', '豊富町', '幌延町'], ['北見市', '網走市', '紋別市', '美幌町', '津別町', '清里町', '斜里町', '小清水町', '訓子府町', '置戸町', '佐呂間町', '遠軽町', '湧別町', '滝上町', '興部町', '雄武町', '大空町', '陸別町'], ['様似町', 'えりも町', '南富良野町', '占冠村', '帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町', '本別町', '足寄町', '浦幌町'], ['釧路市', '釧路町', '厚岸町', '浜中町', '標茶町', '弟子屈町', '鶴居村', '白糠町', '根室市', '別海町', '中標津町', '標津町', '羅臼町']]

trans_size = []
trans_facility = []
trans_blocks = []

arrows = []


---------------------  エネルギー情報  ---------------------
[685296.0866467088, 0, -4568302.8972054515, 0]

EL_direct: {'苫小牧市': 101692.50516885417, '釧路市': 167236.35030483335, '室蘭市': 58730.32555758334, '札幌市': 100572.98610693752, '伊達市': 47551.22238452085, '帯広市': 34003.86260970833, '旭川市': 72745.6841943542, '函館市': 32901.92470716667, '北見市': 44980.80536841667, '稚内市': 24880.420244333334}
ED_inc: {'苫小牧市': -1625817.2962191731, '釧路市': -1079565.854515464, '室蘭市': -751699.7916587504, '札幌市': -740356.400653796, '伊達市': -257669.97962901162, '帯広市': -85042.18289271707, '旭川市': -70293.00458930057, '函館市': -23659.645953240473, '北見市': 15703.338169793378, '稚内市': 50097.920736208274}

EL_indirect: {}
ED_trans: {}

----------------------  輸送情報  ----------------------

direct 苫小牧市(6566/6566) t/day → receive from: 千歳市, 苫小牧市, 白老町, 厚真町, 安平町, むかわ町, 日高町, 平取町, 新冠町, 浦河町, 新ひだか町
direct 釧路市(4360/4360) t/day → receive from: 釧路市, 釧路町, 厚岸町, 浜中町, 標茶町, 弟子屈町, 鶴居村, 白糠町, 根室市, 別海町, 中標津町, 標津町, 羅臼町
direct 室蘭市(3036/3036) t/day → receive from: 室蘭市, 登別市
direct 札幌市(2990/2990) t/day → receive from: 夕張市, 岩見沢市, 美唄市, 三笠市, 南幌町, 由仁町, 長沼町, 栗山町, 月形町, 札幌市, 江別市, 恵庭市, 北広島市, 石狩市, 当別町, 新篠津村, 小樽市, 岩内町, 積丹町, 古平町, 仁木町, 余市町, 赤井川村
direct 伊達市(1377/1377) t/day → receive from: 島牧村, 寿都町, 黒松内町, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町, 共和町, 泊村, 神恵内村, 伊達市, 豊浦町, 壮瞥町, 洞爺湖町, 長万部町, 今金町, せたな町
direct 帯広市(910/910) t/day → receive from: 様似町, えりも町, 南富良野町, 占冠村, 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町, 本別町, 足寄町, 浦幌町
direct 旭川市(863/863) t/day → receive from: 芦別市, 赤平市, 滝川市, 砂川市, 歌志内市, 深川市, 奈井江町, 上砂川町, 浦臼町, 新十津川町, 妹背牛町, 秩父別町, 雨竜町, 北竜町, 沼田町, 旭川市, 士別市, 名寄市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町, 和寒町, 剣淵町, 下川町, 美深町, 幌加内町, 留萌市, 増毛町, 小平町, 苫前町, 西興部村
direct 函館市(699/699) t/day → receive from: 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 八雲町, 江差町, 上ノ国町, 厚沢部町, 乙部町
direct 北見市(528/528) t/day → receive from: 北見市, 網走市, 紋別市, 美幌町, 津別町, 清里町, 斜里町, 小清水町, 訓子府町, 置戸町, 佐呂間町, 遠軽町, 湧別町, 滝上町, 興部町, 雄武町, 大空町, 陸別町
direct 稚内市(228/228) t/day → receive from: 音威子府村, 中川町, 羽幌町, 初山別村, 遠別町, 天塩町, 稚内市, 猿払村, 浜頓別町, 中頓別町, 枝幸町, 豊富町, 幌延町

----------------------  遺伝情報  ----------------------

個体数＝500
世代数＝100
0: neval=500{'avg': -3182220.0691407826, 'max': -1956272.8320626044, 'min': -3703852.21125205} best=-3703852.21125205
1: neval=384{'avg': -3389716.344453028, 'max': -2550205.2534088986, 'min': -3703852.21125205} best=-3703852.21125205
2: neval=385{'avg': -3510803.6276404276, 'max': -2902810.1485692374, 'min': -3758771.1896296823} best=-3758771.1896296823
3: neval=399{'avg': -3593106.82508292, 'max': -2345310.5153965564, 'min': -3820039.659687344} best=-3820039.659687344
4: neval=418{'avg': -3659683.9887849176, 'max': -2949694.3370737014, 'min': -3820039.659687344} best=-3820039.659687344
5: neval=382{'avg': -3721246.6735399426, 'max': -3329375.4608483156, 'min': -3820039.659687344} best=-3820039.659687344
6: neval=389{'avg': -3766460.956994914, 'max': -3141256.64289247, 'min': -3868164.407886581} best=-3868164.407886581
7: neval=387{'avg': -3797269.430511482, 'max': -2522217.1101136515, 'min': -3883006.810558743} best=-3883006.810558743
8: neval=397{'avg': -3826651.697403054, 'max': -3072701.843193177, 'min': -3883006.810558743} best=-3883006.810558743
9: neval=416{'avg': -3852168.4741763067, 'max': -3388324.3360462845, 'min': -3883006.810558743} best=-3883006.810558743
10: neval=398{'avg': -3868200.5754040233, 'max': -2655362.506370183, 'min': -3883006.810558743} best=-3883006.810558743
11: neval=404{'avg': -3877935.418492219, 'max': -2570765.450883038, 'min': -3883006.810558743} best=-3883006.810558743
12: neval=399{'avg': -3882133.6800002507, 'max': -3660645.4711378487, 'min': -3883006.810558743} best=-3883006.810558743
13: neval=402{'avg': -3882065.6285507595, 'max': -3412415.806566923, 'min': -3883006.810558743} best=-3883006.810558743
14: neval=396{'avg': -3881340.4517585975, 'max': -3049827.4104859745, 'min': -3883006.810558743} best=-3883006.810558743
15: neval=392{'avg': -3879704.2391320416, 'max': -2697573.3195151277, 'min': -3883006.810558743} best=-3883006.810558743
16: neval=384{'avg': -3880597.089098578, 'max': -2903631.953209105, 'min': -3883006.810558743} best=-3883006.810558743
17: neval=397{'avg': -3882556.3065072345, 'max': -3770380.797681627, 'min': -3883006.810558743} best=-3883006.810558743
18: neval=399{'avg': -3878130.157502594, 'max': -2965361.9622435467, 'min': -3883006.810558743} best=-3883006.810558743
19: neval=396{'avg': -3879392.602238047, 'max': -3211390.004145462, 'min': -3883006.810558743} best=-3883006.810558743
20: neval=396{'avg': -3880544.2993739313, 'max': -3419185.269182274, 'min': -3883006.810558743} best=-3883006.810558743
21: neval=385{'avg': -3872932.644555199, 'max': -2105146.8026055284, 'min': -3883006.810558743} best=-3883006.810558743
22: neval=385{'avg': -3874568.4348159116, 'max': -3171290.1177320313, 'min': -3883006.810558743} best=-3883006.810558743
23: neval=405{'avg': -3882321.5413514758, 'max': -3620200.7210579575, 'min': -3883006.810558743} best=-3883006.810558743
24: neval=399{'avg': -3879867.9624932576, 'max': -3512568.253188053, 'min': -3883006.810558743} best=-3883006.810558743
25: neval=391{'avg': -3880289.3708044807, 'max': -3483229.4659145335, 'min': -3883006.810558743} best=-3883006.810558743
26: neval=369{'avg': -3883006.810558743, 'max': -3883006.810558743, 'min': -3883006.810558743} best=-3883006.810558743
27: neval=397{'avg': -3879731.4436489544, 'max': -2789382.025072112, 'min': -3883006.810558743} best=-3883006.810558743
28: neval=396{'avg': -3881479.42413325, 'max': -3510376.5542000406, 'min': -3883006.810558743} best=-3883006.810558743
29: neval=401{'avg': -3879283.064956064, 'max': -3070096.935262632, 'min': -3883006.810558743} best=-3883006.810558743
30: neval=400{'avg': -3880939.6266919514, 'max': -3478720.504412053, 'min': -3883006.810558743} best=-3883006.810558743
31: neval=405{'avg': -3879732.351251858, 'max': -3028166.0898788786, 'min': -3883006.810558743} best=-3883006.810558743
32: neval=402{'avg': -3881804.204637869, 'max': -3635865.1899810107, 'min': -3883006.810558743} best=-3883006.810558743
33: neval=412{'avg': -3881966.5867450107, 'max': -3541304.0789806535, 'min': -3883006.810558743} best=-3883006.810558743
34: neval=390{'avg': -3880373.00081171, 'max': -3441886.894521926, 'min': -3883006.810558743} best=-3883006.810558743
35: neval=396{'avg': -3878791.418520232, 'max': -2479206.256395113, 'min': -3883006.810558743} best=-3883006.810558743
36: neval=409{'avg': -3881537.837178267, 'max': -3300680.931900789, 'min': -3883006.810558743} best=-3883006.810558743
37: neval=413{'avg': -3882007.7573429495, 'max': -3512891.7877462963, 'min': -3883006.810558743} best=-3883006.810558743
38: neval=390{'avg': -3880889.550042553, 'max': -3089052.6872801734, 'min': -3883006.810558743} best=-3883006.810558743
39: neval=401{'avg': -3878898.247926295, 'max': -2238663.983118805, 'min': -3883006.810558743} best=-3883006.810558743
40: neval=386{'avg': -3880063.2294125347, 'max': -3047807.563863001, 'min': -3883006.810558743} best=-3883006.810558743
41: neval=384{'avg': -3874207.144677528, 'max': -2509699.9400927634, 'min': -3883006.810558743} best=-3883006.810558743
42: neval=400{'avg': -3877460.484077802, 'max': -3065813.179897937, 'min': -3883006.810558743} best=-3883006.810558743
43: neval=392{'avg': -3880521.5907410556, 'max': -2981197.7661421383, 'min': -3883006.810558743} best=-3883006.810558743
44: neval=389{'avg': -3883006.810558743, 'max': -3883006.810558743, 'min': -3883006.810558743} best=-3883006.810558743
45: neval=398{'avg': -3879086.766278324, 'max': -2777702.629739835, 'min': -3883006.810558743} best=-3883006.810558743
46: neval=371{'avg': -3882566.9699311918, 'max': -3761381.7660585367, 'min': -3883006.810558743} best=-3883006.810558743
47: neval=397{'avg': -3879655.5492825042, 'max': -3246151.349666234, 'min': -3883006.810558743} best=-3883006.810558743
48: neval=400{'avg': -3879820.0151862316, 'max': -3116305.7018466443, 'min': -3883006.810558743} best=-3883006.810558743
49: neval=397{'avg': -3881261.2351189014, 'max': -3540912.2187982993, 'min': -3883006.810558743} best=-3883006.810558743
50: neval=409{'avg': -3881626.615395156, 'max': -3487249.6180607253, 'min': -3883006.810558743} best=-3883006.810558743
51: neval=374{'avg': -3880861.2086536167, 'max': -3380901.965738827, 'min': -3883006.810558743} best=-3883006.810558743
52: neval=397{'avg': -3882185.838568155, 'max': -3472520.815264721, 'min': -3883006.810558743} best=-3883006.810558743
53: neval=386{'avg': -3882530.794903776, 'max': -3644998.983075243, 'min': -3883006.810558743} best=-3883006.810558743
54: neval=401{'avg': -3881902.8959005936, 'max': -3331049.4814840164, 'min': -3883006.810558743} best=-3883006.810558743
55: neval=388{'avg': -3882443.703130724, 'max': -3713934.704670949, 'min': -3883006.810558743} best=-3883006.810558743
56: neval=391{'avg': -3881304.928057194, 'max': -3475790.7609590692, 'min': -3883006.810558743} best=-3883006.810558743
57: neval=404{'avg': -3877399.6370707424, 'max': -2443659.2064260873, 'min': -3883006.810558743} best=-3883006.810558743
58: neval=402{'avg': -3881610.711991048, 'max': -3536258.4606704446, 'min': -3883006.810558743} best=-3883006.810558743
59: neval=368{'avg': -3879563.278713557, 'max': -2967106.5795270484, 'min': -3883006.810558743} best=-3883006.810558743
60: neval=391{'avg': -3879480.98809185, 'max': -3303459.714633362, 'min': -3883006.810558743} best=-3883006.810558743
61: neval=414{'avg': -3876623.168337245, 'max': -2281435.7049051095, 'min': -3883006.810558743} best=-3883006.810558743
62: neval=362{'avg': -3882793.606173596, 'max': -3776404.617985088, 'min': -3883006.810558743} best=-3883006.810558743
63: neval=383{'avg': -3881622.6437007114, 'max': -3610563.380168612, 'min': -3883006.810558743} best=-3883006.810558743
64: neval=378{'avg': -3876262.1718883365, 'max': -2520812.934283342, 'min': -3883006.810558743} best=-3883006.810558743
65: neval=374{'avg': -3881035.2236061906, 'max': -3435117.617874836, 'min': -3883006.810558743} best=-3883006.810558743
66: neval=399{'avg': -3880287.1756923227, 'max': -2597613.473909244, 'min': -3883006.810558743} best=-3883006.810558743
67: neval=412{'avg': -3878528.0203574533, 'max': -2419444.6087977653, 'min': -3883006.810558743} best=-3883006.810558743
68: neval=411{'avg': -3880009.6139950645, 'max': -2708488.327598355, 'min': -3883006.810558743} best=-3883006.810558743
69: neval=392{'avg': -3880732.666186058, 'max': -3062661.473097977, 'min': -3883006.810558743} best=-3883006.810558743
70: neval=421{'avg': -3880412.1655781562, 'max': -3043140.457051756, 'min': -3883006.810558743} best=-3883006.810558743
71: neval=407{'avg': -3880793.365598566, 'max': -3046103.6890165564, 'min': -3883006.810558743} best=-3883006.810558743
72: neval=401{'avg': -3881118.6838604356, 'max': -3081250.899654929, 'min': -3883006.810558743} best=-3883006.810558743
73: neval=377{'avg': -3883006.810558743, 'max': -3883006.810558743, 'min': -3883006.810558743} best=-3883006.810558743
74: neval=387{'avg': -3880052.6029488295, 'max': -2744588.0790859493, 'min': -3883006.810558743} best=-3883006.810558743
75: neval=401{'avg': -3882172.595501178, 'max': -3648841.7548327786, 'min': -3883006.810558743} best=-3883006.810558743
76: neval=390{'avg': -3880098.395181529, 'max': -3232726.1047768597, 'min': -3883006.810558743} best=-3883006.810558743
77: neval=394{'avg': -3878063.4737125607, 'max': -2621759.3548563784, 'min': -3883006.810558743} best=-3883006.810558743
78: neval=399{'avg': -3883006.810558743, 'max': -3883006.810558743, 'min': -3883006.810558743} best=-3883006.810558743
79: neval=378{'avg': -3878589.724935237, 'max': -3039129.9400311066, 'min': -3883006.810558743} best=-3883006.810558743
80: neval=397{'avg': -3879683.6126570646, 'max': -3264134.2159209177, 'min': -3883006.810558743} best=-3883006.810558743
81: neval=402{'avg': -3882162.8666013298, 'max': -3727179.0659416392, 'min': -3883006.810558743} best=-3883006.810558743
82: neval=414{'avg': -3876022.1024376373, 'max': -2434204.108747023, 'min': -3883006.810558743} best=-3883006.810558743
83: neval=404{'avg': -3880694.5468209586, 'max': -3128022.1555594397, 'min': -3883006.810558743} best=-3883006.810558743
84: neval=384{'avg': -3882778.7389412792, 'max': -3768971.0018267515, 'min': -3883006.810558743} best=-3883006.810558743
85: neval=406{'avg': -3878132.5527301705, 'max': -2666247.310542646, 'min': -3883006.810558743} best=-3883006.810558743
86: neval=412{'avg': -3879106.8704440766, 'max': -3469071.6764123137, 'min': -3883006.810558743} best=-3883006.810558743
87: neval=401{'avg': -3879298.1577039384, 'max': -2645253.953269719, 'min': -3883006.810558743} best=-3883006.810558743
88: neval=398{'avg': -3881543.9672381287, 'max': -3578124.0509858644, 'min': -3883006.810558743} best=-3883006.810558743
89: neval=406{'avg': -3881651.1132470015, 'max': -3557633.5904294713, 'min': -3883006.810558743} best=-3883006.810558743
90: neval=406{'avg': -3876364.236735789, 'max': -2586081.442804263, 'min': -3883006.810558743} best=-3883006.810558743
91: neval=386{'avg': -3880826.882279342, 'max': -3143905.6666512815, 'min': -3883006.810558743} best=-3883006.810558743
92: neval=390{'avg': -3881994.8380933707, 'max': -3453399.9765013075, 'min': -3883006.810558743} best=-3883006.810558743
93: neval=385{'avg': -3876587.45012152, 'max': -2743496.668813968, 'min': -3883006.810558743} best=-3883006.810558743
94: neval=400{'avg': -3878853.3786450364, 'max': -2445521.377086496, 'min': -3883006.810558743} best=-3883006.810558743
95: neval=412{'avg': -3877831.5388886137, 'max': -2615181.069937065, 'min': -3883006.810558743} best=-3883006.810558743
96: neval=389{'avg': -3880330.8163811676, 'max': -3550148.7445021444, 'min': -3883006.810558743} best=-3883006.810558743
97: neval=403{'avg': -3881596.4664842407, 'max': -3602230.826734309, 'min': -3883006.810558743} best=-3883006.810558743
98: neval=387{'avg': -3881493.540708777, 'max': -3517965.442352863, 'min': -3883006.810558743} best=-3883006.810558743
99: neval=406{'avg': -3882063.259928941, 'max': -3587864.201999576, 'min': -3883006.810558743} best=-3883006.810558743


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 52, 53, 55, 70, 87, 118, 125, 143, 162]
best_individual.trans_facility = []
best_individual.unused_cities = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174}
best_individual.fitness.values = (-3883006.810558743,)