局----------------------  実行情報  ----------------------
実行時間＝706秒
個体数＝400
合計世代数＝100
===============================
Total cost: -3024703.8589041317
===============================
------------------------  前提  ------------------------

waste=sanpai

ごみ量18位以内：
苫小牧市 (2039382), 釧路市 (1177668), 札幌市 (728360), 室蘭市 (677679), 登別市 (430316), 伊達市 (334124), 帯広市 (182218), 旭川市 (138210), 函館市 (133081), 釧路町 (121597), 白老町 (99038), 北見市 (91496), 小樽市 (91037), 千歳市 (69923), 江別市 (64214), 安平町 (60328), 洞爺湖町 (54767), 厚岸町 (49048)

焼却施設数: 2
中継施設数: 6

輸送単価＝ 4.8 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='sanpai'
unit ='t/year'

inc_size= [5747083, 2121209]
inc_facility = ['苫小牧市', '釧路市']
inc_blocks = [['由仁町', '長沼町', '千歳市', '恵庭市', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町', '苫小牧市', '白老町', '厚真町', '安平町', 'むかわ町', '日高町', '平取町', '新冠町', '浦河町', '様似町', 'えりも町', '新ひだか町', '今金町', 'せたな町', '占冠村'], ['清里町', '斜里町', '本別町', '足寄町', '浦幌町', '釧路市', '釧路町', '厚岸町', '浜中町', '標茶町', '弟子屈町', '鶴居村', '白糠町', '根室市', '別海町', '中標津町', '標津町', '羅臼町']]

trans_size=[1564617, 1047013, 394776, 316753, 255303, 195920]
trans_facility = ['登別市', '札幌市', '深川市', '帯広市', '北斗市', '北見市']
trans_blocks = [['夕張市', '岩見沢市', '三笠市', '南幌町', '栗山町', '月形町', '札幌市', '江別市', '北広島市', '石狩市', '当別町', '新篠津村', '小樽市', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村'], ['島牧村', '寿都町', '黒松内町', '室蘭市', '登別市', '伊達市', '豊浦町', '壮瞥町', '洞爺湖町', '長万部町'], ['函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '八雲町', '江差町', '上ノ国町', '厚沢部町', '乙部町'], ['美唄市', '芦別市', '赤平市', '滝川市', '砂川市', '歌志内市', '深川市', '奈井江町', '上砂川町', '浦臼町', '新十津川町', '妹背牛町', '秩父別町', '雨竜町', '北竜町', '沼田町', '旭川市', '士別市', '名寄市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町', '和寒町', '剣淵町', '下川町', '美深町', '音威子府村', '中川町', '幌加内町', '留萌市', '増毛町', '小平町', '苫前町', '羽幌町', '初山別村', '遠別町', '天塩町', '稚内市', '猿払村', '浜頓別町', '中頓別町', '豊富町', '幌延町'], ['枝幸町', '北見市', '網走市', '紋別市', '美幌町', '津別町', '小清水町', '訓子府町', '置戸町', '佐呂間町', '遠軽町', '湧別町', '滝上町', '興部町', '西興部村', '雄武町', '大空町', '陸別町'], ['南富良野町', '帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町']]

arrows = [[['苫小牧市'], ['札幌市', '深川市', '登別市', '北斗市']], [['釧路市'], ['北見市', '帯広市']]]


---------------------  エネルギー情報  ---------------------
[344180.87263760425, 1738414.050349899, -5338104.8263847865, 230806.04449315072]

EL_direct: {'苫小牧市': 162873.06393610415, '釧路市': 181307.8087015}
ED_inc: {'苫小牧市': -3899007.7516103825, '釧路市': -1439097.0747744045}

EL_indirect: {'登別市': 512372.2781491839, '札幌市': 301042.2690395012, '深川市': 421954.9654089662, '帯広市': 139706.06102709533, '北斗市': 225018.6238663567, '北見市': 138319.85285879587}
ED_trans: {'登別市': 95677.40120547946, '札幌市': 64025.56208219179, '深川市': 24140.82279452055, '帯広市': 19369.662904109595, '北斗市': 15611.953315068495, '北見市': 11980.64219178082}

----------------------  輸送情報  ----------------------

direct 苫小牧市(6809/15745) t/day → receive from: 由仁町, 長沼町, 千歳市, 恵庭市, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町, 苫小牧市, 白老町, 厚真町, 安平町, むかわ町, 日高町, 平取町, 新冠町, 浦河町, 様似町, えりも町, 新ひだか町, 今金町, せたな町, 占冠村
indirect 苫小牧市(8936/15745) t/day → receive from: 中継施設＝ 札幌市(1047013) → receive from: 夕張市, 岩見沢市, 三笠市, 南幌町, 栗山町, 月形町, 札幌市, 江別市, 北広島市, 石狩市, 当別町, 新篠津村, 小樽市, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村
深川市(394776) → receive from: 美唄市, 芦別市, 赤平市, 滝川市, 砂川市, 歌志内市, 深川市, 奈井江町, 上砂川町, 浦臼町, 新十津川町, 妹背牛町, 秩父別町, 雨竜町, 北竜町, 沼田町, 旭川市, 士別市, 名寄市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町, 和寒町, 剣淵町, 下川町, 美深町, 音威子府村, 中川町, 幌加内町, 留萌市, 増毛町, 小平町, 苫前町, 羽幌町, 初山別村, 遠別町, 天塩町, 稚内市, 猿払村, 浜頓別町, 中頓別町, 豊富町, 幌延町
登別市(1564617) → receive from: 島牧村, 寿都町, 黒松内町, 室蘭市, 登別市, 伊達市, 豊浦町, 壮瞥町, 洞爺湖町, 長万部町
北斗市(255303) → receive from: 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 八雲町, 江差町, 上ノ国町, 厚沢部町, 乙部町
direct 釧路市(4407/5812) t/day → receive from: 清里町, 斜里町, 本別町, 足寄町, 浦幌町, 釧路市, 釧路町, 厚岸町, 浜中町, 標茶町, 弟子屈町, 鶴居村, 白糠町, 根室市, 別海町, 中標津町, 標津町, 羅臼町
indirect 釧路市(1405/5812) t/day → receive from: 中継施設＝ 北見市(195920) → receive from: 枝幸町, 北見市, 網走市, 紋別市, 美幌町, 津別町, 小清水町, 訓子府町, 置戸町, 佐呂間町, 遠軽町, 湧別町, 滝上町, 興部町, 西興部村, 雄武町, 大空町, 陸別町
帯広市(316753) → receive from: 南富良野町, 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町

----------------------  遺伝情報  ----------------------

個体数＝400
世代数＝100
0: neval=400{'avg': -1223814.6935074213, 'max': 3179592.453042809, 'min': -2205310.1917514545} best=-2205310.1917514545
1: neval=324{'avg': -1642686.8467626537, 'max': 1119660.5084039276, 'min': -2783616.66504755} best=-2783616.66504755
2: neval=306{'avg': -1947447.7024846005, 'max': -627869.7752201108, 'min': -2783616.66504755} best=-2783616.66504755
3: neval=331{'avg': -2166877.3417555774, 'max': 1046714.160135138, 'min': -2783616.66504755} best=-2783616.66504755
4: neval=334{'avg': -2323534.865448789, 'max': 936869.5307927954, 'min': -2864378.9441958186} best=-2864378.9441958186
5: neval=314{'avg': inf, 'max': inf, 'min': -2925611.339137792} best=-2925611.339137792
6: neval=300{'avg': -2654374.0130408485, 'max': -409781.56702949, 'min': -2954535.1515935035} best=-2954535.1515935035
7: neval=300{'avg': -2774407.2763841115, 'max': -180622.71888096473, 'min': -2976162.9709299} best=-2976162.9709299
8: neval=315{'avg': -2841069.540842074, 'max': -535236.1802483333, 'min': -2992087.2086863434} best=-2992087.2086863434
9: neval=322{'avg': -2900354.80628162, 'max': -2730304.0671985317, 'min': -2992087.2086863434} best=-2992087.2086863434
10: neval=303{'avg': -2942836.1187897194, 'max': -2555638.3223415297, 'min': -2992087.2086863434} best=-2992087.2086863434
11: neval=310{'avg': -2967260.273924296, 'max': -2641016.758242116, 'min': -3002506.692723248} best=-3002506.692723248
12: neval=317{'avg': -2979013.073832342, 'max': -2154924.756096209, 'min': -3002506.692723248} best=-3002506.692723248
13: neval=330{'avg': -2992380.574553958, 'max': -2882839.7289125854, 'min': -3002506.692723248} best=-3002506.692723248
14: neval=328{'avg': -2997412.8774326574, 'max': -2818755.1064225268, 'min': -3002506.692723248} best=-3002506.692723248
15: neval=311{'avg': -3000723.531589831, 'max': -2808821.5927910674, 'min': -3015983.4091339535} best=-3015983.4091339535
16: neval=307{'avg': -3001675.877699152, 'max': -2705287.560435785, 'min': -3015983.4091339535} best=-3015983.4091339535
17: neval=331{'avg': -3003376.072408067, 'max': -2635992.5968832625, 'min': -3015983.4091339535} best=-3015983.4091339535
18: neval=306{'avg': -3002029.1142651904, 'max': -1153839.1909833031, 'min': -3015983.4091339535} best=-3015983.4091339535
19: neval=314{'avg': -3010794.873315832, 'max': -3002506.692723248, 'min': -3015983.4091339535} best=-3015983.4091339535
20: neval=329{'avg': -3003143.981172806, 'max': -985216.5955148402, 'min': -3015983.4091339535} best=-3015983.4091339535
21: neval=329{'avg': -3013940.400557479, 'max': -2526234.3321161615, 'min': -3015983.4091339535} best=-3015983.4091339535
22: neval=317{'avg': -3015592.8685580026, 'max': -2859767.178753774, 'min': -3015983.4091339535} best=-3015983.4091339535
23: neval=321{'avg': -3015223.3693760904, 'max': -2711967.5059889443, 'min': -3015983.4091339535} best=-3015983.4091339535
24: neval=322{'avg': -3014655.7679925268, 'max': -2670699.5539923953, 'min': -3015983.4091339535} best=-3015983.4091339535
25: neval=317{'avg': -3011635.336464245, 'max': -1276754.3412505847, 'min': -3015983.4091339535} best=-3015983.4091339535
26: neval=327{'avg': -3014805.039856408, 'max': -2753578.538644978, 'min': -3015983.4091339535} best=-3015983.4091339535
27: neval=306{'avg': -3015252.832542246, 'max': -2793614.249663741, 'min': -3015983.4091339535} best=-3015983.4091339535
28: neval=321{'avg': -3013048.979203328, 'max': -2617939.2495650044, 'min': -3015983.4091339535} best=-3015983.4091339535
29: neval=302{'avg': -3014741.05633284, 'max': -2721243.1198043698, 'min': -3015983.4091339535} best=-3015983.4091339535
30: neval=303{'avg': -3007859.4867650312, 'max': 233585.53843465832, 'min': -3015983.4091339535} best=-3015983.4091339535
31: neval=337{'avg': -2995423.0695877457, 'max': -332486.95335234574, 'min': -3016641.5119979903} best=-3016641.5119979903
32: neval=319{'avg': -3011407.1653771163, 'max': -2343044.380097132, 'min': -3016641.5119979903} best=-3016641.5119979903
33: neval=351{'avg': -3006580.4687395925, 'max': -298816.1168197963, 'min': -3016641.5119979903} best=-3016641.5119979903
34: neval=311{'avg': -3014893.834180549, 'max': -2796961.8214693405, 'min': -3016641.5119979903} best=-3016641.5119979903
35: neval=299{'avg': -3015047.1044374686, 'max': -2772746.420478542, 'min': -3016641.5119979903} best=-3016641.5119979903
36: neval=323{'avg': -3015392.036955001, 'max': -2724943.3587106355, 'min': -3016641.5119979903} best=-3016641.5119979903
37: neval=308{'avg': -3016636.5762265096, 'max': -3015983.4091339535, 'min': -3016641.5119979903} best=-3016641.5119979903
38: neval=325{'avg': -3013195.769135077, 'max': -2137656.284300401, 'min': -3016641.5119979903} best=-3016641.5119979903
39: neval=327{'avg': -3013989.7478109836, 'max': -2255980.701880717, 'min': -3016641.5119979903} best=-3016641.5119979903
40: neval=334{'avg': -3013316.730895481, 'max': -2574321.0300948233, 'min': -3016641.5119979903} best=-3016641.5119979903
41: neval=317{'avg': -3013285.5709294784, 'max': -2635681.135891871, 'min': -3016641.5119979903} best=-3016641.5119979903
42: neval=322{'avg': -3010494.907139305, 'max': -1212931.4946048115, 'min': -3016641.5119979903} best=-3016641.5119979903
43: neval=305{'avg': -3015733.049370785, 'max': -2653256.4611156643, 'min': -3016641.5119979903} best=-3016641.5119979903
44: neval=303{'avg': -3016641.511997991, 'max': -3016641.5119979903, 'min': -3016641.5119979903} best=-3016641.5119979903
45: neval=339{'avg': -3016641.511997991, 'max': -3016641.5119979903, 'min': -3016641.5119979903} best=-3016641.5119979903
46: neval=321{'avg': -3014130.7971119927, 'max': -2631761.239347402, 'min': -3016641.5119979903} best=-3016641.5119979903
47: neval=325{'avg': -3005213.0680450057, 'max': -713782.8693019965, 'min': -3016641.5119979903} best=-3016641.5119979903
48: neval=314{'avg': -3014273.497533836, 'max': -2309994.9405284906, 'min': -3016641.5119979903} best=-3016641.5119979903
49: neval=317{'avg': -3012086.310496482, 'max': -1804492.789539522, 'min': -3016641.5119979903} best=-3016641.5119979903
50: neval=315{'avg': -3016023.9952778947, 'max': -2842348.654233869, 'min': -3016641.5119979903} best=-3016641.5119979903
51: neval=321{'avg': -3014420.789096539, 'max': -2446115.7911254987, 'min': -3016641.5119979903} best=-3016641.5119979903
52: neval=317{'avg': -3014637.0738220406, 'max': -2684597.823772011, 'min': -3016641.5119979903} best=-3016641.5119979903
53: neval=326{'avg': -3011927.3772282754, 'max': -2591633.7394978525, 'min': -3016641.5119979903} best=-3016641.5119979903
54: neval=313{'avg': -3015421.0799274365, 'max': -2766296.5288383397, 'min': -3016641.5119979903} best=-3016641.5119979903
55: neval=322{'avg': -3012403.798147777, 'max': -2288545.597990337, 'min': -3016641.5119979903} best=-3016641.5119979903
56: neval=287{'avg': -3015285.4817630053, 'max': -2817594.224730922, 'min': -3016641.5119979903} best=-3016641.5119979903
57: neval=322{'avg': -3014913.7929996294, 'max': -2488371.8622568035, 'min': -3016641.5119979903} best=-3016641.5119979903
58: neval=305{'avg': -3016265.14019776, 'max': -2866092.7919058735, 'min': -3016641.5119979903} best=-3016641.5119979903
59: neval=307{'avg': -3015582.46621616, 'max': -2675298.7482349686, 'min': -3016641.5119979903} best=-3016641.5119979903
60: neval=328{'avg': -3015534.828827125, 'max': -2726793.812409083, 'min': -3016641.5119979903} best=-3016641.5119979903
61: neval=323{'avg': -3010419.560141749, 'max': -1336897.3110239091, 'min': -3016641.5119979903} best=-3016641.5119979903
62: neval=318{'avg': -3015026.7085100627, 'max': -2370720.1168267494, 'min': -3016641.5119979903} best=-3016641.5119979903
63: neval=316{'avg': -3014140.06386927, 'max': -2571451.82840287, 'min': -3016641.5119979903} best=-3016641.5119979903
64: neval=323{'avg': -3011966.0837569213, 'max': -2450885.2230597264, 'min': -3016641.5119979903} best=-3016641.5119979903
65: neval=335{'avg': -3006410.104641309, 'max': -1490062.5724808427, 'min': -3016641.5119979903} best=-3016641.5119979903
66: neval=332{'avg': -3014113.9923627125, 'max': -2604317.5015433216, 'min': -3016641.5119979903} best=-3016641.5119979903
67: neval=316{'avg': -3015320.2782501853, 'max': -2738520.6751571493, 'min': -3016641.5119979903} best=-3016641.5119979903
68: neval=335{'avg': -3014124.1296226974, 'max': -2616457.4353729393, 'min': -3016641.5119979903} best=-3016641.5119979903
69: neval=302{'avg': -3015415.219117983, 'max': -2669555.0089541315, 'min': -3016641.5119979903} best=-3016641.5119979903
70: neval=312{'avg': -3010957.3819527715, 'max': -1044381.3160472543, 'min': -3016641.5119979903} best=-3016641.5119979903
71: neval=317{'avg': -3016186.785072374, 'max': -2834750.741751679, 'min': -3016641.5119979903} best=-3016641.5119979903
72: neval=309{'avg': -3016053.5484583187, 'max': -2781456.0961293434, 'min': -3016641.5119979903} best=-3016641.5119979903
73: neval=330{'avg': -3013867.9521336015, 'max': -2657041.083734254, 'min': -3016641.5119979903} best=-3016641.5119979903
74: neval=314{'avg': -3015079.6565065123, 'max': -2671251.694031858, 'min': -3016641.5119979903} best=-3016641.5119979903
75: neval=321{'avg': -3016084.7244746084, 'max': -2793926.5026451466, 'min': -3016641.5119979903} best=-3016641.5119979903
76: neval=308{'avg': -3009628.025886902, 'max': -1442603.6282771076, 'min': -3016641.5119979903} best=-3016641.5119979903
77: neval=308{'avg': -3016034.1245071874, 'max': -2773686.5156767406, 'min': -3016641.5119979903} best=-3016641.5119979903
78: neval=303{'avg': -3014893.4922060035, 'max': -2651406.96911284, 'min': -3016641.5119979903} best=-3016641.5119979903
79: neval=334{'avg': -3011941.8218030524, 'max': -1645670.811787155, 'min': -3016641.5119979903} best=-3016641.5119979903
80: neval=302{'avg': -3016052.789491071, 'max': -2874002.1383820083, 'min': -3016641.5119979903} best=-3016641.5119979903
81: neval=326{'avg': -3015575.453132974, 'max': -2590217.965991474, 'min': -3016641.5119979903} best=-3016641.5119979903
82: neval=308{'avg': -3016227.2259621276, 'max': -2850927.0976526835, 'min': -3016641.5119979903} best=-3016641.5119979903
83: neval=319{'avg': -3015232.879817682, 'max': -2781188.4529843302, 'min': -3016641.5119979903} best=-3016641.5119979903
84: neval=311{'avg': -3014838.717944434, 'max': -2821681.866375939, 'min': -3016641.5119979903} best=-3016641.5119979903
85: neval=306{'avg': -3011616.6553447507, 'max': -1507579.6472896007, 'min': -3016641.5119979903} best=-3016641.5119979903
86: neval=325{'avg': -3013510.745590857, 'max': -2684141.4103538194, 'min': -3016641.5119979903} best=-3016641.5119979903
87: neval=312{'avg': -3016641.511997991, 'max': -3016641.5119979903, 'min': -3016641.5119979903} best=-3016641.5119979903
88: neval=317{'avg': -3015499.521477947, 'max': -2778005.969119415, 'min': -3016641.5119979903} best=-3016641.5119979903
89: neval=319{'avg': -3014969.6477182615, 'max': -2741097.1693042573, 'min': -3016641.5119979903} best=-3016641.5119979903
90: neval=328{'avg': -3009560.238156645, 'max': -1591161.8858358406, 'min': -3016641.5119979903} best=-3016641.5119979903
91: neval=308{'avg': -3015192.708456467, 'max': -2662585.26819877, 'min': -3022573.6065451726} best=-3022573.6065451726
92: neval=319{'avg': -3013742.4963768707, 'max': -2482586.9308111705, 'min': -3022573.6065451726} best=-3022573.6065451726
93: neval=312{'avg': -3014666.6670570993, 'max': -2639800.7256739787, 'min': -3022573.6065451726} best=-3022573.6065451726
94: neval=306{'avg': -3012579.886476295, 'max': -937250.7351071973, 'min': -3022573.6065451726} best=-3022573.6065451726
95: neval=316{'avg': -3015918.807800076, 'max': -1440949.7364424944, 'min': -3022573.6065451726} best=-3022573.6065451726
96: neval=304{'avg': -3021002.8431936624, 'max': -2829740.8788702544, 'min': -3022573.6065451726} best=-3022573.6065451726
97: neval=309{'avg': -3022208.509269187, 'max': -2927948.108863705, 'min': -3022573.6065451726} best=-3022573.6065451726
98: neval=322{'avg': -3020994.1687712707, 'max': -2485423.9946658346, 'min': -3022573.6065451726} best=-3022573.6065451726
99: neval=326{'avg': -3020435.0129645867, 'max': -2737172.060398944, 'min': -3022573.6065451726} best=-3022573.6065451726


----------------------  最適個体  ----------------------

best_individual.inc_facility = [53, 162]
best_individual.trans_facility = [24, 54, 71, 9, 125, 143]
best_individual.unused_cities = {0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174}
best_individual.fitness.values = (-3024703.8589041317,)