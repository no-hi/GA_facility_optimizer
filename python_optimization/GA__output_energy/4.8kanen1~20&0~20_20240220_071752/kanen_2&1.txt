----------------------  実行情報  ----------------------
実行時間＝134秒
個体数＝150
合計世代数＝64
=============================
Total cost: -42371.5217366133
=============================
------------------------  前提  ------------------------

waste=kanen

ごみ量13位以内：
札幌市 (349353), 函館市 (66649), 旭川市 (64890), 苫小牧市 (42288), 釧路市 (38335), 帯広市 (35291), 千歳市 (25770), 小樽市 (25049), 江別市 (24906), 北見市 (20809), 室蘭市 (20448), 岩見沢市 (12638), 登別市 (11426)

焼却施設数: 2
中継施設数: 1

輸送単価＝ 4.8 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='kanen'
unit ='t/year'

inc_size= [851333, 89763]
inc_facility = ['札幌市', '函館市']
inc_blocks = [['夕張市', '岩見沢市', '美唄市', '芦別市', '赤平市', '三笠市', '滝川市', '砂川市', '歌志内市', '深川市', '南幌町', '奈井江町', '上砂川町', '由仁町', '長沼町', '栗山町', '月形町', '浦臼町', '新十津川町', '妹背牛町', '秩父別町', '雨竜町', '北竜町', '沼田町', '札幌市', '江別市', '千歳市', '恵庭市', '北広島市', '石狩市', '当別町', '新篠津村', '小樽市', '寿都町', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村', '室蘭市', '苫小牧市', '登別市', '伊達市', '豊浦町', '壮瞥町', '白老町', '厚真町', '洞爺湖町', '安平町', 'むかわ町', '日高町', '平取町', '新冠町', '浦河町', '様似町', 'えりも町', '新ひだか町', '旭川市', '士別市', '名寄市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町', '占冠村', '和寒町', '剣淵町', '下川町', '美深町', '音威子府村', '中川町', '幌加内町', '留萌市', '増毛町', '小平町', '苫前町', '羽幌町', '初山別村', '遠別町', '天塩町', '稚内市', '猿払村', '浜頓別町', '中頓別町', '枝幸町', '豊富町', '幌延町', '紋別市', '斜里町', '滝上町', '興部町', '西興部村', '雄武町'], ['島牧村', '黒松内町', '函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '八雲町', '長万部町', '江差町', '上ノ国町', '厚沢部町', '乙部町', '今金町', 'せたな町']]

trans_size=[157900]
trans_facility = ['音更町']
trans_blocks = [['南富良野町', '北見市', '網走市', '美幌町', '津別町', '清里町', '小清水町', '訓子府町', '置戸町', '佐呂間町', '遠軽町', '湧別町', '大空町', '帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町', '本別町', '足寄町', '陸別町', '浦幌町', '釧路市', '釧路町', '厚岸町', '浜中町', '標茶町', '弟子屈町', '鶴居村', '白糠町', '根室市', '別海町', '中標津町', '標津町', '羅臼町']]

arrows = [[['札幌市'], ['音更町']]]


---------------------  エネルギー情報  ---------------------
[264890.97105493763, 210827.69373959588, -527745.8796818317, 9655.693150684932]

EL_direct: {'札幌市': 255056.1694552084, '函館市': 9834.801599729168}
ED_inc: {'札幌市': -577571.9554079386, '函館市': 49826.07572610683}

EL_indirect: {'音更町': 210827.69373959588}
ED_trans: {'音更町': 9655.693150684932}

----------------------  輸送情報  ----------------------

direct 札幌市(1900/2332) t/day → receive from: 夕張市, 岩見沢市, 美唄市, 芦別市, 赤平市, 三笠市, 滝川市, 砂川市, 歌志内市, 深川市, 南幌町, 奈井江町, 上砂川町, 由仁町, 長沼町, 栗山町, 月形町, 浦臼町, 新十津川町, 妹背牛町, 秩父別町, 雨竜町, 北竜町, 沼田町, 札幌市, 江別市, 千歳市, 恵庭市, 北広島市, 石狩市, 当別町, 新篠津村, 小樽市, 寿都町, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村, 室蘭市, 苫小牧市, 登別市, 伊達市, 豊浦町, 壮瞥町, 白老町, 厚真町, 洞爺湖町, 安平町, むかわ町, 日高町, 平取町, 新冠町, 浦河町, 様似町, えりも町, 新ひだか町, 旭川市, 士別市, 名寄市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町, 占冠村, 和寒町, 剣淵町, 下川町, 美深町, 音威子府村, 中川町, 幌加内町, 留萌市, 増毛町, 小平町, 苫前町, 羽幌町, 初山別村, 遠別町, 天塩町, 稚内市, 猿払村, 浜頓別町, 中頓別町, 枝幸町, 豊富町, 幌延町, 紋別市, 斜里町, 滝上町, 興部町, 西興部村, 雄武町
indirect 札幌市(433/2332) t/day → receive from: 中継施設＝ 音更町(157900) → receive from: 南富良野町, 北見市, 網走市, 美幌町, 津別町, 清里町, 小清水町, 訓子府町, 置戸町, 佐呂間町, 遠軽町, 湧別町, 大空町, 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町, 本別町, 足寄町, 陸別町, 浦幌町, 釧路市, 釧路町, 厚岸町, 浜中町, 標茶町, 弟子屈町, 鶴居村, 白糠町, 根室市, 別海町, 中標津町, 標津町, 羅臼町
direct 函館市(246/246) t/day → receive from: 島牧村, 黒松内町, 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 八雲町, 長万部町, 江差町, 上ノ国町, 厚沢部町, 乙部町, 今金町, せたな町

----------------------  遺伝情報  ----------------------

個体数＝150
世代数＝100
0: neval=150{'avg': 141432.4539802707, 'max': 321635.3772846607, 'min': -1741.343867247725} best=-1741.343867247725
1: neval=122{'avg': 88091.02064074554, 'max': 184646.83175967846, 'min': -17140.068668536092} best=-17140.068668536092
2: neval=112{'avg': 50041.57329263255, 'max': 165348.10707104596, 'min': -38833.55692686316} best=-38833.55692686316
3: neval=133{'avg': 18851.314566211568, 'max': 119817.07294326602, 'min': -38833.55692686316} best=-38833.55692686316
4: neval=123{'avg': -3554.7669571607466, 'max': 131375.9693793387, 'min': -38833.55692686316} best=-38833.55692686316
5: neval=110{'avg': -24728.054812717444, 'max': 67538.3372109492, 'min': -38833.55692686316} best=-38833.55692686316
6: neval=116{'avg': -33914.60852519968, 'max': 17625.000048482776, 'min': -38833.55692686316} best=-38833.55692686316
7: neval=117{'avg': -37932.59707982482, 'max': 17625.000048482776, 'min': -38833.55692686316} best=-38833.55692686316
8: neval=116{'avg': -38833.55692686316, 'max': -38833.55692686316, 'min': -38833.55692686316} best=-38833.55692686316
9: neval=114{'avg': -38833.55692686316, 'max': -38833.55692686316, 'min': -38833.55692686316} best=-38833.55692686316
10: neval=114{'avg': -38833.55692686316, 'max': -38833.55692686316, 'min': -38833.55692686316} best=-38833.55692686316
11: neval=129{'avg': -38833.55692686316, 'max': -38833.55692686316, 'min': -38833.55692686316} best=-38833.55692686316
12: neval=128{'avg': -38833.55692686316, 'max': -38833.55692686316, 'min': -38833.55692686316} best=-38833.55692686316
13: neval=127{'avg': -38833.55692686316, 'max': -38833.55692686316, 'min': -38833.55692686316} best=-38833.55692686316
14: neval=112{'avg': -38833.55692686316, 'max': -38833.55692686316, 'min': -38833.55692686316} best=-38833.55692686316
15: neval=107{'avg': -38833.55692686316, 'max': -38833.55692686316, 'min': -38833.55692686316} best=-38833.55692686316
16: neval=105{'avg': -38833.55692686316, 'max': -38833.55692686316, 'min': -38833.55692686316} best=-38833.55692686316
17: neval=112{'avg': -38833.55692686316, 'max': -38833.55692686316, 'min': -38833.55692686316} best=-38833.55692686316
18: neval=111{'avg': -36406.39579215836, 'max': 84096.8729890198, 'min': -38833.55692686316} best=-38833.55692686316
19: neval=116{'avg': -38833.55692686316, 'max': -38833.55692686316, 'min': -38833.55692686316} best=-38833.55692686316
20: neval=125{'avg': -38833.55692686316, 'max': -38833.55692686316, 'min': -38833.55692686316} best=-38833.55692686316
21: neval=110{'avg': -38833.55692686316, 'max': -38833.55692686316, 'min': -38833.55692686316} best=-38833.55692686316
22: neval=116{'avg': -38337.76516991691, 'max': 35535.20661507516, 'min': -38833.55692686316} best=-38833.55692686316
23: neval=118{'avg': -38833.55692686316, 'max': -38833.55692686316, 'min': -38833.55692686316} best=-38833.55692686316
24: neval=108{'avg': -38833.55692686316, 'max': -38833.55692686316, 'min': -38833.55692686316} best=-38833.55692686316
25: neval=111{'avg': -38833.55692686316, 'max': -38833.55692686316, 'min': -38833.55692686316} best=-38833.55692686316
26: neval=123{'avg': -38857.143358928166, 'max': -38833.55692686316, 'min': -42371.5217366133} best=-42371.5217366133
27: neval=123{'avg': -37826.851141228886, 'max': 112172.31091827842, 'min': -38833.55692686316} best=-42371.5217366133
28: neval=128{'avg': -38296.13562312402, 'max': 41779.63863400858, 'min': -38833.55692686316} best=-42371.5217366133
29: neval=120{'avg': -38833.55692686316, 'max': -38833.55692686316, 'min': -38833.55692686316} best=-42371.5217366133
30: neval=126{'avg': -38833.55692686316, 'max': -38833.55692686316, 'min': -38833.55692686316} best=-42371.5217366133
31: neval=118{'avg': -38833.55692686316, 'max': -38833.55692686316, 'min': -38833.55692686316} best=-42371.5217366133
32: neval=114{'avg': -38328.21411893979, 'max': 36967.86426164229, 'min': -38833.55692686316} best=-42371.5217366133
33: neval=120{'avg': -38951.489087188165, 'max': -38833.55692686316, 'min': -42371.5217366133} best=-42371.5217366133
34: neval=126{'avg': -39258.11270403318, 'max': -38833.55692686316, 'min': -42371.5217366133} best=-42371.5217366133
35: neval=118{'avg': -40413.84787521823, 'max': -38833.55692686316, 'min': -42371.5217366133} best=-42371.5217366133
36: neval=122{'avg': -41852.62023118328, 'max': -38833.55692686316, 'min': -42371.5217366133} best=-42371.5217366133
37: neval=121{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
38: neval=115{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
39: neval=114{'avg': -42306.92306039138, 'max': -32681.720303323986, 'min': -42371.5217366133} best=-42371.5217366133
40: neval=115{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
41: neval=115{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
42: neval=120{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
43: neval=123{'avg': -41585.4381937807, 'max': 75541.00968827753, 'min': -42371.5217366133} best=-42371.5217366133
44: neval=120{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
45: neval=127{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
46: neval=119{'avg': -41786.54992359659, 'max': 45374.250215893815, 'min': -42371.5217366133} best=-42371.5217366133
47: neval=110{'avg': -41835.2692869904, 'max': 38066.345706822634, 'min': -42371.5217366133} best=-42371.5217366133
48: neval=115{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
49: neval=107{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
50: neval=122{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
51: neval=124{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
52: neval=120{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
53: neval=121{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
54: neval=115{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
55: neval=125{'avg': -41454.747854602014, 'max': 95144.56056508046, 'min': -42371.5217366133} best=-42371.5217366133
56: neval=126{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
57: neval=108{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
58: neval=116{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
59: neval=114{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
60: neval=116{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
61: neval=116{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
62: neval=111{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133
63: neval=115{'avg': -42371.52173661331, 'max': -42371.5217366133, 'min': -42371.5217366133} best=-42371.5217366133


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 70]
best_individual.trans_facility = [144]
best_individual.unused_cities = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174}
best_individual.fitness.values = (-42371.5217366133,)