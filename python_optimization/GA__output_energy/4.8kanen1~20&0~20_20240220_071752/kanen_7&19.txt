局----------------------  実行情報  ----------------------
実行時間＝4939秒
個体数＝1300
合計世代数＝100
===============================
Total cost: -186840.14753648068
===============================
------------------------  前提  ------------------------

waste=kanen

ごみ量36位以内：
札幌市 (349353), 函館市 (66649), 旭川市 (64890), 苫小牧市 (42288), 釧路市 (38335), 帯広市 (35291), 千歳市 (25770), 小樽市 (25049), 江別市 (24906), 北見市 (20809), 室蘭市 (20448), 岩見沢市 (12638), 登別市 (11426), 北広島市 (10822), 石狩市 (9341), 音更町 (7531), 稚内市 (7127), 恵庭市 (6987), 伊達市 (6907), 網走市 (6299), 滝川市 (5831), 北斗市 (5150), 七飯町 (5008), 中標津町 (4837), 根室市 (4736), 幕別町 (4414), 新ひだか町 (4277), 釧路町 (4090), 美幌町 (4063), 白老町 (3395), 紋別市 (3325), 中札内村 (2807), 芽室町 (2638), 東神楽町 (2584), 余市町 (2489), 砂川市 (2419)

焼却施設数: 7
中継施設数: 19

輸送単価＝ 4.8 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='kanen'
unit ='t/year'

inc_size= [766581, 161604, 9014, 3693, 147, 33, 24]
inc_facility = ['札幌市', '釧路市', '稚内市', '遠別町', '幌延町', '豊富町', '天塩町']
inc_blocks = [['南幌町', '札幌市', '江別市', '北広島市', '石狩市', '当別町', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町'], ['名寄市', '下川町', '美深町', '音威子府村', '小平町', '苫前町', '羽幌町', '初山別村', '遠別町', '西興部村', '雄武町'], ['天塩町'], ['稚内市'], ['豊富町'], ['中川町', '中頓別町', '幌延町'], ['斜里町', '本別町', '足寄町', '浦幌町', '釧路市', '釧路町', '厚岸町', '浜中町', '標茶町', '弟子屈町', '鶴居村', '白糠町']]

trans_size=[83618, 78531, 60024, 46307, 34734, 32045, 25530, 20448, 19659, 17415, 12651, 11426, 9414, 7726, 7532, 7044, 4736, 3700, 1887]
trans_facility = ['函館市', '旭川市', '帯広市', '苫小牧市', '千歳市', '小樽市', '北見市', '室蘭市', '岩見沢市', '豊浦町', '砂川市', '登別市', '新ひだか町', '中標津町', '網走市', '湧別町', '根室市', '深川市', '猿払村']
trans_blocks = [['夕張市', '岩見沢市', '美唄市', '三笠市', '由仁町', '長沼町', '栗山町', '月形町', '新篠津村'], ['芦別市', '赤平市', '滝川市', '砂川市', '歌志内市', '奈井江町', '上砂川町', '浦臼町', '新十津川町'], ['深川市', '妹背牛町', '秩父別町', '雨竜町', '北竜町', '沼田町', '留萌市', '増毛町'], ['千歳市', '恵庭市', '厚真町', '安平町', '占冠村'], ['小樽市', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村'], ['室蘭市'], ['苫小牧市', '白老町', 'むかわ町'], ['登別市'], ['島牧村', '寿都町', '黒松内町', '伊達市', '豊浦町', '壮瞥町', '洞爺湖町', '八雲町', '長万部町', '今金町', 'せたな町'], ['日高町', '平取町', '新冠町', '浦河町', '様似町', 'えりも町', '新ひだか町'], ['函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '江差町', '上ノ国町', '厚沢部町', '乙部町'], ['旭川市', '士別市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町', '和寒町', '剣淵町', '幌加内町'], ['猿払村', '浜頓別町', '枝幸町'], ['北見市', '美幌町', '津別町', '訓子府町', '置戸町', '陸別町'], ['網走市', '清里町', '小清水町', '大空町'], ['紋別市', '佐呂間町', '遠軽町', '湧別町', '滝上町', '興部町'], ['南富良野町', '帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町'], ['根室市'], ['別海町', '中標津町', '標津町', '羅臼町']]

arrows = [[['札幌市'], ['小樽市', '岩見沢市', '新ひだか町', '函館市', '砂川市', '深川市', '室蘭市', '苫小牧市', '登別市', '旭川市', '豊浦町', '千歳市']], [['稚内市'], ['猿払村']], [['釧路市'], ['湧別町', '根室市', '中標津町', '帯広市', '北見市', '網走市']]]


---------------------  エネルギー情報  ---------------------
[13566.689216708335, 231046.9633041158, -461076.8429066199, 29623.04284931507]

EL_direct: {'札幌市': 7503.434974208334, '釧路市': 3390.9531963125005, '稚内市': 0.0, '遠別町': 2619.4294980208338, '幌延町': 52.87154816666667, '豊富町': 0.0, '天塩町': 0.0}
ED_inc: {'札幌市': -520073.4461703857, '釧路市': 30820.593958043733, '稚内市': 17842.281179458492, '遠別町': 9352.073695625199, '幌延町': 665.9305254002103, '豊富町': 180.0454620005565, '天塩町': 135.67844323768028}

EL_indirect: {'函館市': 82574.7988576593, '旭川市': 35828.951353610995, '帯広市': 26609.1886427835, '苫小牧市': 10141.120542156501, '千歳市': 5732.45048792, '小樽市': 5947.0408341825005, '北見市': 11565.628434641669, '室蘭市': 8068.9939499520015, '岩見沢市': 3640.2421771495005, '豊浦町': 10840.559320391669, '砂川市': 4171.477838029666, '登別市': 4112.243634096, '新ひだか町': 5330.977747872834, '中標津町': 2782.1158314300005, '網走市': 3627.6592411735005, '湧別町': 5758.247483885001, '根室市': 1753.533476864, '深川市': 1564.9251998250002, '猿払村': 996.8082504921667}
ED_trans: {'函館市': 5113.297972602739, '旭川市': 4802.224438356165, '帯広市': 3670.508712328767, '苫小牧市': 2831.7047671232876, '千歳市': 2124.007890410959, '小樽市': 1959.5736986301372, '北見市': 1561.1769863013699, '室蘭市': 1250.409205479452, '岩見沢市': 1202.1613150684934, '豊浦町': 1064.9391780821918, '砂川市': 773.6173150684931, '登別市': 698.7077260273974, '新ひだか町': 575.6725479452055, '中標津町': 472.45019178082197, '網走市': 460.58695890410957, '湧別町': 430.7454246575342, '根室市': 289.6096438356164, '深川市': 226.25753424657532, '猿払村': 115.39134246575344}

----------------------  輸送情報  ----------------------

direct 札幌市(1087/2100) t/day → receive from: 南幌町, 札幌市, 江別市, 北広島市, 石狩市, 当別町, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町
indirect 札幌市(1014/2100) t/day → receive from: 中継施設＝ 小樽市(32045) → receive from: 小樽市, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村
岩見沢市(19659) → receive from: 夕張市, 岩見沢市, 美唄市, 三笠市, 由仁町, 長沼町, 栗山町, 月形町, 新篠津村
新ひだか町(9414) → receive from: 日高町, 平取町, 新冠町, 浦河町, 様似町, えりも町, 新ひだか町
函館市(83618) → receive from: 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 江差町, 上ノ国町, 厚沢部町, 乙部町
砂川市(12651) → receive from: 芦別市, 赤平市, 滝川市, 砂川市, 歌志内市, 奈井江町, 上砂川町, 浦臼町, 新十津川町
深川市(3700) → receive from: 深川市, 妹背牛町, 秩父別町, 雨竜町, 北竜町, 沼田町, 留萌市, 増毛町
室蘭市(20448) → receive from: 室蘭市
苫小牧市(46307) → receive from: 苫小牧市, 白老町, むかわ町
登別市(11426) → receive from: 登別市
旭川市(78531) → receive from: 旭川市, 士別市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町, 和寒町, 剣淵町, 幌加内町
豊浦町(17415) → receive from: 島牧村, 寿都町, 黒松内町, 伊達市, 豊浦町, 壮瞥町, 洞爺湖町, 八雲町, 長万部町, 今金町, せたな町
千歳市(34734) → receive from: 千歳市, 恵庭市, 厚真町, 安平町, 占冠村
direct 釧路市(134/443) t/day → receive from: 斜里町, 本別町, 足寄町, 浦幌町, 釧路市, 釧路町, 厚岸町, 浜中町, 標茶町, 弟子屈町, 鶴居村, 白糠町
indirect 釧路市(308/443) t/day → receive from: 中継施設＝ 湧別町(7044) → receive from: 紋別市, 佐呂間町, 遠軽町, 湧別町, 滝上町, 興部町
根室市(4736) → receive from: 根室市
中標津町(7726) → receive from: 別海町, 中標津町, 標津町, 羅臼町
帯広市(60024) → receive from: 南富良野町, 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町
北見市(25530) → receive from: 北見市, 美幌町, 津別町, 訓子府町, 置戸町, 陸別町
網走市(7532) → receive from: 網走市, 清里町, 小清水町, 大空町
direct 稚内市(20/25) t/day → receive from: 稚内市
indirect 稚内市(5/25) t/day → receive from: 中継施設＝ 猿払村(1887) → receive from: 猿払村, 浜頓別町, 枝幸町
direct 遠別町(10/10) t/day → receive from: 名寄市, 下川町, 美深町, 音威子府村, 小平町, 苫前町, 羽幌町, 初山別村, 遠別町, 西興部村, 雄武町
direct 幌延町(0/0) t/day → receive from: 中川町, 中頓別町, 幌延町
direct 豊富町(0/0) t/day → receive from: 豊富町
direct 天塩町(0/0) t/day → receive from: 天塩町

----------------------  遺伝情報  ----------------------

個体数＝1300
世代数＝100
0: neval=1300{'avg': inf, 'max': inf, 'min': -80098.57613519151} best=-80098.57613519151
1: neval=1007{'avg': inf, 'max': inf, 'min': -56380.11954969497} best=-80098.57613519151
2: neval=1069{'avg': inf, 'max': inf, 'min': -56380.11954969497} best=-80098.57613519151
3: neval=1014{'avg': inf, 'max': inf, 'min': -46332.008035397404} best=-80098.57613519151
4: neval=1010{'avg': inf, 'max': inf, 'min': -68819.7262391193} best=-80098.57613519151
5: neval=1032{'avg': inf, 'max': inf, 'min': -57854.4110269254} best=-80098.57613519151
6: neval=1051{'avg': inf, 'max': inf, 'min': -62350.14147795032} best=-80098.57613519151
7: neval=1070{'avg': inf, 'max': inf, 'min': -97703.78944224586} best=-97703.78944224586
8: neval=971{'avg': inf, 'max': inf, 'min': -121538.35574962117} best=-121538.35574962117
9: neval=1037{'avg': inf, 'max': inf, 'min': -121538.35574962117} best=-121538.35574962117
10: neval=1026{'avg': inf, 'max': inf, 'min': -123994.50556125579} best=-123994.50556125579
11: neval=1057{'avg': inf, 'max': inf, 'min': -123233.06422017673} best=-123994.50556125579
12: neval=1019{'avg': inf, 'max': inf, 'min': -123233.06422017673} best=-123994.50556125579
13: neval=1036{'avg': -55432.0220518973, 'max': 603355.5884312016, 'min': -147296.82905513747} best=-147296.82905513747
14: neval=1037{'avg': inf, 'max': inf, 'min': -123233.06422017673} best=-147296.82905513747
15: neval=1016{'avg': inf, 'max': inf, 'min': -141420.77293730716} best=-147296.82905513747
16: neval=1004{'avg': -83505.90048937977, 'max': 174475.00395234104, 'min': -141420.77293730716} best=-147296.82905513747
17: neval=1037{'avg': -89629.97057410279, 'max': 499163.5115653182, 'min': -145317.48584129763} best=-147296.82905513747
18: neval=1009{'avg': -101595.11182798249, 'max': 237139.83273105475, 'min': -153218.85695717522} best=-153218.85695717522
19: neval=1019{'avg': -111305.24174199824, 'max': 358741.55213845853, 'min': -157182.05730283182} best=-157182.05730283182
20: neval=1035{'avg': -122557.19812672629, 'max': 119484.24028634948, 'min': -161563.82126405413} best=-161563.82126405413
21: neval=1040{'avg': -129843.20743991231, 'max': 238366.89823819592, 'min': -163696.58793303274} best=-163696.58793303274
22: neval=1035{'avg': -139685.35799430343, 'max': 50200.50720805634, 'min': -168314.14375134953} best=-168314.14375134953
23: neval=1043{'avg': -147064.82096178713, 'max': 125990.01702111689, 'min': -168936.67432909872} best=-168936.67432909872
24: neval=1026{'avg': -152523.128171899, 'max': 5105.7953233045555, 'min': -175400.80790499868} best=-175400.80790499868
25: neval=1060{'avg': -156453.68225970675, 'max': 155692.80081768247, 'min': -176614.19344223218} best=-176614.19344223218
26: neval=1008{'avg': -160952.89787493506, 'max': 20729.025744196933, 'min': -176614.19344223218} best=-176614.19344223218
27: neval=1031{'avg': -164155.18463837352, 'max': 291087.5193244708, 'min': -176776.31859590617} best=-176776.31859590617
28: neval=1023{'avg': -166692.07753986533, 'max': 8744.511342002148, 'min': -178008.08712657104} best=-178008.08712657104
29: neval=1000{'avg': -170049.66898905908, 'max': 34343.18051776842, 'min': -178008.08712657104} best=-178008.08712657104
30: neval=1051{'avg': -171025.52934087516, 'max': 172820.70559411703, 'min': -178159.89362767382} best=-178159.89362767382
31: neval=1024{'avg': -173742.36074721994, 'max': 70144.21380106856, 'min': -180387.72655480285} best=-180387.72655480285
32: neval=1062{'avg': -175500.90038611012, 'max': -19924.303342476825, 'min': -180964.60646015592} best=-180964.60646015592
33: neval=1014{'avg': -176480.39272279153, 'max': 106522.20977314872, 'min': -182547.9371351436} best=-182547.9371351436
34: neval=1024{'avg': -178230.23048005934, 'max': -82037.6880755355, 'min': -182736.04553408135} best=-182736.04553408135
35: neval=1038{'avg': -179431.32674585734, 'max': -19190.35007592693, 'min': -184033.7379843795} best=-184033.7379843795
36: neval=1012{'avg': -180531.75029874642, 'max': 40432.57663779083, 'min': -183792.0381266201} best=-184033.7379843795
37: neval=1002{'avg': -181472.0081568781, 'max': 38514.86094852233, 'min': -185426.93355933682} best=-185426.93355933682
38: neval=1029{'avg': -181581.10182627276, 'max': -6555.820247125648, 'min': -185426.93355933682} best=-185426.93355933682
39: neval=1001{'avg': -183145.31832319958, 'max': -34781.321491885814, 'min': -185275.48731767983} best=-185426.93355933682
40: neval=1042{'avg': -183575.48751718953, 'max': -28042.43871792871, 'min': -185613.32154649167} best=-185613.32154649167
41: neval=1023{'avg': -184132.84906274136, 'max': -8945.83398579809, 'min': -185766.203832126} best=-185766.203832126
42: neval=1049{'avg': -184078.24153749726, 'max': -27194.150624777572, 'min': -185966.28999040663} best=-185966.28999040663
43: neval=1061{'avg': -184415.87176990294, 'max': 53081.621915307434, 'min': -185966.28999040663} best=-185966.28999040663
44: neval=1023{'avg': -184521.1352784282, 'max': 56947.770013898305, 'min': -186134.8881746773} best=-186134.8881746773
45: neval=1033{'avg': -184731.79099155733, 'max': 113565.30707752088, 'min': -186405.65929746043} best=-186405.65929746043
46: neval=1032{'avg': -185065.39134733542, 'max': 36505.059359476436, 'min': -186605.74545574107} best=-186605.74545574107
47: neval=1048{'avg': -185058.868422979, 'max': -37097.41299979936, 'min': -186605.74545574107} best=-186605.74545574107
48: neval=1026{'avg': -184973.11891767397, 'max': 27906.676778071942, 'min': -186605.74545574107} best=-186605.74545574107
49: neval=1052{'avg': -185284.18854843773, 'max': 95217.78478179908, 'min': -186605.74545574107} best=-186605.74545574107
50: neval=1028{'avg': -185464.3260227446, 'max': -30304.125494278494, 'min': -186605.74545574107} best=-186605.74545574107
51: neval=1023{'avg': -185980.13245146777, 'max': -63719.65633793916, 'min': -186605.74545574107} best=-186605.74545574107
52: neval=1014{'avg': -185753.18178029454, 'max': 7928.831988977989, 'min': -186605.74545574107} best=-186605.74545574107
53: neval=1011{'avg': -185785.20128292346, 'max': -7343.3677923531395, 'min': -186605.74545574107} best=-186605.74545574107
54: neval=1043{'avg': -185531.5861808114, 'max': 27944.94140478052, 'min': -186605.74545574107} best=-186605.74545574107
55: neval=1053{'avg': -185651.08364507314, 'max': -9684.896034883528, 'min': -186605.74545574107} best=-186605.74545574107
56: neval=1054{'avg': -185215.5846634885, 'max': 87913.55021667076, 'min': -186605.74545574107} best=-186605.74545574107
57: neval=1009{'avg': -185849.16934893196, 'max': -24336.02126746845, 'min': -186605.74545574107} best=-186605.74545574107
58: neval=1028{'avg': -186084.16615550627, 'max': -24642.015124816047, 'min': -186605.74545574107} best=-186605.74545574107
59: neval=1050{'avg': -185877.64614200074, 'max': -5712.204929864445, 'min': -186605.74545574107} best=-186605.74545574107
60: neval=1018{'avg': -185962.9819612371, 'max': 18795.74882139997, 'min': -186605.74545574107} best=-186605.74545574107
61: neval=1034{'avg': -185761.42719141248, 'max': 75444.62026130834, 'min': -186764.48654974822} best=-186764.48654974822
62: neval=1064{'avg': -185628.65221295008, 'max': 63103.99267268126, 'min': -186764.48654974822} best=-186764.48654974822
63: neval=1045{'avg': -185951.56290303587, 'max': 35641.882025304694, 'min': -186764.48654974822} best=-186764.48654974822
64: neval=975{'avg': -185626.9377054726, 'max': 38956.56958146786, 'min': -186764.48654974822} best=-186764.48654974822
65: neval=1014{'avg': -186273.76666711466, 'max': -55415.83611710819, 'min': -186764.48654974822} best=-186764.48654974822
66: neval=1027{'avg': -186007.96292910233, 'max': -26438.75160026642, 'min': -186764.48654974822} best=-186764.48654974822
67: neval=1030{'avg': -185939.67229144098, 'max': -39261.04803443119, 'min': -186764.48654974822} best=-186764.48654974822
68: neval=988{'avg': -185936.92920782886, 'max': 20793.80841624682, 'min': -186764.48654974822} best=-186764.48654974822
69: neval=1026{'avg': -185178.05284024836, 'max': 228430.60142178822, 'min': -186764.48654974822} best=-186764.48654974822
70: neval=1033{'avg': -185663.68746053186, 'max': 37122.56741220574, 'min': -186764.48654974822} best=-186764.48654974822
71: neval=1062{'avg': -185442.03886291882, 'max': 116630.94156624257, 'min': -186764.48654974822} best=-186764.48654974822
72: neval=1029{'avg': -185856.41675287834, 'max': 49824.75509370303, 'min': -186764.48654974822} best=-186764.48654974822
73: neval=1031{'avg': -185652.53593877802, 'max': 80633.91670044741, 'min': -186764.48654974822} best=-186764.48654974822
74: neval=1008{'avg': -185891.85997687804, 'max': 63184.299512383834, 'min': -186764.48654974822} best=-186764.48654974822
75: neval=1018{'avg': -185847.06602883225, 'max': 5716.31385816733, 'min': -186764.48654974822} best=-186764.48654974822
76: neval=1011{'avg': -185712.26719231866, 'max': 50131.65871998172, 'min': -186764.48654974822} best=-186764.48654974822
77: neval=1014{'avg': -185823.9431710937, 'max': -6884.398123466974, 'min': -186764.48654974822} best=-186764.48654974822
78: neval=1013{'avg': -185549.1022226443, 'max': 55458.01706543957, 'min': -186764.48654974822} best=-186764.48654974822
79: neval=1035{'avg': -185809.4406837609, 'max': 2766.984457174647, 'min': -186764.48654974822} best=-186764.48654974822
80: neval=1048{'avg': -185968.19289223224, 'max': 20979.837480432838, 'min': -186764.48654974822} best=-186764.48654974822
81: neval=1027{'avg': -186209.7000341444, 'max': 81.26125733835579, 'min': -186764.48654974822} best=-186764.48654974822
82: neval=1066{'avg': -185896.49202977307, 'max': 94967.32040603897, 'min': -186764.48654974822} best=-186764.48654974822
83: neval=1034{'avg': -185928.1112446562, 'max': 53173.44802619853, 'min': -186764.48654974822} best=-186764.48654974822
84: neval=1044{'avg': -185536.24891981628, 'max': 107243.77094430597, 'min': -186764.48654974822} best=-186764.48654974822
85: neval=1032{'avg': -185269.24048954327, 'max': 110724.80420561004, 'min': -186764.48654974822} best=-186764.48654974822
86: neval=1044{'avg': -186005.27818118167, 'max': 34147.97079825619, 'min': -186764.48654974822} best=-186764.48654974822
87: neval=1038{'avg': -185580.96478356348, 'max': 80782.547668185, 'min': -186764.48654974822} best=-186764.48654974822
88: neval=1025{'avg': -185838.24838902004, 'max': -23843.466819092384, 'min': -186764.48654974822} best=-186764.48654974822
89: neval=1030{'avg': -186226.2275373841, 'max': -13090.733519988044, 'min': -186764.48654974822} best=-186764.48654974822
90: neval=1036{'avg': -186214.4751942905, 'max': -48177.670753237806, 'min': -186764.48654974822} best=-186764.48654974822
91: neval=1015{'avg': -185948.95332906407, 'max': 30345.176449911123, 'min': -186764.48654974822} best=-186764.48654974822
92: neval=1035{'avg': -186138.9692556795, 'max': 99746.43274689082, 'min': -186764.48654974822} best=-186764.48654974822
93: neval=1042{'avg': -185920.7696705471, 'max': 33913.14592907349, 'min': -186764.48654974822} best=-186764.48654974822
94: neval=1044{'avg': -185506.7831076165, 'max': 181182.02597805506, 'min': -186764.48654974822} best=-186764.48654974822
95: neval=1023{'avg': -185271.73340798105, 'max': 94902.77860449313, 'min': -186764.48654974822} best=-186764.48654974822
96: neval=1005{'avg': -185866.0959681115, 'max': 38118.0372005425, 'min': -186764.48654974822} best=-186764.48654974822
97: neval=1015{'avg': -186236.21014871573, 'max': 57146.71858453579, 'min': -186764.48654974822} best=-186764.48654974822
98: neval=1051{'avg': -185671.39144670285, 'max': -3691.1069392717254, 'min': -186764.48654974822} best=-186764.48654974822
99: neval=1030{'avg': -186261.1477490271, 'max': -42239.563820038384, 'min': -186764.48654974822} best=-186764.48654974822


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 116, 117, 118, 123, 124, 162]
best_individual.trans_facility = [1, 7, 9, 26, 32, 52, 53, 54, 56, 69, 70, 87, 119, 125, 126, 137, 143, 170, 172]
best_individual.unused_cities = {0, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 121, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174}
best_individual.fitness.values = (-186840.14753648068,)