局----------------------  実行情報  ----------------------
実行時間＝2286秒
個体数＝1350
合計世代数＝100
===============================
Total cost: -181726.31938782806
===============================
------------------------  前提  ------------------------

waste=kanen

ごみ量37位以内：
札幌市 (349353), 函館市 (66649), 旭川市 (64890), 苫小牧市 (42288), 釧路市 (38335), 帯広市 (35291), 千歳市 (25770), 小樽市 (25049), 江別市 (24906), 北見市 (20809), 室蘭市 (20448), 岩見沢市 (12638), 登別市 (11426), 北広島市 (10822), 石狩市 (9341), 音更町 (7531), 稚内市 (7127), 恵庭市 (6987), 伊達市 (6907), 網走市 (6299), 滝川市 (5831), 北斗市 (5150), 七飯町 (5008), 中標津町 (4837), 根室市 (4736), 幕別町 (4414), 新ひだか町 (4277), 釧路町 (4090), 美幌町 (4063), 白老町 (3395), 紋別市 (3325), 中札内村 (2807), 芽室町 (2638), 東神楽町 (2584), 余市町 (2489), 砂川市 (2419), せたな町 (2370)

焼却施設数: 9
中継施設数: 18

輸送単価＝ 4.8 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='kanen'
unit ='t/year'

inc_size= [765954, 161420, 7127, 2669, 2351, 1481, 37, 33, 24]
inc_facility = ['札幌市', '釧路市', '稚内市', '遠別町', '猿払村', '初山別村', '幌延町', '豊富町', '天塩町']
inc_blocks = [['南幌町', '札幌市', '江別市', '北広島市', '石狩市', '当別町', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町'], ['天塩町'], ['稚内市'], ['猿払村', '浜頓別町', '中頓別町', '枝幸町', '興部町', '雄武町'], ['名寄市', '下川町', '美深町', '音威子府村', '遠別町', '西興部村'], ['留萌市', '増毛町', '小平町', '苫前町', '羽幌町', '初山別村'], ['豊富町'], ['中川町', '幌延町'], ['斜里町', '本別町', '足寄町', '浦幌町', '釧路市', '釧路町', '厚岸町', '浜中町', '標茶町', '弟子屈町', '鶴居村', '白糠町']]

trans_size=[83618, 78531, 60024, 46307, 34734, 32045, 25530, 20448, 19659, 15724, 11426, 10694, 9414, 7726, 7532, 6860, 6721, 4736]
trans_facility = ['函館市', '旭川市', '帯広市', '苫小牧市', '千歳市', '小樽市', '北見市', '室蘭市', '岩見沢市', '滝川市', '登別市', '豊浦町', '新ひだか町', '中標津町', '網走市', '遠軽町', '長万部町', '根室市']
trans_blocks = [['芦別市', '赤平市', '滝川市', '砂川市', '歌志内市', '深川市', '奈井江町', '上砂川町', '浦臼町', '新十津川町', '妹背牛町', '秩父別町', '雨竜町', '北竜町', '沼田町'], ['夕張市', '岩見沢市', '美唄市', '三笠市', '由仁町', '長沼町', '栗山町', '月形町', '新篠津村'], ['千歳市', '恵庭市', '厚真町', '安平町', '占冠村'], ['小樽市', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村'], ['室蘭市'], ['苫小牧市', '白老町', 'むかわ町'], ['登別市'], ['伊達市', '豊浦町', '壮瞥町', '洞爺湖町'], ['日高町', '平取町', '新冠町', '浦河町', '様似町', 'えりも町', '新ひだか町'], ['函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '江差町', '上ノ国町', '厚沢部町', '乙部町'], ['紋別市', '佐呂間町', '遠軽町', '湧別町', '滝上町'], ['旭川市', '士別市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町', '和寒町', '剣淵町', '幌加内町'], ['北見市', '美幌町', '津別町', '訓子府町', '置戸町', '陸別町'], ['網走市', '清里町', '小清水町', '大空町'], ['南富良野町', '帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町'], ['島牧村', '寿都町', '黒松内町', '八雲町', '長万部町', '今金町', 'せたな町'], ['根室市'], ['別海町', '中標津町', '標津町', '羅臼町']]

arrows = [[['札幌市'], ['小樽市', '岩見沢市', '新ひだか町', '滝川市', '函館市', '長万部町', '室蘭市', '苫小牧市', '登別市', '旭川市', '豊浦町', '千歳市']], [['釧路市'], ['遠軽町', '根室市', '中標津町', '帯広市', '北見市', '網走市']]]


---------------------  エネルギー情報  ---------------------
[14664.60458422917, 228743.46296145924, -454592.44523488625, 29458.058301369863]

EL_direct: {'札幌市': 7503.434974208334, '釧路市': 3390.9531963125005, '稚内市': 0.0, '遠別町': 2087.1669804375, '猿払村': 1121.1229377291668, '初山別村': 558.4578127916668, '幌延町': 3.4686827500000006, '豊富町': 0.0, '天塩町': 0.0}
ED_inc: {'札幌市': -519648.0690076999, '釧路市': 30899.461702098924, '稚内市': 15144.566798995975, '遠別町': 7296.022459449249, '猿払村': 6611.560751988967, '初山別村': 4589.042298863878, '幌延町': 199.24585617849738, '豊富町': 180.0454620005565, '天塩町': 135.67844323768028}

EL_indirect: {'函館市': 82574.7988576593, '旭川市': 35828.951353610995, '帯広市': 26609.1886427835, '苫小牧市': 10141.120542156501, '千歳市': 5732.45048792, '小樽市': 5947.0408341825005, '北見市': 11565.628434641669, '室蘭市': 8068.9939499520015, '岩見沢市': 3640.2421771495005, '滝川市': 5852.888054125668, '登別市': 4112.243634096, '豊浦町': 4638.077371243334, '新ひだか町': 5330.977747872834, '中標津町': 2782.1158314300005, '網走市': 3627.6592411735005, '遠軽町': 5622.2359494708335, '長万部町': 4915.316375127167, '根室市': 1753.533476864}
ED_trans: {'函館市': 5113.297972602739, '旭川市': 4802.224438356165, '帯広市': 3670.508712328767, '苫小牧市': 2831.7047671232876, '千歳市': 2124.007890410959, '小樽市': 1959.5736986301372, '北見市': 1561.1769863013699, '室蘭市': 1250.409205479452, '岩見沢市': 1202.1613150684934, '滝川市': 961.5333698630137, '登別市': 698.7077260273974, '豊浦町': 653.9454246575343, '新ひだか町': 575.6725479452055, '中標津町': 472.45019178082197, '網走市': 460.58695890410957, '遠軽町': 419.493698630137, '長万部町': 410.9937534246576, '根室市': 289.6096438356164}

----------------------  輸送情報  ----------------------

direct 札幌市(1087/2099) t/day → receive from: 南幌町, 札幌市, 江別市, 北広島市, 石狩市, 当別町, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町
indirect 札幌市(1012/2099) t/day → receive from: 中継施設＝ 小樽市(32045) → receive from: 小樽市, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村
岩見沢市(19659) → receive from: 夕張市, 岩見沢市, 美唄市, 三笠市, 由仁町, 長沼町, 栗山町, 月形町, 新篠津村
新ひだか町(9414) → receive from: 日高町, 平取町, 新冠町, 浦河町, 様似町, えりも町, 新ひだか町
滝川市(15724) → receive from: 芦別市, 赤平市, 滝川市, 砂川市, 歌志内市, 深川市, 奈井江町, 上砂川町, 浦臼町, 新十津川町, 妹背牛町, 秩父別町, 雨竜町, 北竜町, 沼田町
函館市(83618) → receive from: 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 江差町, 上ノ国町, 厚沢部町, 乙部町
長万部町(6721) → receive from: 島牧村, 寿都町, 黒松内町, 八雲町, 長万部町, 今金町, せたな町
室蘭市(20448) → receive from: 室蘭市
苫小牧市(46307) → receive from: 苫小牧市, 白老町, むかわ町
登別市(11426) → receive from: 登別市
旭川市(78531) → receive from: 旭川市, 士別市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町, 和寒町, 剣淵町, 幌加内町
豊浦町(10694) → receive from: 伊達市, 豊浦町, 壮瞥町, 洞爺湖町
千歳市(34734) → receive from: 千歳市, 恵庭市, 厚真町, 安平町, 占冠村
direct 釧路市(134/442) t/day → receive from: 斜里町, 本別町, 足寄町, 浦幌町, 釧路市, 釧路町, 厚岸町, 浜中町, 標茶町, 弟子屈町, 鶴居村, 白糠町
indirect 釧路市(308/442) t/day → receive from: 中継施設＝ 遠軽町(6860) → receive from: 紋別市, 佐呂間町, 遠軽町, 湧別町, 滝上町
根室市(4736) → receive from: 根室市
中標津町(7726) → receive from: 別海町, 中標津町, 標津町, 羅臼町
帯広市(60024) → receive from: 南富良野町, 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町
北見市(25530) → receive from: 北見市, 美幌町, 津別町, 訓子府町, 置戸町, 陸別町
網走市(7532) → receive from: 網走市, 清里町, 小清水町, 大空町
direct 稚内市(20/20) t/day → receive from: 稚内市
direct 遠別町(7/7) t/day → receive from: 名寄市, 下川町, 美深町, 音威子府村, 遠別町, 西興部村
direct 猿払村(6/6) t/day → receive from: 猿払村, 浜頓別町, 中頓別町, 枝幸町, 興部町, 雄武町
direct 初山別村(4/4) t/day → receive from: 留萌市, 増毛町, 小平町, 苫前町, 羽幌町, 初山別村
direct 幌延町(0/0) t/day → receive from: 中川町, 幌延町
direct 豊富町(0/0) t/day → receive from: 豊富町
direct 天塩町(0/0) t/day → receive from: 天塩町

----------------------  遺伝情報  ----------------------

個体数＝1350
世代数＝100
0: neval=1350{'avg': inf, 'max': inf, 'min': -57186.62059177064} best=-57186.62059177064
1: neval=1084{'avg': inf, 'max': inf, 'min': 9449.399577639975} best=-57186.62059177064
2: neval=1053{'avg': inf, 'max': inf, 'min': -2120.826990632304} best=-57186.62059177064
3: neval=1054{'avg': inf, 'max': inf, 'min': -2120.826990632304} best=-57186.62059177064
4: neval=1053{'avg': inf, 'max': inf, 'min': -4776.237444281542} best=-57186.62059177064
5: neval=1064{'avg': inf, 'max': inf, 'min': -4776.237444281542} best=-57186.62059177064
6: neval=1054{'avg': inf, 'max': inf, 'min': -4776.237444281542} best=-57186.62059177064
7: neval=1082{'avg': inf, 'max': inf, 'min': -4776.237444281542} best=-57186.62059177064
8: neval=1065{'avg': inf, 'max': inf, 'min': -4776.237444281542} best=-57186.62059177064
9: neval=1070{'avg': inf, 'max': inf, 'min': -21468.309579183602} best=-57186.62059177064
10: neval=1047{'avg': inf, 'max': inf, 'min': -20356.051617839297} best=-57186.62059177064
11: neval=1064{'avg': inf, 'max': inf, 'min': -36767.797099149655} best=-57186.62059177064
12: neval=1072{'avg': inf, 'max': inf, 'min': -43319.52708034836} best=-57186.62059177064
13: neval=1105{'avg': inf, 'max': inf, 'min': -35519.757252312294} best=-57186.62059177064
14: neval=1050{'avg': inf, 'max': inf, 'min': -35098.11888756273} best=-57186.62059177064
15: neval=1067{'avg': inf, 'max': inf, 'min': -65836.1189507881} best=-65836.1189507881
16: neval=1077{'avg': 9185.284028590217, 'max': 431769.76534594875, 'min': -65836.1189507881} best=-65836.1189507881
17: neval=1083{'avg': -376.9545110966233, 'max': 408203.70038049744, 'min': -62384.39076795602} best=-65836.1189507881
18: neval=1070{'avg': -7813.509048963203, 'max': 250961.28178315362, 'min': -62035.16051881299} best=-65836.1189507881
19: neval=1073{'avg': inf, 'max': inf, 'min': -67174.35783405142} best=-67174.35783405142
20: neval=1057{'avg': -28288.440313321127, 'max': 314953.73465879494, 'min': -67431.79643920093} best=-67431.79643920093
21: neval=1062{'avg': -35296.07198398879, 'max': 200051.727407978, 'min': -72092.8439679785} best=-72092.8439679785
22: neval=1075{'avg': -41806.89408848262, 'max': 318884.65024394327, 'min': -78772.94479215011} best=-78772.94479215011
23: neval=1064{'avg': -47031.30610740911, 'max': 347157.7985484966, 'min': -84800.58747405984} best=-84800.58747405984
24: neval=1075{'avg': -53444.33386820589, 'max': 192068.18346359843, 'min': -88529.77652513949} best=-88529.77652513949
25: neval=1026{'avg': -61542.969418097324, 'max': 80009.16654526825, 'min': -90540.03151604939} best=-90540.03151604939
26: neval=1049{'avg': -64955.36761352381, 'max': 244396.41284187618, 'min': -109871.40034199927} best=-109871.40034199927
27: neval=1049{'avg': -71554.72353250181, 'max': 119086.68400746668, 'min': -106296.88619847197} best=-109871.40034199927
28: neval=1076{'avg': -75398.78168859053, 'max': 151120.95923899664, 'min': -111328.1626967064} best=-111328.1626967064
29: neval=1069{'avg': -81851.59635742159, 'max': 126388.09550316154, 'min': -111954.97428898227} best=-111954.97428898227
30: neval=1112{'avg': -87188.78036447338, 'max': 140915.46034619346, 'min': -125426.6504572295} best=-125426.6504572295
31: neval=1069{'avg': -92784.11826880724, 'max': 134179.66490697104, 'min': -140898.68957476158} best=-140898.68957476158
32: neval=1071{'avg': -99241.8227900857, 'max': 83637.12105161029, 'min': -146125.00813408865} best=-146125.00813408865
33: neval=1090{'avg': -104729.6134183394, 'max': 200574.31332891772, 'min': -146125.00813408865} best=-146125.00813408865
34: neval=1044{'avg': -112420.19702072733, 'max': 186798.71260566276, 'min': -151497.108707605} best=-151497.108707605
35: neval=1042{'avg': -119496.0011119861, 'max': 153645.80420678837, 'min': -155616.918396729} best=-155616.918396729
36: neval=1065{'avg': -127367.11073945506, 'max': 32236.29460030338, 'min': -155809.04002433686} best=-155809.04002433686
37: neval=1032{'avg': -134273.7687880275, 'max': 132422.35446060527, 'min': -157330.95514913724} best=-157330.95514913724
38: neval=1103{'avg': -139618.32116420034, 'max': 122330.21405487871, 'min': -161225.41731273418} best=-161225.41731273418
39: neval=1038{'avg': -145917.04819712462, 'max': 70128.48105414481, 'min': -164435.03137961775} best=-164435.03137961775
40: neval=1042{'avg': -149102.49071180064, 'max': 114211.35683299901, 'min': -164435.03137961775} best=-164435.03137961775
41: neval=1072{'avg': -152173.47251647845, 'max': -21793.108261949088, 'min': -164415.10132113536} best=-164435.03137961775
42: neval=1085{'avg': -154716.4729317606, 'max': 153300.54537181335, 'min': -164601.31664482053} best=-164601.31664482053
43: neval=1094{'avg': -157424.49377816642, 'max': 178531.98202670197, 'min': -165817.99387861046} best=-165817.99387861046
44: neval=1043{'avg': -159506.15593182662, 'max': 11081.144186035435, 'min': -166514.32651798127} best=-166514.32651798127
45: neval=1070{'avg': -161903.32743021898, 'max': 34918.01374010123, 'min': -167504.54578233737} best=-167504.54578233737
46: neval=1079{'avg': -162868.60406956493, 'max': 132161.42404306296, 'min': -168824.60305075187} best=-168824.60305075187
47: neval=1089{'avg': -162912.4765487115, 'max': 164841.74743198935, 'min': -170542.34947028282} best=-170542.34947028282
48: neval=1072{'avg': -165584.5020139249, 'max': 27419.76845290988, 'min': -173255.46438467217} best=-173255.46438467217
49: neval=1063{'avg': -167274.91012602224, 'max': 4646.80101161281, 'min': -173255.46438467217} best=-173255.46438467217
50: neval=1082{'avg': -168351.08898649047, 'max': 54051.642703371734, 'min': -175231.7148430619} best=-175231.7148430619
51: neval=1111{'avg': -169881.70471653438, 'max': 248188.6753472693, 'min': -175398.91234475642} best=-175398.91234475642
52: neval=1061{'avg': -171453.45769105846, 'max': 19144.457827724953, 'min': -177351.4709826435} best=-177351.4709826435
53: neval=1033{'avg': -172873.8509986497, 'max': 110900.511627689, 'min': -177351.4709826435} best=-177351.4709826435
54: neval=1104{'avg': -174076.94959984915, 'max': 93981.98187444068, 'min': -177695.02497143124} best=-177695.02497143124
55: neval=1057{'avg': -174898.53306117436, 'max': 117264.00007003613, 'min': -177869.23720739954} best=-177869.23720739954
56: neval=1078{'avg': -175926.3010794407, 'max': -1196.0429834830065, 'min': -177946.90198676923} best=-177946.90198676923
57: neval=1054{'avg': -176413.69026438906, 'max': 34056.18342756484, 'min': -177946.90198676923} best=-177946.90198676923
58: neval=1071{'avg': -176350.5394130984, 'max': 115206.487130135, 'min': -177946.90198676923} best=-177946.90198676923
59: neval=1099{'avg': -176588.7158526933, 'max': 75201.37009092329, 'min': -177946.90198676923} best=-177946.90198676923
60: neval=1059{'avg': -176959.5791990962, 'max': 15050.087371653139, 'min': -177946.90198676923} best=-177946.90198676923
61: neval=1045{'avg': -176116.90047671227, 'max': 118964.35355383244, 'min': -177946.90198676923} best=-177946.90198676923
62: neval=1021{'avg': -176926.14358815088, 'max': 137435.89088551365, 'min': -177946.90198676923} best=-177946.90198676923
63: neval=1071{'avg': -176737.66632172628, 'max': 94513.05783193978, 'min': -177946.90198676923} best=-177946.90198676923
64: neval=1071{'avg': -177069.20585047264, 'max': 15771.780343172242, 'min': -177946.90198676923} best=-177946.90198676923
65: neval=1031{'avg': -176257.4680230749, 'max': 138707.25416816855, 'min': -177946.90198676923} best=-177946.90198676923
66: neval=1058{'avg': -176960.3280365124, 'max': 219812.4178218763, 'min': -177946.90198676923} best=-177946.90198676923
67: neval=1097{'avg': -177029.72233848314, 'max': 8892.163844791812, 'min': -177946.90198676923} best=-177946.90198676923
68: neval=1075{'avg': -177317.7999152976, 'max': 8622.057026081828, 'min': -177946.90198676923} best=-177946.90198676923
69: neval=1061{'avg': -176928.42417529444, 'max': 141471.5191941141, 'min': -177946.90198676923} best=-177946.90198676923
70: neval=1064{'avg': -176836.1400716764, 'max': 184136.1502338833, 'min': -177946.90198676923} best=-177946.90198676923
71: neval=1055{'avg': -176779.20464843998, 'max': 12697.481328336224, 'min': -177946.90198676923} best=-177946.90198676923
72: neval=1074{'avg': -176781.22067132875, 'max': 154138.13770412, 'min': -177946.90198676923} best=-177946.90198676923
73: neval=1070{'avg': -176994.16220451033, 'max': -14608.935897787924, 'min': -177946.90198676923} best=-177946.90198676923
74: neval=1066{'avg': -176511.31020049183, 'max': 136783.3952970656, 'min': -177946.90198676923} best=-177946.90198676923
75: neval=1079{'avg': -175921.79314647728, 'max': 110568.67045108636, 'min': -177946.90198676923} best=-177946.90198676923
76: neval=1023{'avg': -176646.41414127566, 'max': 164490.51648859563, 'min': -177946.90198676923} best=-177946.90198676923
77: neval=1082{'avg': -176877.16226328415, 'max': -9316.417367458635, 'min': -177946.90198676923} best=-177946.90198676923
78: neval=1057{'avg': -177247.92235729404, 'max': 33638.67158670405, 'min': -177946.90198676923} best=-177946.90198676923
79: neval=1092{'avg': -176162.20684202778, 'max': 56936.11881667747, 'min': -177946.90198676923} best=-177946.90198676923
80: neval=1076{'avg': -176859.3748716418, 'max': 58874.41542599276, 'min': -177946.90198676923} best=-177946.90198676923
81: neval=1061{'avg': -177251.44027850888, 'max': 10037.412280799843, 'min': -177946.90198676923} best=-177946.90198676923
82: neval=1061{'avg': -177007.8458169754, 'max': 32014.300791250273, 'min': -177946.90198676923} best=-177946.90198676923
83: neval=1083{'avg': -176705.19707648444, 'max': 339138.0273976401, 'min': -177946.90198676923} best=-177946.90198676923
84: neval=1078{'avg': -176516.1335733887, 'max': 171460.154921952, 'min': -177946.90198676923} best=-177946.90198676923
85: neval=1072{'avg': -177003.7470332966, 'max': -10230.932768266597, 'min': -177946.90198676923} best=-177946.90198676923
86: neval=1078{'avg': -175125.00820452732, 'max': 155967.0707217927, 'min': -177946.90198676923} best=-177946.90198676923
87: neval=1067{'avg': -176502.972316757, 'max': 67737.33278914413, 'min': -177946.90198676923} best=-177946.90198676923
88: neval=1078{'avg': -176201.45626452685, 'max': 60056.85646733301, 'min': -177946.90198676923} best=-177946.90198676923
89: neval=1055{'avg': -177068.63457862253, 'max': 218771.0383015694, 'min': -177946.90198676923} best=-177946.90198676923
90: neval=1032{'avg': -176955.53001631732, 'max': 73382.99408219295, 'min': -177946.90198676923} best=-177946.90198676923
91: neval=1070{'avg': -177083.62168485575, 'max': -28.3126386374679, 'min': -177946.90198676923} best=-177946.90198676923
92: neval=1023{'avg': -177206.29785549032, 'max': 15312.832266749945, 'min': -177946.90198676923} best=-177946.90198676923
93: neval=1062{'avg': -176259.89449145197, 'max': 262603.48357514106, 'min': -177946.90198676923} best=-177946.90198676923
94: neval=1055{'avg': -177395.14292967142, 'max': 3005.1409926858687, 'min': -177946.90198676923} best=-177946.90198676923
95: neval=1045{'avg': -177444.66965528706, 'max': 61392.194906111436, 'min': -177946.90198676923} best=-177946.90198676923
96: neval=1060{'avg': -177091.4628012551, 'max': 19957.77791249656, 'min': -177946.90198676923} best=-177946.90198676923
97: neval=1051{'avg': -176663.5658976025, 'max': 115879.92009158785, 'min': -177946.90198676923} best=-177946.90198676923
98: neval=1086{'avg': -176154.34985823388, 'max': 268901.64607054903, 'min': -177946.90198676923} best=-177946.90198676923
99: neval=1083{'avg': -176842.08556607954, 'max': 21655.342538038403, 'min': -177946.90198676923} best=-177946.90198676923


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 117, 118, 119, 116, 115, 123, 124, 162]
best_individual.trans_facility = [6, 1, 26, 32, 52, 53, 54, 56, 69, 70, 136, 87, 125, 126, 143, 80, 170, 172]
best_individual.unused_cities = {0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 121, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174}
best_individual.fitness.values = (-181726.31938782806,)