局----------------------  実行情報  ----------------------
実行時間＝7085秒
個体数＝1400
合計世代数＝100
===============================
Total cost: -117323.78563726376
===============================
------------------------  前提  ------------------------

waste=kanen

ごみ量38位以内：
札幌市 (349353), 函館市 (66649), 旭川市 (64890), 苫小牧市 (42288), 釧路市 (38335), 帯広市 (35291), 千歳市 (25770), 小樽市 (25049), 江別市 (24906), 北見市 (20809), 室蘭市 (20448), 岩見沢市 (12638), 登別市 (11426), 北広島市 (10822), 石狩市 (9341), 音更町 (7531), 稚内市 (7127), 恵庭市 (6987), 伊達市 (6907), 網走市 (6299), 滝川市 (5831), 北斗市 (5150), 七飯町 (5008), 中標津町 (4837), 根室市 (4736), 幕別町 (4414), 新ひだか町 (4277), 釧路町 (4090), 美幌町 (4063), 白老町 (3395), 紋別市 (3325), 中札内村 (2807), 芽室町 (2638), 東神楽町 (2584), 余市町 (2489), 砂川市 (2419), せたな町 (2370), 遠軽町 (2357)

焼却施設数: 19
中継施設数: 9

輸送単価＝ 4.8 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='kanen'
unit ='t/year'

inc_size= [680009, 248946, 7127, 1520, 1346, 528, 439, 282, 242, 192, 110, 101, 97, 37, 33, 26, 24, 24, 13]
inc_facility = ['札幌市', '旭川市', '稚内市', '枝幸町', '留萌市', '羽幌町', '浜頓別町', '猿払村', '音威子府村', '小平町', '中頓別町', '増毛町', '苫前町', '初山別村', '豊富町', '遠別町', '天塩町', '幌延町', '中川町']
inc_blocks = [['夕張市', '南幌町', '由仁町', '長沼町', '栗山町', '札幌市', '江別市', '千歳市', '恵庭市', '北広島市', '石狩市', '当別町', '小樽市', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村', '安平町', '様似町'], ['芦別市', '赤平市', '歌志内市', '深川市', '旭川市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町', '南富良野町', '占冠村', '和寒町', '幌加内町', '遠軽町'], ['中川町'], ['増毛町'], ['美深町', '音威子府村'], ['苫前町'], ['羽幌町'], ['初山別村'], ['遠別町'], ['天塩町'], ['稚内市'], ['猿払村'], ['浜頓別町'], ['中頓別町'], ['枝幸町', '斜里町', '興部町', '雄武町'], ['豊富町'], ['幌延町'], ['小平町'], ['妹背牛町', '秩父別町', '雨竜町', '北竜町', '沼田町', '留萌市']]

trans_size=[83618, 61709, 60124, 55115, 49289, 33407, 26351, 4657, 4232]
trans_facility = ['函館市', '帯広市', '釧路市', '苫小牧市', '豊浦町', '北見市', '月形町', '士別市', '滝上町']
trans_blocks = [['北見市', '網走市', '美幌町', '津別町', '清里町', '小清水町', '訓子府町', '置戸町', '佐呂間町', '大空町', '陸別町'], ['紋別市', '湧別町', '滝上町', '西興部村'], ['岩見沢市', '美唄市', '三笠市', '滝川市', '砂川市', '奈井江町', '上砂川町', '月形町', '浦臼町', '新十津川町', '新篠津村'], ['釧路市', '釧路町', '厚岸町', '浜中町', '標茶町', '弟子屈町', '鶴居村', '白糠町', '根室市', '別海町', '中標津町', '標津町', '羅臼町'], ['苫小牧市', '白老町', '厚真町', 'むかわ町', '日高町', '平取町', '新冠町', '浦河町', '新ひだか町'], ['函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '江差町', '上ノ国町', '厚沢部町', '乙部町'], ['島牧村', '寿都町', '黒松内町', '室蘭市', '登別市', '伊達市', '豊浦町', '壮瞥町', '洞爺湖町', '八雲町', '長万部町', '今金町', 'せたな町'], ['士別市', '名寄市', '剣淵町', '下川町'], ['えりも町', '帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町', '本別町', '足寄町', '浦幌町']]

arrows = [[['札幌市'], ['月形町', '豊浦町', '苫小牧市', '函館市']], [['旭川市'], ['釧路市', '滝上町', '帯広市', '士別市', '北見市']]]


---------------------  エネルギー情報  ---------------------
[40024.27706197918, 266920.47586746747, -447414.1951146557, 23145.656547945204]

EL_direct: {'札幌市': 32480.133407854177, '旭川市': 7046.875101229168, '稚内市': 0.0, '枝幸町': 173.74827275, '留萌市': 266.42125818750003, '羽幌町': 0.0, '浜頓別町': 0.0, '猿払村': 0.0, '音威子府村': 57.09902195833334, '小平町': 0.0, '中頓別町': 0.0, '増毛町': 0.0, '苫前町': 0.0, '初山別村': 0.0, '豊富町': 0.0, '遠別町': 0.0, '天塩町': 0.0, '幌延町': 0.0, '中川町': 0.0}
ED_inc: {'札幌市': -461340.1898258343, '旭川市': -19180.557708734916, '稚内市': 15144.566798995975, '枝幸町': 4685.404400279461, '留萌市': 4250.454786320273, '羽幌町': 1973.533764116069, '浜頓別町': 1691.0928798414677, '猿払村': 1163.6509218695028, '音威子府村': 1021.5344219537595, '小平町': 838.011101930669, '中頓別町': 518.0804921426532, '増毛町': 481.03472475266034, '苫前町': 464.41289336074425, '初山別村': 199.24585617849738, '豊富町': 180.0454620005565, '遠別町': 145.69531867270277, '天塩町': 135.67844323768028, '幌延町': 135.67844323768028, '中川町': 78.43171102319175}

EL_indirect: {'函館市': 82574.7988576593, '帯広市': 37255.563241312, '釧路市': 62876.97511503417, '苫小牧市': 17463.086854330006, '豊浦町': 32305.954098751667, '北見市': 21857.012742428506, '月形町': 8677.745853584165, '士別市': 1265.3141201891667, '滝上町': 2644.0249841785003}
ED_trans: {'函館市': 5113.297972602739, '帯広市': 3773.5476164383563, '釧路市': 3676.6237808219175, '苫小牧市': 3370.32, '豊浦町': 3014.056109589041, '北見市': 2042.8609315068495, '月形町': 1611.381698630137, '士別市': 284.7787397260274, '滝上町': 258.78969863013697}

----------------------  輸送情報  ----------------------

direct 札幌市(1276/1863) t/day → receive from: 夕張市, 南幌町, 由仁町, 長沼町, 栗山町, 札幌市, 江別市, 千歳市, 恵庭市, 北広島市, 石狩市, 当別町, 小樽市, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村, 安平町, 様似町
indirect 札幌市(587/1863) t/day → receive from: 中継施設＝ 月形町(26351) → receive from: 岩見沢市, 美唄市, 三笠市, 滝川市, 砂川市, 奈井江町, 上砂川町, 月形町, 浦臼町, 新十津川町, 新篠津村
豊浦町(49289) → receive from: 島牧村, 寿都町, 黒松内町, 室蘭市, 登別市, 伊達市, 豊浦町, 壮瞥町, 洞爺湖町, 八雲町, 長万部町, 今金町, せたな町
苫小牧市(55115) → receive from: 苫小牧市, 白老町, 厚真町, むかわ町, 日高町, 平取町, 新冠町, 浦河町, 新ひだか町
函館市(83618) → receive from: 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 江差町, 上ノ国町, 厚沢部町, 乙部町
direct 旭川市(232/682) t/day → receive from: 芦別市, 赤平市, 歌志内市, 深川市, 旭川市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町, 南富良野町, 占冠村, 和寒町, 幌加内町, 遠軽町
indirect 旭川市(450/682) t/day → receive from: 中継施設＝ 釧路市(60124) → receive from: 釧路市, 釧路町, 厚岸町, 浜中町, 標茶町, 弟子屈町, 鶴居村, 白糠町, 根室市, 別海町, 中標津町, 標津町, 羅臼町
滝上町(4232) → receive from: 紋別市, 湧別町, 滝上町, 西興部村
帯広市(61709) → receive from: えりも町, 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町, 本別町, 足寄町, 浦幌町
士別市(4657) → receive from: 士別市, 名寄市, 剣淵町, 下川町
北見市(33407) → receive from: 北見市, 網走市, 美幌町, 津別町, 清里町, 小清水町, 訓子府町, 置戸町, 佐呂間町, 大空町, 陸別町
direct 稚内市(20/20) t/day → receive from: 稚内市
direct 枝幸町(4/4) t/day → receive from: 枝幸町, 斜里町, 興部町, 雄武町
direct 留萌市(4/4) t/day → receive from: 妹背牛町, 秩父別町, 雨竜町, 北竜町, 沼田町, 留萌市
direct 羽幌町(1/1) t/day → receive from: 羽幌町
direct 浜頓別町(1/1) t/day → receive from: 浜頓別町
direct 猿払村(1/1) t/day → receive from: 猿払村
direct 音威子府村(1/1) t/day → receive from: 美深町, 音威子府村
direct 小平町(1/1) t/day → receive from: 小平町
direct 中頓別町(0/0) t/day → receive from: 中頓別町
direct 増毛町(0/0) t/day → receive from: 増毛町
direct 苫前町(0/0) t/day → receive from: 苫前町
direct 初山別村(0/0) t/day → receive from: 初山別村
direct 豊富町(0/0) t/day → receive from: 豊富町
direct 遠別町(0/0) t/day → receive from: 遠別町
direct 天塩町(0/0) t/day → receive from: 天塩町
direct 幌延町(0/0) t/day → receive from: 幌延町
direct 中川町(0/0) t/day → receive from: 中川町

----------------------  遺伝情報  ----------------------

個体数＝1400
世代数＝100
0: neval=1400{'avg': inf, 'max': inf, 'min': 304999.59896053636} best=304999.59896053636
1: neval=1085{'avg': inf, 'max': inf, 'min': 293387.79136083525} best=293387.79136083525
2: neval=1080{'avg': inf, 'max': inf, 'min': 259076.28905176496} best=259076.28905176496
3: neval=1086{'avg': inf, 'max': inf, 'min': 186436.5711513667} best=186436.5711513667
4: neval=1089{'avg': inf, 'max': inf, 'min': 126374.5318148523} best=126374.5318148523
5: neval=1094{'avg': inf, 'max': inf, 'min': 126374.5318148523} best=126374.5318148523
6: neval=1118{'avg': inf, 'max': inf, 'min': 137824.21974309604} best=126374.5318148523
7: neval=1127{'avg': inf, 'max': inf, 'min': 127585.7103034461} best=126374.5318148523
8: neval=1109{'avg': inf, 'max': inf, 'min': 137824.21974309604} best=126374.5318148523
9: neval=1150{'avg': inf, 'max': inf, 'min': 124483.27975606616} best=124483.27975606616
10: neval=1099{'avg': inf, 'max': inf, 'min': 117946.4561437933} best=117946.4561437933
11: neval=1081{'avg': inf, 'max': inf, 'min': 85767.28178678549} best=85767.28178678549
12: neval=1113{'avg': inf, 'max': inf, 'min': 90001.22144455786} best=85767.28178678549
13: neval=1121{'avg': 183277.0651254396, 'max': 521038.4186208636, 'min': 23297.330346222552} best=23297.330346222552
14: neval=1125{'avg': inf, 'max': inf, 'min': 23297.330346222552} best=23297.330346222552
15: neval=1111{'avg': inf, 'max': inf, 'min': 50643.88116103304} best=23297.330346222552
16: neval=1109{'avg': 127267.74853193779, 'max': 624309.2992901452, 'min': 50643.88116103304} best=23297.330346222552
17: neval=1110{'avg': inf, 'max': inf, 'min': 40491.36436208442} best=23297.330346222552
18: neval=1107{'avg': 99350.9974117609, 'max': 419847.0566732253, 'min': 40491.36436208442} best=23297.330346222552
19: neval=1093{'avg': 86161.90219780654, 'max': 520523.81729168387, 'min': 40491.36436208442} best=23297.330346222552
20: neval=1120{'avg': 76758.1831062128, 'max': 530582.696972684, 'min': 29234.055578788662} best=23297.330346222552
21: neval=1107{'avg': 67050.18978095376, 'max': 516855.9037210668, 'min': 23174.828185991828} best=23174.828185991828
22: neval=1103{'avg': 57731.922444185315, 'max': 260720.09202616583, 'min': 19252.53086468823} best=19252.53086468823
23: neval=1107{'avg': 51148.143730244774, 'max': 319408.14324112656, 'min': 19252.53086468823} best=19252.53086468823
24: neval=1100{'avg': 45510.323668117584, 'max': 533782.8096003527, 'min': 8846.738258576586} best=8846.738258576586
25: neval=1084{'avg': 39086.582290930855, 'max': 314067.9203172937, 'min': 7907.672680359376} best=7907.672680359376
26: neval=1093{'avg': 33892.48880566838, 'max': 342899.3727383827, 'min': 3529.174191614122} best=3529.174191614122
27: neval=1110{'avg': 28920.930143407444, 'max': 451799.5380886396, 'min': 7010.588314482635} best=3529.174191614122
28: neval=1116{'avg': 25812.257813443382, 'max': 526626.4082094608, 'min': -46.42123867317423} best=-46.42123867317423
29: neval=1075{'avg': 19618.050529971522, 'max': 289994.0517717705, 'min': -46.42123867317423} best=-46.42123867317423
30: neval=1068{'avg': 14126.581183194028, 'max': 321041.65463673085, 'min': -8207.928684435094} best=-8207.928684435094
31: neval=1076{'avg': 8660.213112385547, 'max': 321224.2331759641, 'min': -9777.111906182854} best=-9777.111906182854
32: neval=1062{'avg': 4617.291042640181, 'max': 261423.60364815764, 'min': -12131.0765196301} best=-12131.0765196301
33: neval=1097{'avg': 2158.065949093643, 'max': 432080.12322582025, 'min': -13897.10795067474} best=-13897.10795067474
34: neval=1128{'avg': -3122.160506369322, 'max': 321470.1498702094, 'min': -17309.608933429263} best=-17309.608933429263
35: neval=1112{'avg': -6344.364456984516, 'max': 204718.60765859994, 'min': -18963.42505793675} best=-18963.42505793675
36: neval=1087{'avg': -9097.252307266208, 'max': 297214.7219320455, 'min': -23505.27702261408} best=-23505.27702261408
37: neval=1106{'avg': -12620.62627342487, 'max': 250981.77955673868, 'min': -23505.27702261408} best=-23505.27702261408
38: neval=1102{'avg': -15063.540224991584, 'max': 332355.81766610435, 'min': -28574.20447036771} best=-28574.20447036771
39: neval=1111{'avg': -17753.31736966318, 'max': 243932.4924858819, 'min': -28022.45746249215} best=-28574.20447036771
40: neval=1091{'avg': -19409.466832723203, 'max': 280066.20807607955, 'min': -30237.695118223313} best=-30237.695118223313
41: neval=1130{'avg': -21696.106401318768, 'max': 227022.92108502358, 'min': -30665.353247778155} best=-30665.353247778155
42: neval=1096{'avg': -24522.041212219872, 'max': 313350.7525761596, 'min': -32324.56919704502} best=-32324.56919704502
43: neval=1124{'avg': -26444.96840317202, 'max': 300662.2704802962, 'min': -32998.08129859939} best=-32998.08129859939
44: neval=1114{'avg': -28456.707131425686, 'max': 312094.84611099534, 'min': -33937.89379885318} best=-33937.89379885318
45: neval=1115{'avg': -29584.361317286075, 'max': 313102.3974781253, 'min': -34427.00813949763} best=-34427.00813949763
46: neval=1108{'avg': -30975.841552461356, 'max': 348669.2557044548, 'min': -35238.69258786779} best=-35238.69258786779
47: neval=1090{'avg': -31271.201239959428, 'max': 303091.74629243085, 'min': -35359.09609717713} best=-35359.09609717713
48: neval=1078{'avg': -32083.694647012373, 'max': 397917.31214545167, 'min': -35359.09609717713} best=-35359.09609717713
49: neval=1106{'avg': -32949.50244061514, 'max': 328176.0516754177, 'min': -38075.60772248934} best=-38075.60772248934
50: neval=1099{'avg': -33367.642312114855, 'max': 204773.68069563177, 'min': -38075.60772248934} best=-38075.60772248934
51: neval=1111{'avg': -34203.38023325914, 'max': 212921.5046622019, 'min': -49615.65697072679} best=-49615.65697072679
52: neval=1114{'avg': -33951.32574684191, 'max': 238312.3932966889, 'min': -51336.07511222492} best=-51336.07511222492
53: neval=1082{'avg': -34652.030653720976, 'max': 244554.85871212353, 'min': -52258.63160949419} best=-52258.63160949419
54: neval=1126{'avg': -34996.50032491231, 'max': 302249.8199168826, 'min': -52258.63160949419} best=-52258.63160949419
55: neval=1136{'avg': -36313.9683684805, 'max': 303726.246822457, 'min': -52258.63160949419} best=-52258.63160949419
56: neval=1143{'avg': -37050.6626077647, 'max': 341838.50597613, 'min': -52347.913477921014} best=-52347.913477921014
57: neval=1119{'avg': -40653.541191612916, 'max': 238826.0248529608, 'min': -52347.913477921014} best=-52347.913477921014
58: neval=1100{'avg': -42998.90807096603, 'max': 328056.52515555476, 'min': -52347.913477921014} best=-52347.913477921014
59: neval=1154{'avg': -46830.30847582937, 'max': 238363.45847645524, 'min': -52347.913477921014} best=-52347.913477921014
60: neval=1093{'avg': -49417.43802123197, 'max': 391611.86514172005, 'min': -52347.913477921014} best=-52347.913477921014
61: neval=1106{'avg': -49970.96515204962, 'max': 236221.38978360337, 'min': -52347.913477921014} best=-52347.913477921014
62: neval=1125{'avg': -49930.64834714628, 'max': 220636.66126977306, 'min': -52347.913477921014} best=-52347.913477921014
63: neval=1083{'avg': -49912.62693679288, 'max': 299917.62123079714, 'min': -52347.913477921014} best=-52347.913477921014
64: neval=1096{'avg': -51053.8792524909, 'max': 268965.8178756999, 'min': -52347.913477921014} best=-52347.913477921014
65: neval=1096{'avg': -51053.767900434286, 'max': 225624.7298256941, 'min': -52347.913477921014} best=-52347.913477921014
66: neval=1089{'avg': -50338.78360595782, 'max': 324318.8662614242, 'min': -52347.913477921014} best=-52347.913477921014
67: neval=1091{'avg': -50847.1195882292, 'max': 281148.1398816733, 'min': -54781.5302597563} best=-54781.5302597563
68: neval=1089{'avg': -50260.423870181, 'max': 317499.63191953016, 'min': -59657.466967980385} best=-59657.466967980385
69: neval=1080{'avg': -50539.801766433186, 'max': 243557.6192750511, 'min': -59657.466967980385} best=-59657.466967980385
70: neval=1116{'avg': -50670.0062669995, 'max': 303389.60510074813, 'min': -59657.466967980385} best=-59657.466967980385
71: neval=1123{'avg': -51153.16764355021, 'max': 338387.73031363555, 'min': -59657.466967980385} best=-59657.466967980385
72: neval=1099{'avg': -52969.58433157706, 'max': 282554.57532595174, 'min': -59657.466967980385} best=-59657.466967980385
73: neval=1077{'avg': -55358.81729685651, 'max': 310414.7550295406, 'min': -59657.466967980385} best=-59657.466967980385
74: neval=1068{'avg': -56424.29939964761, 'max': 329163.9729656859, 'min': -59657.466967980385} best=-59657.466967980385
75: neval=1133{'avg': -57341.985507226076, 'max': 274390.9540205782, 'min': -59657.466967980385} best=-59657.466967980385
76: neval=1126{'avg': -57933.55439254318, 'max': 270705.4846550835, 'min': -59657.466967980385} best=-59657.466967980385
77: neval=1077{'avg': -57766.95232550698, 'max': 317911.5234209832, 'min': -59657.466967980385} best=-59657.466967980385
78: neval=1097{'avg': -58500.72301038568, 'max': 250178.64083024603, 'min': -59657.466967980385} best=-59657.466967980385
79: neval=1103{'avg': -58184.64201686693, 'max': 251812.6538016427, 'min': -59657.466967980385} best=-59657.466967980385
80: neval=1131{'avg': -57305.18663003059, 'max': 299347.9545731999, 'min': -59657.466967980385} best=-59657.466967980385
81: neval=1117{'avg': -57605.73699259209, 'max': 359626.9276970083, 'min': -59657.466967980385} best=-59657.466967980385
82: neval=1095{'avg': -58618.158582411896, 'max': 299071.6495720626, 'min': -59657.466967980385} best=-59657.466967980385
83: neval=1113{'avg': -57381.0459543473, 'max': 319226.35870847583, 'min': -59657.466967980385} best=-59657.466967980385
84: neval=1084{'avg': -58330.057714415765, 'max': 221197.13797173434, 'min': -59657.466967980385} best=-59657.466967980385
85: neval=1094{'avg': -58082.15579363816, 'max': 251248.3160715315, 'min': -59657.466967980385} best=-59657.466967980385
86: neval=1108{'avg': -56877.460476049, 'max': 267223.73641228594, 'min': -59657.466967980385} best=-59657.466967980385
87: neval=1120{'avg': -58076.082551896965, 'max': 239973.28254709736, 'min': -59657.466967980385} best=-59657.466967980385
88: neval=1135{'avg': -58993.88186194821, 'max': 208756.8833159426, 'min': -59657.466967980385} best=-59657.466967980385
89: neval=1127{'avg': -59009.74185550694, 'max': 171837.537832829, 'min': -59657.466967980385} best=-59657.466967980385
90: neval=1101{'avg': -58116.336743634514, 'max': 326332.20632435783, 'min': -59657.466967980385} best=-59657.466967980385
91: neval=1124{'avg': -57884.090195027326, 'max': 251267.27791557062, 'min': -59657.466967980385} best=-59657.466967980385
92: neval=1098{'avg': -57848.815957300416, 'max': 214020.47453098372, 'min': -59657.466967980385} best=-59657.466967980385
93: neval=1091{'avg': -59126.12283828786, 'max': 298559.0578892024, 'min': -59657.466967980385} best=-59657.466967980385
94: neval=1072{'avg': -58006.144576319304, 'max': 215622.18825966667, 'min': -59657.466967980385} best=-59657.466967980385
95: neval=1094{'avg': -57849.87298697631, 'max': 336601.65223863925, 'min': -59657.466967980385} best=-59657.466967980385
96: neval=1104{'avg': -58465.44055661691, 'max': 272464.2452388531, 'min': -59657.466967980385} best=-59657.466967980385
97: neval=1128{'avg': -57957.458229624404, 'max': 397240.47707290674, 'min': -59657.466967980385} best=-59657.466967980385
98: neval=1116{'avg': -58174.85410561861, 'max': 310386.64814684604, 'min': -59657.466967980385} best=-59657.466967980385
99: neval=1096{'avg': -56916.54043794595, 'max': 387829.6747644092, 'min': -59657.466967980385} best=-59657.466967980385


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 87, 108, 111, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 112, 110]
best_individual.trans_facility = [125, 138, 16, 162, 53, 70, 56, 88, 143]
best_individual.unused_cities = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174}
best_individual.fitness.values = (-117323.78563726376,)