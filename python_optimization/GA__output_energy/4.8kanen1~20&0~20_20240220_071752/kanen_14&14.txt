局----------------------  実行情報  ----------------------
実行時間＝6352秒
個体数＝1400
合計世代数＝100
===============================
Total cost: -150260.34183047822
===============================
------------------------  前提  ------------------------

waste=kanen

ごみ量38位以内：
札幌市 (349353), 函館市 (66649), 旭川市 (64890), 苫小牧市 (42288), 釧路市 (38335), 帯広市 (35291), 千歳市 (25770), 小樽市 (25049), 江別市 (24906), 北見市 (20809), 室蘭市 (20448), 岩見沢市 (12638), 登別市 (11426), 北広島市 (10822), 石狩市 (9341), 音更町 (7531), 稚内市 (7127), 恵庭市 (6987), 伊達市 (6907), 網走市 (6299), 滝川市 (5831), 北斗市 (5150), 七飯町 (5008), 中標津町 (4837), 根室市 (4736), 幕別町 (4414), 新ひだか町 (4277), 釧路町 (4090), 美幌町 (4063), 白老町 (3395), 紋別市 (3325), 中札内村 (2807), 芽室町 (2638), 東神楽町 (2584), 余市町 (2489), 砂川市 (2419), せたな町 (2370), 遠軽町 (2357)

焼却施設数: 14
中継施設数: 14

輸送単価＝ 4.8 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='kanen'
unit ='t/year'

inc_size= [669772, 260426, 7127, 1775, 819, 528, 282, 113, 97, 37, 37, 33, 26, 24]
inc_facility = ['札幌市', '旭川市', '稚内市', '浜頓別町', '増毛町', '羽幌町', '猿払村', '中頓別町', '苫前町', '初山別村', '幌延町', '豊富町', '遠別町', '天塩町']
inc_blocks = [['夕張市', '岩見沢市', '三笠市', '南幌町', '長沼町', '栗山町', '月形町', '札幌市', '江別市', '北広島市', '石狩市', '当別町', '新篠津村', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町'], ['芦別市', '深川市', '秩父別町', '沼田町', '旭川市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町', '南富良野町', '和寒町', '剣淵町', '幌加内町', '斜里町'], ['留萌市', '増毛町', '小平町'], ['苫前町'], ['羽幌町'], ['初山別村'], ['遠別町'], ['天塩町'], ['稚内市'], ['猿払村'], ['浜頓別町', '枝幸町', '雄武町'], ['音威子府村', '中頓別町'], ['豊富町'], ['中川町', '幌延町']]

trans_size=[83618, 61174, 46307, 45633, 34892, 32738, 32045, 31874, 17415, 14815, 13061, 9414, 6860, 4886]
trans_facility = ['函館市', '帯広市', '苫小牧市', '釧路市', '千歳市', '北見市', '小樽市', '室蘭市', '豊浦町', '中標津町', '滝川市', '新ひだか町', '遠軽町', '名寄市']
trans_blocks = [['士別市', '名寄市', '下川町', '美深町', '興部町', '西興部村'], ['由仁町', '千歳市', '恵庭市', '厚真町', '安平町', '占冠村'], ['小樽市', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村'], ['苫小牧市', '白老町', 'むかわ町'], ['室蘭市', '登別市'], ['日高町', '平取町', '新冠町', '浦河町', '様似町', 'えりも町', '新ひだか町'], ['函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '江差町', '上ノ国町', '厚沢部町', '乙部町'], ['島牧村', '寿都町', '黒松内町', '伊達市', '豊浦町', '壮瞥町', '洞爺湖町', '八雲町', '長万部町', '今金町', 'せたな町'], ['北見市', '網走市', '美幌町', '津別町', '小清水町', '訓子府町', '置戸町', '大空町', '陸別町'], ['美唄市', '赤平市', '滝川市', '砂川市', '歌志内市', '奈井江町', '上砂川町', '浦臼町', '新十津川町', '妹背牛町', '雨竜町', '北竜町'], ['紋別市', '佐呂間町', '遠軽町', '湧別町', '滝上町'], ['帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町', '本別町', '足寄町', '浦幌町'], ['釧路市', '釧路町', '厚岸町', '標茶町', '鶴居村', '白糠町'], ['清里町', '浜中町', '弟子屈町', '根室市', '別海町', '中標津町', '標津町', '羅臼町']]

arrows = [[['札幌市'], ['小樽市', '新ひだか町', '函館市', '室蘭市', '苫小牧市', '豊浦町', '千歳市']], [['旭川市'], ['釧路市', '滝川市', '遠軽町', '中標津町', '帯広市', '名寄市', '北見市']]]


---------------------  エネルギー情報  ---------------------
[17919.69337383334, 258695.9797117517, -453460.1744777072, 26584.159561643835]

EL_direct: {'札幌市': 13578.8762208125, '旭川市': 3847.911998125001, '稚内市': 0.0, '浜頓別町': 383.24225604166674, '増毛町': 105.29829916666668, '羽幌町': 0.0, '猿払村': 0.0, '中頓別町': 0.8959169375000003, '苫前町': 0.0, '初山別村': 0.0, '幌延町': 3.4686827500000006, '豊富町': 0.0, '遠別町': 0.0, '天塩町': 0.0}
ED_inc: {'札幌市': -454395.07656520524, '旭川市': -27340.766966716455, '稚内市': 15144.566798995975, '浜頓別町': 5300.84892769489, '増毛町': 2838.419071970264, '羽幌町': 1973.533764116069, '猿払村': 1163.6509218695028, '中頓別町': 530.3257399390924, '苫前町': 464.41289336074425, '初山別村': 199.24585617849738, '幌延町': 199.24585617849738, '豊富町': 180.0454620005565, '遠別町': 145.69531867270277, '天塩町': 135.67844323768028}

EL_indirect: {'函館市': 82574.7988576593, '帯広市': 36439.57152811949, '苫小牧市': 10141.120542156501, '釧路市': 39269.455331101664, '千歳市': 5788.847229251666, '北見市': 21201.771620581505, '小樽市': 5947.0408341825005, '室蘭市': 14137.254320284334, '豊浦町': 10840.559320391669, '中標津町': 17885.003648145834, '滝川市': 3203.5849011140003, '新ひだか町': 5330.977747872834, '遠軽町': 4168.2216859508335, '名寄市': 1767.7721449396672}
ED_trans: {'函館市': 5113.297972602739, '帯広市': 3740.832, '苫小牧市': 2831.7047671232876, '釧路市': 2790.489205479452, '千歳市': 2133.669698630137, '北見市': 2001.9511232876712, '小樽市': 1959.5736986301372, '室蘭市': 1949.1169315068496, '豊浦町': 1064.9391780821918, '中標津町': 905.9473972602739, '滝川市': 798.689095890411, '新ひだか町': 575.6725479452055, '遠軽町': 419.493698630137, '名寄市': 298.78224657534247}

----------------------  輸送情報  ----------------------

direct 札幌市(1135/1835) t/day → receive from: 夕張市, 岩見沢市, 三笠市, 南幌町, 長沼町, 栗山町, 月形町, 札幌市, 江別市, 北広島市, 石狩市, 当別町, 新篠津村, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町
indirect 札幌市(700/1835) t/day → receive from: 中継施設＝ 小樽市(32045) → receive from: 小樽市, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村
新ひだか町(9414) → receive from: 日高町, 平取町, 新冠町, 浦河町, 様似町, えりも町, 新ひだか町
函館市(83618) → receive from: 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 江差町, 上ノ国町, 厚沢部町, 乙部町
室蘭市(31874) → receive from: 室蘭市, 登別市
苫小牧市(46307) → receive from: 苫小牧市, 白老町, むかわ町
豊浦町(17415) → receive from: 島牧村, 寿都町, 黒松内町, 伊達市, 豊浦町, 壮瞥町, 洞爺湖町, 八雲町, 長万部町, 今金町, せたな町
千歳市(34892) → receive from: 由仁町, 千歳市, 恵庭市, 厚真町, 安平町, 占冠村
direct 旭川市(223/713) t/day → receive from: 芦別市, 深川市, 秩父別町, 沼田町, 旭川市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町, 南富良野町, 和寒町, 剣淵町, 幌加内町, 斜里町
indirect 旭川市(491/713) t/day → receive from: 中継施設＝ 釧路市(45633) → receive from: 釧路市, 釧路町, 厚岸町, 標茶町, 鶴居村, 白糠町
滝川市(13061) → receive from: 美唄市, 赤平市, 滝川市, 砂川市, 歌志内市, 奈井江町, 上砂川町, 浦臼町, 新十津川町, 妹背牛町, 雨竜町, 北竜町
遠軽町(6860) → receive from: 紋別市, 佐呂間町, 遠軽町, 湧別町, 滝上町
中標津町(14815) → receive from: 清里町, 浜中町, 弟子屈町, 根室市, 別海町, 中標津町, 標津町, 羅臼町
帯広市(61174) → receive from: 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町, 本別町, 足寄町, 浦幌町
名寄市(4886) → receive from: 士別市, 名寄市, 下川町, 美深町, 興部町, 西興部村
北見市(32738) → receive from: 北見市, 網走市, 美幌町, 津別町, 小清水町, 訓子府町, 置戸町, 大空町, 陸別町
direct 稚内市(20/20) t/day → receive from: 稚内市
direct 浜頓別町(5/5) t/day → receive from: 浜頓別町, 枝幸町, 雄武町
direct 増毛町(2/2) t/day → receive from: 留萌市, 増毛町, 小平町
direct 羽幌町(1/1) t/day → receive from: 羽幌町
direct 猿払村(1/1) t/day → receive from: 猿払村
direct 中頓別町(0/0) t/day → receive from: 音威子府村, 中頓別町
direct 苫前町(0/0) t/day → receive from: 苫前町
direct 初山別村(0/0) t/day → receive from: 初山別村
direct 幌延町(0/0) t/day → receive from: 中川町, 幌延町
direct 豊富町(0/0) t/day → receive from: 豊富町
direct 遠別町(0/0) t/day → receive from: 遠別町
direct 天塩町(0/0) t/day → receive from: 天塩町

----------------------  遺伝情報  ----------------------

個体数＝1400
世代数＝100
0: neval=1400{'avg': inf, 'max': inf, 'min': 220812.86982513097} best=220812.86982513097
1: neval=1089{'avg': inf, 'max': inf, 'min': 214440.83032977} best=214440.83032977
2: neval=1142{'avg': inf, 'max': inf, 'min': 154170.06959492006} best=154170.06959492006
3: neval=1111{'avg': inf, 'max': inf, 'min': 130282.69100204833} best=130282.69100204833
4: neval=1148{'avg': inf, 'max': inf, 'min': 114720.4606482477} best=114720.4606482477
5: neval=1105{'avg': inf, 'max': inf, 'min': 114720.4606482477} best=114720.4606482477
6: neval=1099{'avg': inf, 'max': inf, 'min': 70757.41600568299} best=70757.41600568299
7: neval=1069{'avg': inf, 'max': inf, 'min': 70757.41600568299} best=70757.41600568299
8: neval=1106{'avg': inf, 'max': inf, 'min': 70757.41600568299} best=70757.41600568299
9: neval=1100{'avg': inf, 'max': inf, 'min': 47014.33363250469} best=47014.33363250469
10: neval=1132{'avg': inf, 'max': inf, 'min': 67602.12023335943} best=47014.33363250469
11: neval=1094{'avg': inf, 'max': inf, 'min': 29205.113645043984} best=29205.113645043984
12: neval=1114{'avg': inf, 'max': inf, 'min': 27379.6384257088} best=27379.6384257088
13: neval=1068{'avg': inf, 'max': inf, 'min': 9297.31636140425} best=9297.31636140425
14: neval=1089{'avg': inf, 'max': inf, 'min': 23808.24138227448} best=9297.31636140425
15: neval=1059{'avg': inf, 'max': inf, 'min': 3539.536939402362} best=3539.536939402362
16: neval=1126{'avg': 82742.53290957214, 'max': 471576.5517944642, 'min': 22075.830886064614} best=3539.536939402362
17: neval=1103{'avg': 66152.78714970034, 'max': 555535.3370702543, 'min': 4861.752354096949} best=3539.536939402362
18: neval=1135{'avg': 56743.68827774659, 'max': 398665.0014409935, 'min': -3938.5896405362582} best=-3938.5896405362582
19: neval=1098{'avg': 49576.5910206398, 'max': 462158.36521241604, 'min': -4922.539926638186} best=-4922.539926638186
20: neval=1102{'avg': inf, 'max': inf, 'min': -4922.539926638186} best=-4922.539926638186
21: neval=1102{'avg': inf, 'max': inf, 'min': -5285.094491297088} best=-5285.094491297088
22: neval=1101{'avg': 31156.26802525512, 'max': 481116.2533748604, 'min': -18565.71987805798} best=-18565.71987805798
23: neval=1112{'avg': 22058.794157222128, 'max': 290909.47954364296, 'min': -29341.793515631434} best=-29341.793515631434
24: neval=1111{'avg': 16685.988052183482, 'max': 355765.1436881587, 'min': -40559.43268901041} best=-40559.43268901041
25: neval=1114{'avg': 10833.358731730543, 'max': 319858.4884567716, 'min': -52530.27056631765} best=-52530.27056631765
26: neval=1102{'avg': 2515.850778377927, 'max': 400750.6101108722, 'min': -65554.99704733185} best=-65554.99704733185
27: neval=1076{'avg': -3773.5642094394443, 'max': 240844.19321933514, 'min': -66024.37220437935} best=-66024.37220437935
28: neval=1122{'avg': -8803.251760312536, 'max': 326071.92939821986, 'min': -66024.37220437935} best=-66024.37220437935
29: neval=1150{'avg': -15753.626341185243, 'max': 202790.09869437641, 'min': -66024.37220437935} best=-66024.37220437935
30: neval=1107{'avg': -21770.16001862225, 'max': 401595.42470423627, 'min': -56589.74721872428} best=-66024.37220437935
31: neval=1106{'avg': -30032.493609900008, 'max': 145818.51958813125, 'min': -58572.820305098474} best=-66024.37220437935
32: neval=1093{'avg': -36521.06115184371, 'max': 294567.2129136776, 'min': -66252.7123075905} best=-66252.7123075905
33: neval=1120{'avg': -42916.50345912624, 'max': 229279.92167076972, 'min': -70212.45827926857} best=-70212.45827926857
34: neval=1126{'avg': -47086.6494361491, 'max': 292497.83800223353, 'min': -70212.45827926857} best=-70212.45827926857
35: neval=1086{'avg': -52581.989936875885, 'max': 256206.30880539515, 'min': -71941.42504975072} best=-71941.42504975072
36: neval=1058{'avg': -56004.544793442416, 'max': 327683.32437926513, 'min': -72678.03700501854} best=-72678.03700501854
37: neval=1107{'avg': -59790.069482889114, 'max': 316390.30961461714, 'min': -78617.8468288079} best=-78617.8468288079
38: neval=1092{'avg': -63859.047896659, 'max': 273433.82837256585, 'min': -89677.34495408845} best=-89677.34495408845
39: neval=1108{'avg': -67123.11409138657, 'max': 195095.31243831734, 'min': -104947.67541251998} best=-104947.67541251998
40: neval=1127{'avg': -69615.11426827821, 'max': 269416.20498360676, 'min': -104947.67541251998} best=-104947.67541251998
41: neval=1127{'avg': -73971.20236191331, 'max': 249384.8009711554, 'min': -104947.67541251998} best=-104947.67541251998
42: neval=1106{'avg': -77794.33508431411, 'max': 126663.65937341563, 'min': -115118.42254693786} best=-115118.42254693786
43: neval=1119{'avg': -82725.32892509643, 'max': 249680.67036451132, 'min': -116463.31481145712} best=-116463.31481145712
44: neval=1105{'avg': -89042.45500610885, 'max': 87738.59883145391, 'min': -118611.92303816514} best=-118611.92303816514
45: neval=1134{'avg': -96228.10051480202, 'max': 359587.44063041446, 'min': -120698.01805233846} best=-120698.01805233846
46: neval=1113{'avg': -104773.33866779626, 'max': 200472.57294973126, 'min': -123433.3293691087} best=-123433.3293691087
47: neval=1076{'avg': -111711.59850360495, 'max': 162542.25656418822, 'min': -125869.929667334} best=-125869.929667334
48: neval=1124{'avg': -115708.65830225484, 'max': 113843.73708437991, 'min': -128953.70935052905} best=-128953.70935052905
49: neval=1098{'avg': -118853.63082691444, 'max': 304061.66567519127, 'min': -131742.56793897506} best=-131742.56793897506
50: neval=1101{'avg': -122178.34823294691, 'max': 176856.2444615801, 'min': -132977.4063657332} best=-132977.4063657332
51: neval=1100{'avg': -125408.14412758652, 'max': 151199.0379632335, 'min': -135474.96360185396} best=-135474.96360185396
52: neval=1117{'avg': -127211.95425504331, 'max': 183773.27320322956, 'min': -136448.78528243245} best=-136448.78528243245
53: neval=1089{'avg': -129128.18390856987, 'max': 254023.80075965292, 'min': -140066.73404041518} best=-140066.73404041518
54: neval=1121{'avg': -131380.50752564357, 'max': 216050.3572584176, 'min': -140066.73404041518} best=-140066.73404041518
55: neval=1107{'avg': -133039.29181489855, 'max': 286159.30115735414, 'min': -143549.63327064464} best=-143549.63327064464
56: neval=1094{'avg': -134096.6086134674, 'max': 117110.63306784567, 'min': -143549.63327064464} best=-143549.63327064464
57: neval=1128{'avg': -135240.00183829226, 'max': 236049.28318560583, 'min': -144950.69801628691} best=-144950.69801628691
58: neval=1114{'avg': -136706.02195337336, 'max': 163828.81555910883, 'min': -144950.69801628691} best=-144950.69801628691
59: neval=1086{'avg': -138440.24463064654, 'max': 134514.21695122495, 'min': -145532.83908391077} best=-145532.83908391077
60: neval=1086{'avg': -140871.59003740098, 'max': 231808.37115091074, 'min': -145532.83908391077} best=-145532.83908391077
61: neval=1100{'avg': -142311.74363978868, 'max': 115164.30837850388, 'min': -145876.523814319} best=-145876.523814319
62: neval=1157{'avg': -143126.00377558262, 'max': 195223.0960875099, 'min': -145896.0296934715} best=-145896.0296934715
63: neval=1119{'avg': -143602.17285715346, 'max': 215559.79923491523, 'min': -146380.37911008133} best=-146380.37911008133
64: neval=1112{'avg': -142614.38158421827, 'max': 282365.44919737394, 'min': -146380.37911008133} best=-146380.37911008133
65: neval=1102{'avg': -143536.45863839058, 'max': 157153.85423946846, 'min': -146380.37911008133} best=-146380.37911008133
66: neval=1133{'avg': -143260.71155946451, 'max': 196364.7681566827, 'min': -146380.37911008133} best=-146380.37911008133
67: neval=1101{'avg': -143576.8832745286, 'max': 198630.26502439135, 'min': -146380.37911008133} best=-146380.37911008133
68: neval=1114{'avg': -144729.80470203725, 'max': 212313.56568735605, 'min': -146380.37911008133} best=-146380.37911008133
69: neval=1107{'avg': -145071.93364963765, 'max': 146902.88995609235, 'min': -146380.37911008133} best=-146380.37911008133
70: neval=1070{'avg': -145378.0910023384, 'max': 173511.89251040242, 'min': -146380.37911008133} best=-146380.37911008133
71: neval=1103{'avg': -144514.5363221003, 'max': 256105.7610568989, 'min': -146380.37911008133} best=-146380.37911008133
72: neval=1117{'avg': -144507.71176836008, 'max': 120329.94426594074, 'min': -146380.37911008133} best=-146380.37911008133
73: neval=1085{'avg': -144857.90753565298, 'max': 154132.32978574617, 'min': -146380.37911008133} best=-146380.37911008133
74: neval=1095{'avg': -143084.48179430698, 'max': 362548.71952901734, 'min': -146380.37911008133} best=-146380.37911008133
75: neval=1110{'avg': -145598.15321519575, 'max': 233203.04431083152, 'min': -146380.37911008133} best=-146380.37911008133
76: neval=1090{'avg': -144536.91569762197, 'max': 221962.67398048646, 'min': -146380.37911008133} best=-146380.37911008133
77: neval=1125{'avg': -144330.00191446207, 'max': 225308.46511648892, 'min': -146380.37911008133} best=-146380.37911008133
78: neval=1068{'avg': -145733.21876102197, 'max': 151521.4487194249, 'min': -146380.37911008133} best=-146380.37911008133
79: neval=1114{'avg': -144944.07228802593, 'max': 175637.94671913976, 'min': -146380.37911008133} best=-146380.37911008133
80: neval=1077{'avg': -144930.82263483023, 'max': 220154.50507401806, 'min': -146380.37911008133} best=-146380.37911008133
81: neval=1099{'avg': -145716.52949454743, 'max': 49896.88465890652, 'min': -146380.37911008133} best=-146380.37911008133
82: neval=1112{'avg': -144923.2032767045, 'max': 191595.81781397518, 'min': -146380.37911008133} best=-146380.37911008133
83: neval=1108{'avg': -144954.2691810076, 'max': 86870.35576980576, 'min': -146380.37911008133} best=-146380.37911008133
84: neval=1099{'avg': -145194.40807754546, 'max': 150429.742327197, 'min': -146380.37911008133} best=-146380.37911008133
85: neval=1103{'avg': -144860.64798148253, 'max': 183450.29192670507, 'min': -146380.37911008133} best=-146380.37911008133
86: neval=1121{'avg': -144613.07195855695, 'max': 188234.29540240642, 'min': -146380.37911008133} best=-146380.37911008133
87: neval=1119{'avg': -144670.63095977285, 'max': 200341.34475078213, 'min': -146380.37911008133} best=-146380.37911008133
88: neval=1100{'avg': -143894.0072227506, 'max': 315423.489063388, 'min': -146380.37911008133} best=-146380.37911008133
89: neval=1091{'avg': -144075.23338512616, 'max': 190555.99133101615, 'min': -146525.6301042748} best=-146525.6301042748
90: neval=1128{'avg': -144310.9935001349, 'max': 157414.59602847917, 'min': -146525.6301042748} best=-146525.6301042748
91: neval=1102{'avg': -144590.02869562252, 'max': 107020.92794158288, 'min': -146525.6301042748} best=-146525.6301042748
92: neval=1119{'avg': -144893.96002488417, 'max': 297177.5453110533, 'min': -146525.6301042748} best=-146525.6301042748
93: neval=1104{'avg': -144150.26920384043, 'max': 249104.7150669542, 'min': -146525.6301042748} best=-146525.6301042748
94: neval=1122{'avg': -145207.28411209342, 'max': 216088.19167334423, 'min': -146525.6301042748} best=-146525.6301042748
95: neval=1099{'avg': -145436.66623501183, 'max': 171152.70808004402, 'min': -146525.6301042748} best=-146525.6301042748
96: neval=1118{'avg': -145703.43845773587, 'max': 160039.60539660434, 'min': -146525.6301042748} best=-146525.6301042748
97: neval=1093{'avg': -144600.52036557466, 'max': 288168.30239658547, 'min': -146525.6301042748} best=-146525.6301042748
98: neval=1108{'avg': -144646.42936061276, 'max': 139892.4801279415, 'min': -146525.6301042748} best=-146525.6301042748
99: neval=1128{'avg': -145500.75044948852, 'max': 238966.3153770932, 'min': -146525.6301042748} best=-146525.6301042748


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 87, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124]
best_individual.trans_facility = [89, 26, 32, 53, 52, 69, 70, 56, 125, 6, 136, 143, 162, 172]
best_individual.unused_cities = {0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174}
best_individual.fitness.values = (-150260.34183047822,)