局----------------------  実行情報  ----------------------
実行時間＝6659秒
個体数＝1400
合計世代数＝100
==============================
Total cost: -95632.65012175345
==============================
------------------------  前提  ------------------------

waste=kanen

ごみ量38位以内：
札幌市 (349353), 函館市 (66649), 旭川市 (64890), 苫小牧市 (42288), 釧路市 (38335), 帯広市 (35291), 千歳市 (25770), 小樽市 (25049), 江別市 (24906), 北見市 (20809), 室蘭市 (20448), 岩見沢市 (12638), 登別市 (11426), 北広島市 (10822), 石狩市 (9341), 音更町 (7531), 稚内市 (7127), 恵庭市 (6987), 伊達市 (6907), 網走市 (6299), 滝川市 (5831), 北斗市 (5150), 七飯町 (5008), 中標津町 (4837), 根室市 (4736), 幕別町 (4414), 新ひだか町 (4277), 釧路町 (4090), 美幌町 (4063), 白老町 (3395), 紋別市 (3325), 中札内村 (2807), 芽室町 (2638), 東神楽町 (2584), 余市町 (2489), 砂川市 (2419), せたな町 (2370), 遠軽町 (2357)

焼却施設数: 17
中継施設数: 11

輸送単価＝ 4.8 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='kanen'
unit ='t/year'

inc_size= [778166, 60631, 42953, 39368, 6831, 4736, 1661, 1237, 1021, 994, 831, 692, 553, 422, 377, 342, 281]
inc_facility = ['札幌市', '帯広市', '釧路市', '美幌町', '中標津町', '根室市', '弟子屈町', '厚岸町', '標茶町', '足寄町', '本別町', '浜中町', '標津町', '鶴居村', '津別町', '羅臼町', '陸別町']
inc_blocks = [['南幌町', '札幌市', '江別市', '北広島市', '石狩市', '当別町', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町', '苫前町'], ['北見市', '網走市', '紋別市', '美幌町', '小清水町', '佐呂間町', '遠軽町', '湧別町', '滝上町', '興部町', '西興部村', '雄武町', '大空町'], ['津別町', '訓子府町'], ['えりも町', '南富良野町', '占冠村', '帯広市', '音更町', '士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町'], ['本別町', '浦幌町'], ['上士幌町', '足寄町'], ['置戸町', '陸別町'], ['釧路市', '釧路町', '白糠町'], ['厚岸町'], ['浜中町'], ['標茶町'], ['清里町', '弟子屈町'], ['鶴居村'], ['根室市'], ['別海町', '中標津町'], ['斜里町', '標津町'], ['羅臼町']]

trans_size=[83618, 80858, 46307, 34187, 32045, 31874, 19659, 17415, 16543, 10051, 8879]
trans_facility = ['函館市', '旭川市', '苫小牧市', '千歳市', '小樽市', '室蘭市', '岩見沢市', '豊浦町', '滝川市', '幌延町', '新ひだか町']
trans_blocks = [['芦別市', '赤平市', '滝川市', '砂川市', '歌志内市', '深川市', '奈井江町', '上砂川町', '浦臼町', '新十津川町', '妹背牛町', '秩父別町', '雨竜町', '北竜町', '沼田町', '留萌市', '増毛町', '小平町'], ['千歳市', '恵庭市', '厚真町', '安平町'], ['小樽市', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村'], ['夕張市', '岩見沢市', '美唄市', '三笠市', '由仁町', '長沼町', '栗山町', '月形町', '新篠津村'], ['苫小牧市', '白老町', 'むかわ町'], ['室蘭市', '登別市'], ['島牧村', '寿都町', '黒松内町', '伊達市', '豊浦町', '壮瞥町', '洞爺湖町', '八雲町', '長万部町', '今金町', 'せたな町'], ['日高町', '平取町', '新冠町', '浦河町', '様似町', '新ひだか町'], ['函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '江差町', '上ノ国町', '厚沢部町', '乙部町'], ['旭川市', '士別市', '名寄市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町', '和寒町', '剣淵町', '下川町', '幌加内町'], ['美深町', '音威子府村', '中川町', '羽幌町', '初山別村', '遠別町', '天塩町', '稚内市', '猿払村', '浜頓別町', '中頓別町', '枝幸町', '豊富町', '幌延町']]

arrows = [[['札幌市'], ['小樽市', '岩見沢市', '新ひだか町', '滝川市', '函館市', '室蘭市', '苫小牧市', '旭川市', '豊浦町', '千歳市', '幌延町']]]


---------------------  エネルギー情報  ---------------------
[24992.51667033334, 195431.70182340778, -339381.94127302885, 23325.07265753424]

EL_direct: {'札幌市': 7648.960547854167, '帯広市': 5380.333775375, '釧路市': 409.1830448333333, '美幌町': 10750.651179125, '中標津町': 373.56680237500007, '根室市': 0.0, '弟子屈町': 121.20135300000001, '厚岸町': 0.0, '標茶町': 0.0, '足寄町': 112.63817500000003, '本別町': 102.51050983333334, '浜中町': 0.0, '標津町': 0.0, '鶴居村': 0.0, '津別町': 57.4862088125, '羅臼町': 0.0, '陸別町': 35.985074125}
ED_inc: {'札幌市': -527933.0864091653, '帯広市': 48397.71628104311, '釧路市': 43461.73061958416, '美幌町': 41960.48568328742, '中標津町': 14695.147427352002, '根室市': 11263.27870452983, '弟子屈町': 5028.726884482312, '厚岸町': 3970.9852374523625, '標茶町': 3399.009313501786, '足寄町': 3325.632316212959, '本別町': 2872.517030001975, '浜中町': 2470.530811909597, '標津町': 2051.1240120155735, '鶴居村': 1635.9345826027702, '津別町': 1487.8303275286246, '羅臼町': 1370.3528057844808, '陸別町': 1160.143098847392}

EL_indirect: {'函館市': 82574.7988576593, '旭川市': 38310.17933936049, '苫小牧市': 10141.120542156501, '千歳市': 5335.555729497501, '小樽市': 5947.0408341825005, '室蘭市': 14137.254320284334, '岩見沢市': 3640.2421771495005, '豊浦町': 10840.559320391669, '滝川市': 6532.673770146334, '幌延町': 13193.228442316002, '新ひだか町': 4779.048490263667}
ED_trans: {'函館市': 5113.297972602739, '旭川市': 4944.522082191781, '苫小牧市': 2831.7047671232876, '千歳市': 2090.5584657534246, '小樽市': 1959.5736986301372, '室蘭市': 1949.1169315068496, '岩見沢市': 1202.1613150684934, '豊浦町': 1064.9391780821918, '滝川市': 1011.6157808219178, '幌延町': 614.6255342465753, '新ひだか町': 542.9569315068493}

----------------------  輸送情報  ----------------------

direct 札幌市(1087/2132) t/day → receive from: 南幌町, 札幌市, 江別市, 北広島市, 石狩市, 当別町, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町, 苫前町
indirect 札幌市(1045/2132) t/day → receive from: 中継施設＝ 小樽市(32045) → receive from: 小樽市, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村
岩見沢市(19659) → receive from: 夕張市, 岩見沢市, 美唄市, 三笠市, 由仁町, 長沼町, 栗山町, 月形町, 新篠津村
新ひだか町(8879) → receive from: 日高町, 平取町, 新冠町, 浦河町, 様似町, 新ひだか町
滝川市(16543) → receive from: 芦別市, 赤平市, 滝川市, 砂川市, 歌志内市, 深川市, 奈井江町, 上砂川町, 浦臼町, 新十津川町, 妹背牛町, 秩父別町, 雨竜町, 北竜町, 沼田町, 留萌市, 増毛町, 小平町
函館市(83618) → receive from: 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 江差町, 上ノ国町, 厚沢部町, 乙部町
室蘭市(31874) → receive from: 室蘭市, 登別市
苫小牧市(46307) → receive from: 苫小牧市, 白老町, むかわ町
旭川市(80858) → receive from: 旭川市, 士別市, 名寄市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町, 和寒町, 剣淵町, 下川町, 幌加内町
豊浦町(17415) → receive from: 島牧村, 寿都町, 黒松内町, 伊達市, 豊浦町, 壮瞥町, 洞爺湖町, 八雲町, 長万部町, 今金町, せたな町
千歳市(34187) → receive from: 千歳市, 恵庭市, 厚真町, 安平町
幌延町(10051) → receive from: 美深町, 音威子府村, 中川町, 羽幌町, 初山別村, 遠別町, 天塩町, 稚内市, 猿払村, 浜頓別町, 中頓別町, 枝幸町, 豊富町, 幌延町
direct 帯広市(166/166) t/day → receive from: えりも町, 南富良野町, 占冠村, 帯広市, 音更町, 士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町
direct 釧路市(118/118) t/day → receive from: 釧路市, 釧路町, 白糠町
direct 美幌町(108/108) t/day → receive from: 北見市, 網走市, 紋別市, 美幌町, 小清水町, 佐呂間町, 遠軽町, 湧別町, 滝上町, 興部町, 西興部村, 雄武町, 大空町
direct 中標津町(19/19) t/day → receive from: 別海町, 中標津町
direct 根室市(13/13) t/day → receive from: 根室市
direct 弟子屈町(5/5) t/day → receive from: 清里町, 弟子屈町
direct 厚岸町(3/3) t/day → receive from: 厚岸町
direct 標茶町(3/3) t/day → receive from: 標茶町
direct 足寄町(3/3) t/day → receive from: 上士幌町, 足寄町
direct 本別町(2/2) t/day → receive from: 本別町, 浦幌町
direct 浜中町(2/2) t/day → receive from: 浜中町
direct 標津町(2/2) t/day → receive from: 斜里町, 標津町
direct 鶴居村(1/1) t/day → receive from: 鶴居村
direct 津別町(1/1) t/day → receive from: 津別町, 訓子府町
direct 羅臼町(1/1) t/day → receive from: 羅臼町
direct 陸別町(1/1) t/day → receive from: 置戸町, 陸別町

----------------------  遺伝情報  ----------------------

個体数＝1400
世代数＝100
0: neval=1400{'avg': inf, 'max': inf, 'min': 302483.4714794739} best=302483.4714794739
1: neval=1108{'avg': inf, 'max': inf, 'min': 212757.72103771762} best=212757.72103771762
2: neval=1106{'avg': inf, 'max': inf, 'min': 212757.72103771762} best=212757.72103771762
3: neval=1121{'avg': inf, 'max': inf, 'min': 187792.72399516817} best=187792.72399516817
4: neval=1099{'avg': inf, 'max': inf, 'min': 187792.72399516817} best=187792.72399516817
5: neval=1112{'avg': inf, 'max': inf, 'min': 186983.39388976656} best=186983.39388976656
6: neval=1107{'avg': inf, 'max': inf, 'min': 181415.6825506629} best=181415.6825506629
7: neval=1097{'avg': inf, 'max': inf, 'min': 145514.20486188913} best=145514.20486188913
8: neval=1102{'avg': inf, 'max': inf, 'min': 129687.12719250761} best=129687.12719250761
9: neval=1118{'avg': inf, 'max': inf, 'min': 83786.92825139627} best=83786.92825139627
10: neval=1089{'avg': inf, 'max': inf, 'min': 83786.92825139627} best=83786.92825139627
11: neval=1123{'avg': inf, 'max': inf, 'min': 61382.69342729072} best=61382.69342729072
12: neval=1129{'avg': inf, 'max': inf, 'min': 65379.75943608354} best=61382.69342729072
13: neval=1121{'avg': inf, 'max': inf, 'min': 65379.75943608354} best=61382.69342729072
14: neval=1111{'avg': 176673.4440573731, 'max': 506415.98161187465, 'min': 28689.44218112865} best=28689.44218112865
15: neval=1100{'avg': inf, 'max': inf, 'min': 28689.44218112865} best=28689.44218112865
16: neval=1094{'avg': inf, 'max': inf, 'min': 28689.44218112865} best=28689.44218112865
17: neval=1117{'avg': inf, 'max': inf, 'min': 14539.852593535237} best=14539.852593535237
18: neval=1101{'avg': 125953.68719740889, 'max': 535420.3613711538, 'min': 25402.195979921755} best=14539.852593535237
19: neval=1081{'avg': 107890.43423267471, 'max': 464132.51043301914, 'min': 23801.458268051665} best=14539.852593535237
20: neval=1118{'avg': 98122.99034568027, 'max': 490269.9619198121, 'min': 19677.637008270183} best=14539.852593535237
21: neval=1084{'avg': 83702.42931269373, 'max': 465951.0741135979, 'min': 15421.711254579066} best=14539.852593535237
22: neval=1060{'avg': 69609.95035522575, 'max': 337168.37292198895, 'min': -986.0538470744723} best=-986.0538470744723
23: neval=1095{'avg': 59528.11553798278, 'max': 462823.8960634057, 'min': -12213.08088890478} best=-12213.08088890478
24: neval=1112{'avg': 50496.229396598384, 'max': 454606.4150629648, 'min': -3314.278421097377} best=-12213.08088890478
25: neval=1090{'avg': 39998.488329863765, 'max': 456235.656988549, 'min': -7415.048920197929} best=-12213.08088890478
26: neval=1094{'avg': 30203.029979357736, 'max': 432064.95665917004, 'min': -19685.580901164} best=-19685.580901164
27: neval=1102{'avg': 19296.139487132383, 'max': 407499.7937885024, 'min': -16826.3220071094} best=-19685.580901164
28: neval=1095{'avg': 11525.303041660452, 'max': 345948.2168892322, 'min': -28617.631579877965} best=-28617.631579877965
29: neval=1103{'avg': 4734.113390477119, 'max': 333871.4909268032, 'min': -29383.126263326732} best=-29383.126263326732
30: neval=1117{'avg': -2600.079169144005, 'max': 301242.93681781, 'min': -41402.53494128263} best=-41402.53494128263
31: neval=1131{'avg': -7840.27589663649, 'max': 353859.56353033776, 'min': -41166.60539900109} best=-41402.53494128263
32: neval=1079{'avg': -14835.016042613666, 'max': 359881.4287363434, 'min': -41948.16430866404} best=-41948.16430866404
33: neval=1110{'avg': -19428.160444432757, 'max': 377378.8342109003, 'min': -48989.00212337317} best=-48989.00212337317
34: neval=1091{'avg': -24091.761953783425, 'max': 284182.81945273525, 'min': -54019.702495502934} best=-54019.702495502934
35: neval=1096{'avg': -29613.18534811454, 'max': 258949.58793838153, 'min': -52870.88597786368} best=-54019.702495502934
36: neval=1099{'avg': -34714.12518848578, 'max': 372230.0910829975, 'min': -54207.098669775456} best=-54207.098669775456
37: neval=1145{'avg': -38030.10441881928, 'max': 360849.91788213287, 'min': -60177.12155968175} best=-60177.12155968175
38: neval=1091{'avg': -44052.94333487935, 'max': 282005.91806214856, 'min': -70714.19799253353} best=-70714.19799253353
39: neval=1146{'avg': -47744.44903336867, 'max': 315412.32862902456, 'min': -70298.67691465958} best=-70714.19799253353
40: neval=1107{'avg': -52063.589328835944, 'max': 384158.53978767834, 'min': -71429.11233435954} best=-71429.11233435954
41: neval=1099{'avg': -56023.50832952518, 'max': 262647.6509569624, 'min': -72237.77975691941} best=-72237.77975691941
42: neval=1121{'avg': -60048.64664212631, 'max': 375954.7638614254, 'min': -74564.16412734041} best=-74564.16412734041
43: neval=1099{'avg': -62624.486680699185, 'max': 262748.895494644, 'min': -76878.04336193576} best=-76878.04336193576
44: neval=1090{'avg': -64533.79219303825, 'max': 360853.7506062798, 'min': -81179.57691970153} best=-81179.57691970153
45: neval=1071{'avg': -68977.41289612353, 'max': 310844.31884334335, 'min': -82295.66846752327} best=-82295.66846752327
46: neval=1108{'avg': -71559.28891411933, 'max': 266473.40747962584, 'min': -84615.72609188143} best=-84615.72609188143
47: neval=1102{'avg': -74064.31007529722, 'max': 305441.31078208884, 'min': -84310.25814638066} best=-84615.72609188143
48: neval=1115{'avg': -77463.93518404751, 'max': 351296.3924924028, 'min': -89016.99846757078} best=-89016.99846757078
49: neval=1115{'avg': -79127.42521657147, 'max': 351911.1585306061, 'min': -88185.34030155864} best=-89016.99846757078
50: neval=1089{'avg': -82331.5090869051, 'max': 229134.2519641114, 'min': -90208.8686666188} best=-90208.8686666188
51: neval=1083{'avg': -83425.44010177889, 'max': 300359.44127876597, 'min': -90696.94486605568} best=-90696.94486605568
52: neval=1126{'avg': -86003.36823032593, 'max': 263362.3675312624, 'min': -90696.94486605568} best=-90696.94486605568
53: neval=1121{'avg': -85670.74690977491, 'max': 248854.6518452707, 'min': -91921.90389558926} best=-91921.90389558926
54: neval=1145{'avg': -87562.03616256139, 'max': 272763.7243424406, 'min': -93124.44167282092} best=-93124.44167282092
55: neval=1098{'avg': -88691.13861465258, 'max': 286300.599247162, 'min': -93124.44167282092} best=-93124.44167282092
56: neval=1104{'avg': -89484.00195897579, 'max': 353458.12105551834, 'min': -93643.68267723554} best=-93643.68267723554
57: neval=1093{'avg': -90365.91620343488, 'max': 310675.8392212214, 'min': -93643.68267723554} best=-93643.68267723554
58: neval=1117{'avg': -91323.24704425376, 'max': 323870.8831836905, 'min': -93778.15899871146} best=-93778.15899871146
59: neval=1096{'avg': -92026.24838396706, 'max': 192374.1495613764, 'min': -93778.15899871146} best=-93778.15899871146
60: neval=1119{'avg': -91344.75549097627, 'max': 265017.1397642287, 'min': -93778.15899871146} best=-93778.15899871146
61: neval=1101{'avg': -91126.61034946745, 'max': 236388.9020928131, 'min': -93778.15899871146} best=-93778.15899871146
62: neval=1090{'avg': -91423.6515013745, 'max': 342121.77711264486, 'min': -93778.15899871146} best=-93778.15899871146
63: neval=1088{'avg': -92324.20271535992, 'max': 251754.86132831694, 'min': -93778.15899871146} best=-93778.15899871146
64: neval=1105{'avg': -92464.14712562106, 'max': 180041.1405010616, 'min': -93778.15899871146} best=-93778.15899871146
65: neval=1073{'avg': -91512.83841588495, 'max': 330798.4628957926, 'min': -93778.15899871146} best=-93778.15899871146
66: neval=1090{'avg': -92179.83694218517, 'max': 248652.8931260915, 'min': -93778.15899871146} best=-93778.15899871146
67: neval=1107{'avg': -91715.86349463052, 'max': 303080.421335117, 'min': -93778.15899871146} best=-93778.15899871146
68: neval=1080{'avg': -91256.5549480743, 'max': 346020.89666078566, 'min': -93778.15899871146} best=-93778.15899871146
69: neval=1098{'avg': -92731.63753107144, 'max': 189451.3814516877, 'min': -93778.15899871146} best=-93778.15899871146
70: neval=1117{'avg': -91987.14713464696, 'max': 380636.1607689413, 'min': -93778.15899871146} best=-93778.15899871146
71: neval=1092{'avg': -92276.99818206095, 'max': 305465.3634893427, 'min': -93778.15899871146} best=-93778.15899871146
72: neval=1126{'avg': -91916.63019236582, 'max': 253662.50166729515, 'min': -93778.15899871146} best=-93778.15899871146
73: neval=1098{'avg': -91545.27584554836, 'max': 403454.9376025774, 'min': -93778.15899871146} best=-93778.15899871146
74: neval=1088{'avg': -91175.89844491161, 'max': 290338.68912051857, 'min': -93778.15899871146} best=-93778.15899871146
75: neval=1087{'avg': -92588.61594510188, 'max': 313711.32523511373, 'min': -93778.15899871146} best=-93778.15899871146
76: neval=1099{'avg': -91072.16727053093, 'max': 324111.7021006726, 'min': -93778.15899871146} best=-93778.15899871146
77: neval=1084{'avg': -93450.84119853767, 'max': 140561.8008614584, 'min': -93778.15899871146} best=-93778.15899871146
78: neval=1134{'avg': -92913.21761867109, 'max': 201273.69684039336, 'min': -93778.15899871146} best=-93778.15899871146
79: neval=1120{'avg': -92291.4906179598, 'max': 263947.10160405294, 'min': -93778.15899871146} best=-93778.15899871146
80: neval=1119{'avg': -92296.84553568345, 'max': 219750.53388883235, 'min': -93778.15899871146} best=-93778.15899871146
81: neval=1104{'avg': -92326.28885625677, 'max': 259606.78598211752, 'min': -93778.15899871146} best=-93778.15899871146
82: neval=1097{'avg': -91928.51859874617, 'max': 286047.312945973, 'min': -93778.15899871146} best=-93778.15899871146
83: neval=1099{'avg': -92780.36231105449, 'max': 225978.77948358827, 'min': -93778.15899871146} best=-93778.15899871146
84: neval=1077{'avg': -92693.43020667403, 'max': 306401.5763307405, 'min': -93778.15899871146} best=-93778.15899871146
85: neval=1095{'avg': -91783.42796813394, 'max': 267299.25027314934, 'min': -93778.15899871146} best=-93778.15899871146
86: neval=1096{'avg': -92840.51002588136, 'max': 138676.83547718087, 'min': -93778.15899871146} best=-93778.15899871146
87: neval=1093{'avg': -92046.93968984918, 'max': 322438.2402442105, 'min': -93778.15899871146} best=-93778.15899871146
88: neval=1090{'avg': -92455.37212051635, 'max': 195396.47581700227, 'min': -93778.15899871146} best=-93778.15899871146
89: neval=1109{'avg': -91330.83582141838, 'max': 310110.3501287839, 'min': -93778.15899871146} best=-93778.15899871146
90: neval=1111{'avg': -91471.78317730372, 'max': 289774.10529775696, 'min': -93778.15899871146} best=-93778.15899871146
91: neval=1124{'avg': -91878.97211826927, 'max': 258088.04877283002, 'min': -93778.15899871146} best=-93778.15899871146
92: neval=1113{'avg': -91003.79363636332, 'max': 226501.73745270827, 'min': -93778.15899871146} best=-93778.15899871146
93: neval=1098{'avg': -91277.80605087055, 'max': 254019.5054790845, 'min': -93778.15899871146} best=-93778.15899871146
94: neval=1116{'avg': -91364.40782283887, 'max': 263736.3808437282, 'min': -93778.15899871146} best=-93778.15899871146
95: neval=1125{'avg': -92082.79228775662, 'max': 228231.4591125619, 'min': -93778.15899871146} best=-93778.15899871146
96: neval=1080{'avg': -91210.59214391638, 'max': 303766.7115882441, 'min': -93778.15899871146} best=-93778.15899871146
97: neval=1118{'avg': -92301.58256298053, 'max': 383314.8342863131, 'min': -93778.15899871146} best=-93778.15899871146
98: neval=1108{'avg': -91833.09970132937, 'max': 396028.3350413322, 'min': -93778.15899871146} best=-93778.15899871146
99: neval=1089{'avg': -92033.51218288006, 'max': 287210.3664637685, 'min': -93778.15899871146} best=-93778.15899871146


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 128, 129, 143, 158, 159, 160, 162, 164, 165, 166, 167, 168, 170, 172, 173, 174]
best_individual.trans_facility = [6, 26, 32, 1, 53, 52, 56, 69, 70, 87, 124]
best_individual.unused_cities = {0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 163, 169, 171}
best_individual.fitness.values = (-95632.65012175345,)