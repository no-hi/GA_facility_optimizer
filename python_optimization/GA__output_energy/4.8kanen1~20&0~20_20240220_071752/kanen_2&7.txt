----------------------  実行情報  ----------------------
実行時間＝708秒
個体数＝450
合計世代数＝100
===============================
Total cost: -200719.65474982385
===============================
------------------------  前提  ------------------------

waste=kanen

ごみ量19位以内：
札幌市 (349353), 函館市 (66649), 旭川市 (64890), 苫小牧市 (42288), 釧路市 (38335), 帯広市 (35291), 千歳市 (25770), 小樽市 (25049), 江別市 (24906), 北見市 (20809), 室蘭市 (20448), 岩見沢市 (12638), 登別市 (11426), 北広島市 (10822), 石狩市 (9341), 音更町 (7531), 稚内市 (7127), 恵庭市 (6987), 伊達市 (6907)

焼却施設数: 2
中継施設数: 7

輸送単価＝ 4.8 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='kanen'
unit ='t/year'

inc_size= [851506, 89590]
inc_facility = ['札幌市', '函館市']
inc_blocks = [['夕張市', '岩見沢市', '美唄市', '赤平市', '三笠市', '滝川市', '砂川市', '歌志内市', '南幌町', '奈井江町', '上砂川町', '由仁町', '長沼町', '栗山町', '月形町', '浦臼町', '新十津川町', '雨竜町', '札幌市', '江別市', '千歳市', '恵庭市', '北広島市', '石狩市', '当別町', '新篠津村', '小樽市', '寿都町', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村', '安平町', '様似町', '占冠村', '羽幌町', '初山別村', '斜里町'], ['黒松内町', '函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '八雲町', '長万部町', '江差町', '上ノ国町', '厚沢部町', '乙部町', '今金町', 'せたな町']]

trans_size=[86940, 61909, 60124, 55115, 42741, 40276, 9247]
trans_facility = ['旭川市', '帯広市', '釧路市', '苫小牧市', '登別市', '北見市', '稚内市']
trans_blocks = [['苫小牧市', '白老町', '厚真町', 'むかわ町', '日高町', '平取町', '新冠町', '浦河町', '新ひだか町'], ['島牧村', '室蘭市', '登別市', '伊達市', '豊浦町', '壮瞥町', '洞爺湖町'], ['芦別市', '深川市', '妹背牛町', '秩父別町', '北竜町', '沼田町', '旭川市', '士別市', '名寄市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町', '和寒町', '剣淵町', '下川町', '美深町', '幌加内町', '留萌市', '増毛町', '小平町', '苫前町', '西興部村'], ['音威子府村', '中川町', '遠別町', '天塩町', '稚内市', '猿払村', '浜頓別町', '中頓別町', '枝幸町', '豊富町', '幌延町'], ['北見市', '網走市', '紋別市', '美幌町', '津別町', '清里町', '小清水町', '訓子府町', '置戸町', '佐呂間町', '遠軽町', '湧別町', '滝上町', '興部町', '雄武町', '大空町', '陸別町'], ['えりも町', '南富良野町', '帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町', '本別町', '足寄町', '浦幌町'], ['釧路市', '釧路町', '厚岸町', '浜中町', '標茶町', '弟子屈町', '鶴居村', '白糠町', '根室市', '別海町', '中標津町', '標津町', '羅臼町']]

arrows = [[['札幌市'], ['釧路市', '帯広市', '苫小牧市', '稚内市', '登別市', '旭川市', '北見市']]]


---------------------  エネルギー情報  ---------------------
[57588.00031264583, 247753.349723594, -527852.1736627761, 21791.168876712327]

EL_direct: {'札幌市': 47971.642864708345, '函館市': 9616.3574479375}
ED_inc: {'札幌市': -577689.3242263511, '函館市': 49837.150563574956}

EL_indirect: {'旭川市': 43223.340253556664, '帯広市': 42358.551716208014, '釧路市': 67611.24276930616, '苫小牧市': 17463.086854330006, '登別市': 21138.039618273506, '北見市': 45271.312258276026, '稚内市': 10687.77625364367}
ED_trans: {'旭川市': 5316.440547945205, '帯広市': 3785.777753424658, '釧路市': 3676.6237808219175, '苫小牧市': 3370.32, '登別市': 2613.641424657534, '北見市': 2462.9049863013697, '稚内市': 565.4603835616439}

----------------------  輸送情報  ----------------------

direct 札幌市(1357/2333) t/day → receive from: 夕張市, 岩見沢市, 美唄市, 赤平市, 三笠市, 滝川市, 砂川市, 歌志内市, 南幌町, 奈井江町, 上砂川町, 由仁町, 長沼町, 栗山町, 月形町, 浦臼町, 新十津川町, 雨竜町, 札幌市, 江別市, 千歳市, 恵庭市, 北広島市, 石狩市, 当別町, 新篠津村, 小樽市, 寿都町, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村, 安平町, 様似町, 占冠村, 羽幌町, 初山別村, 斜里町
indirect 札幌市(976/2333) t/day → receive from: 中継施設＝ 釧路市(60124) → receive from: 釧路市, 釧路町, 厚岸町, 浜中町, 標茶町, 弟子屈町, 鶴居村, 白糠町, 根室市, 別海町, 中標津町, 標津町, 羅臼町
帯広市(61909) → receive from: えりも町, 南富良野町, 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町, 本別町, 足寄町, 浦幌町
苫小牧市(55115) → receive from: 苫小牧市, 白老町, 厚真町, むかわ町, 日高町, 平取町, 新冠町, 浦河町, 新ひだか町
稚内市(9247) → receive from: 音威子府村, 中川町, 遠別町, 天塩町, 稚内市, 猿払村, 浜頓別町, 中頓別町, 枝幸町, 豊富町, 幌延町
登別市(42741) → receive from: 島牧村, 室蘭市, 登別市, 伊達市, 豊浦町, 壮瞥町, 洞爺湖町
旭川市(86940) → receive from: 芦別市, 深川市, 妹背牛町, 秩父別町, 北竜町, 沼田町, 旭川市, 士別市, 名寄市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町, 和寒町, 剣淵町, 下川町, 美深町, 幌加内町, 留萌市, 増毛町, 小平町, 苫前町, 西興部村
北見市(40276) → receive from: 北見市, 網走市, 紋別市, 美幌町, 津別町, 清里町, 小清水町, 訓子府町, 置戸町, 佐呂間町, 遠軽町, 湧別町, 滝上町, 興部町, 雄武町, 大空町, 陸別町
direct 函館市(245/245) t/day → receive from: 黒松内町, 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 八雲町, 長万部町, 江差町, 上ノ国町, 厚沢部町, 乙部町, 今金町, せたな町

----------------------  遺伝情報  ----------------------

個体数＝450
世代数＝100
0: neval=450{'avg': inf, 'max': inf, 'min': -159540.7327511513} best=-159540.7327511513
1: neval=352{'avg': -38332.58562916093, 'max': 185770.1217966618, 'min': -159540.7327511513} best=-159540.7327511513
2: neval=358{'avg': inf, 'max': inf, 'min': -141233.2565726709} best=-159540.7327511513
3: neval=359{'avg': inf, 'max': inf, 'min': -157020.06841505883} best=-159540.7327511513
4: neval=363{'avg': -98958.02486379737, 'max': 193019.2371922366, 'min': -158418.0010398973} best=-159540.7327511513
5: neval=364{'avg': -112808.05690419831, 'max': 243781.53973889904, 'min': -164544.4618795776} best=-164544.4618795776
6: neval=361{'avg': -126519.98203356472, 'max': 262017.24725160375, 'min': -179863.67094430668} best=-179863.67094430668
7: neval=361{'avg': -139035.7531868953, 'max': 131375.8121435822, 'min': -194432.31397089158} best=-194432.31397089158
8: neval=339{'avg': -150339.22869327, 'max': 25595.06029631431, 'min': -194432.31397089158} best=-194432.31397089158
9: neval=340{'avg': -160600.20326511364, 'max': -46333.09042884948, 'min': -194432.31397089158} best=-194432.31397089158
10: neval=365{'avg': -171664.1666303389, 'max': -65548.95296476786, 'min': -198410.19297735754} best=-198410.19297735754
11: neval=354{'avg': -181832.44739694765, 'max': -83761.93536555789, 'min': -198410.19297735754} best=-198410.19297735754
12: neval=364{'avg': -187436.52229038993, 'max': -91132.78415850649, 'min': -198410.19297735754} best=-198410.19297735754
13: neval=341{'avg': -191459.64516606752, 'max': -146935.5557081869, 'min': -200719.65474982385} best=-200719.65474982385
14: neval=360{'avg': -193655.80835957517, 'max': -19969.24060346276, 'min': -200719.65474982385} best=-200719.65474982385
15: neval=349{'avg': -195370.40752568303, 'max': -59588.75190244145, 'min': -200719.65474982385} best=-200719.65474982385
16: neval=355{'avg': -197533.80461302167, 'max': -123670.76895126209, 'min': -200719.65474982385} best=-200719.65474982385
17: neval=344{'avg': -199379.5719127592, 'max': -125322.66852450627, 'min': -200719.65474982385} best=-200719.65474982385
18: neval=349{'avg': -200319.91874159334, 'max': -141870.65102516583, 'min': -200719.65474982385} best=-200719.65474982385
19: neval=378{'avg': -200374.68109334673, 'max': -124786.4120602296, 'min': -200719.65474982385} best=-200719.65474982385
20: neval=342{'avg': -200393.01210027226, 'max': -147972.33387396, 'min': -200719.65474982385} best=-200719.65474982385
21: neval=337{'avg': -198951.62862523913, 'max': 324941.35871771426, 'min': -200719.65474982385} best=-200719.65474982385
22: neval=368{'avg': -200351.6643230725, 'max': -131852.98065425723, 'min': -200719.65474982385} best=-200719.65474982385
23: neval=359{'avg': -200316.580286702, 'max': -135938.4734518789, 'min': -200719.65474982385} best=-200719.65474982385
24: neval=347{'avg': -200516.46044426988, 'max': -153083.56108179418, 'min': -200719.65474982385} best=-200719.65474982385
25: neval=377{'avg': -200436.12044091983, 'max': -80574.82260800351, 'min': -200719.65474982385} best=-200719.65474982385
26: neval=347{'avg': -200209.72262731456, 'max': -66761.38331138779, 'min': -200719.65474982385} best=-200719.65474982385
27: neval=375{'avg': -200643.9989355819, 'max': -178780.62711376674, 'min': -200719.65474982385} best=-200719.65474982385
28: neval=362{'avg': -200719.65474982382, 'max': -200719.65474982385, 'min': -200719.65474982385} best=-200719.65474982385
29: neval=352{'avg': -200181.43805225875, 'max': -124595.03025635886, 'min': -200719.65474982385} best=-200719.65474982385
30: neval=346{'avg': -200462.1395697344, 'max': -133540.8811500114, 'min': -200719.65474982385} best=-200719.65474982385
31: neval=347{'avg': -200595.79606755197, 'max': -164990.9234408277, 'min': -200719.65474982385} best=-200719.65474982385
32: neval=364{'avg': -200245.2344730933, 'max': -60396.34613079985, 'min': -200719.65474982385} best=-200719.65474982385
33: neval=364{'avg': -200174.76495243656, 'max': -140886.78237137734, 'min': -200719.65474982385} best=-200719.65474982385
34: neval=354{'avg': -200330.75436689245, 'max': -151841.78561168013, 'min': -200719.65474982385} best=-200719.65474982385
35: neval=358{'avg': -200608.02516713148, 'max': -159012.00298612504, 'min': -200719.65474982385} best=-200719.65474982385
36: neval=344{'avg': -200238.01100016845, 'max': -104173.40172146048, 'min': -200719.65474982385} best=-200719.65474982385
37: neval=358{'avg': -200347.19107888648, 'max': -140857.99077488552, 'min': -200719.65474982385} best=-200719.65474982385
38: neval=362{'avg': -200550.4424817276, 'max': -151377.28583322454, 'min': -200719.65474982385} best=-200719.65474982385
39: neval=355{'avg': -200626.23463319844, 'max': -169852.55410305146, 'min': -200719.65474982385} best=-200719.65474982385
40: neval=346{'avg': -199734.37231839882, 'max': 84310.50154871521, 'min': -200719.65474982385} best=-200719.65474982385
41: neval=353{'avg': -199926.36578591078, 'max': -82733.11276306625, 'min': -200719.65474982385} best=-200719.65474982385
42: neval=354{'avg': -200528.25261555397, 'max': -136483.5549876921, 'min': -200719.65474982385} best=-200719.65474982385
43: neval=360{'avg': -200176.11787730153, 'max': -87299.00754703375, 'min': -200719.65474982385} best=-200719.65474982385
44: neval=351{'avg': -200405.08857431245, 'max': -105954.67148991463, 'min': -200719.65474982385} best=-200719.65474982385
45: neval=359{'avg': -200155.6198953612, 'max': -69398.18405846527, 'min': -200719.65474982385} best=-200719.65474982385
46: neval=359{'avg': -200536.74980003966, 'max': -159658.77221978194, 'min': -200719.65474982385} best=-200719.65474982385
47: neval=346{'avg': -200103.1724518282, 'max': -129010.0205415001, 'min': -200719.65474982385} best=-200719.65474982385
48: neval=374{'avg': -200107.337456439, 'max': -124591.90587287609, 'min': -200719.65474982385} best=-200719.65474982385
49: neval=341{'avg': -200719.65474982382, 'max': -200719.65474982385, 'min': -200719.65474982385} best=-200719.65474982385
50: neval=331{'avg': -200649.72323063514, 'max': -169250.47111492552, 'min': -200719.65474982385} best=-200719.65474982385
51: neval=356{'avg': -200575.27257690113, 'max': -155161.3742873868, 'min': -200719.65474982385} best=-200719.65474982385
52: neval=337{'avg': -200115.24568409284, 'max': -145694.65544754264, 'min': -200719.65474982385} best=-200719.65474982385
53: neval=359{'avg': -200208.76326021765, 'max': -145694.65544754264, 'min': -200719.65474982385} best=-200719.65474982385
54: neval=343{'avg': -200339.59537326812, 'max': -145694.65544754264, 'min': -200719.65474982385} best=-200719.65474982385
55: neval=344{'avg': -200719.65474982382, 'max': -200719.65474982385, 'min': -200719.65474982385} best=-200719.65474982385
56: neval=344{'avg': -200137.9450753553, 'max': -94773.33593125003, 'min': -200719.65474982385} best=-200719.65474982385
57: neval=356{'avg': -200494.5964089343, 'max': -157731.13773793724, 'min': -200719.65474982385} best=-200719.65474982385
58: neval=356{'avg': -200333.7162888071, 'max': -150757.86479954128, 'min': -200719.65474982385} best=-200719.65474982385
59: neval=371{'avg': -200336.4648570384, 'max': -113355.3861923411, 'min': -200719.65474982385} best=-200719.65474982385
60: neval=360{'avg': -200475.7979283827, 'max': -143258.688667327, 'min': -200719.65474982385} best=-200719.65474982385
61: neval=370{'avg': -200130.9484042993, 'max': -44935.743549587285, 'min': -200719.65474982385} best=-200719.65474982385
62: neval=356{'avg': -200430.746486446, 'max': -168205.62148307683, 'min': -200719.65474982385} best=-200719.65474982385
63: neval=354{'avg': -199962.28316290333, 'max': -130023.96930470713, 'min': -200719.65474982385} best=-200719.65474982385
64: neval=347{'avg': -200520.32895200644, 'max': -144371.36373500887, 'min': -200719.65474982385} best=-200719.65474982385
65: neval=350{'avg': -200554.60998712646, 'max': -158664.8490243743, 'min': -200719.65474982385} best=-200719.65474982385
66: neval=352{'avg': -200377.1596166014, 'max': -106477.43662840778, 'min': -200719.65474982385} best=-200719.65474982385
67: neval=344{'avg': -200515.1001696914, 'max': -152494.18299412064, 'min': -200719.65474982385} best=-200719.65474982385
68: neval=394{'avg': -200482.91931821854, 'max': -122905.29570779162, 'min': -200719.65474982385} best=-200719.65474982385
69: neval=346{'avg': -200631.81342171846, 'max': -161191.05710240605, 'min': -200719.65474982385} best=-200719.65474982385
70: neval=366{'avg': -200506.3660497314, 'max': -154597.77044942835, 'min': -200719.65474982385} best=-200719.65474982385
71: neval=378{'avg': -200186.30082426907, 'max': -86612.03141663513, 'min': -200719.65474982385} best=-200719.65474982385
72: neval=361{'avg': -200128.74538762504, 'max': -68147.8132864235, 'min': -200719.65474982385} best=-200719.65474982385
73: neval=360{'avg': -200212.44317983557, 'max': -151682.32703838396, 'min': -200719.65474982385} best=-200719.65474982385
74: neval=357{'avg': -200523.87647208924, 'max': -132439.76688212596, 'min': -200719.65474982385} best=-200719.65474982385
75: neval=369{'avg': -200210.53270127706, 'max': -133742.8858532597, 'min': -200719.65474982385} best=-200719.65474982385
76: neval=355{'avg': -200291.64555030345, 'max': -83538.29341622257, 'min': -200719.65474982385} best=-200719.65474982385
77: neval=345{'avg': -200610.18497696592, 'max': -170958.5233860149, 'min': -200719.65474982385} best=-200719.65474982385
78: neval=374{'avg': -200364.151398675, 'max': -104341.2556426856, 'min': -200719.65474982385} best=-200719.65474982385
79: neval=354{'avg': -200652.35117611242, 'max': -172742.50835216243, 'min': -200719.65474982385} best=-200719.65474982385
80: neval=361{'avg': -200452.5577217024, 'max': -121270.00137844775, 'min': -200719.65474982385} best=-200719.65474982385
81: neval=347{'avg': -200623.96703923374, 'max': -157660.18498429502, 'min': -200719.65474982385} best=-200719.65474982385
82: neval=356{'avg': -200386.86055651956, 'max': -140455.4777886069, 'min': -200719.65474982385} best=-200719.65474982385
83: neval=349{'avg': -200197.14145141892, 'max': -93234.51351505605, 'min': -200719.65474982385} best=-200719.65474982385
84: neval=370{'avg': -200529.6968501192, 'max': -158309.38152952268, 'min': -200719.65474982385} best=-200719.65474982385
85: neval=365{'avg': -200365.72192099804, 'max': -135642.50675444264, 'min': -200719.65474982385} best=-200719.65474982385
86: neval=360{'avg': -199924.8044990976, 'max': -37828.12556892437, 'min': -200719.65474982385} best=-200719.65474982385
87: neval=342{'avg': -200220.43442832766, 'max': -98378.58955901915, 'min': -200719.65474982385} best=-200719.65474982385
88: neval=339{'avg': -200646.65825524624, 'max': -167871.23218992597, 'min': -200719.65474982385} best=-200719.65474982385
89: neval=347{'avg': -200480.31881563424, 'max': -158255.8569795541, 'min': -200719.65474982385} best=-200719.65474982385
90: neval=360{'avg': -200463.77509501635, 'max': -151841.78561168013, 'min': -200719.65474982385} best=-200719.65474982385
91: neval=361{'avg': -200676.17612807042, 'max': -181154.27496080325, 'min': -200719.65474982385} best=-200719.65474982385
92: neval=357{'avg': -199652.52802579783, 'max': -9314.916568676541, 'min': -200719.65474982385} best=-200719.65474982385
93: neval=370{'avg': -200137.9734354044, 'max': -109275.73761231889, 'min': -200719.65474982385} best=-200719.65474982385
94: neval=351{'avg': -200314.1432495809, 'max': -144294.7669658044, 'min': -200719.65474982385} best=-200719.65474982385
95: neval=352{'avg': -200151.78285335057, 'max': -118802.04254354046, 'min': -200719.65474982385} best=-200719.65474982385
96: neval=357{'avg': -200100.0941986343, 'max': -93252.84689870685, 'min': -200719.65474982385} best=-200719.65474982385
97: neval=356{'avg': -200554.47986960283, 'max': -150527.22391730387, 'min': -200719.65474982385} best=-200719.65474982385
98: neval=365{'avg': -199768.04877994896, 'max': 10094.360527561308, 'min': -200719.65474982385} best=-200719.65474982385
99: neval=344{'avg': -200536.13857632008, 'max': -161349.17269577077, 'min': -200719.65474982385} best=-200719.65474982385


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 70]
best_individual.trans_facility = [53, 54, 87, 118, 125, 143, 162]
best_individual.unused_cities = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174}
best_individual.fitness.values = (-200719.65474982385,)