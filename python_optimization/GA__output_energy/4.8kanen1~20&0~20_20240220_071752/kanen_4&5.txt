局----------------------  実行情報  ----------------------
実行時間＝961秒
個体数＝450
合計世代数＝100
===============================
Total cost: -168002.45918951195
===============================
------------------------  前提  ------------------------

waste=kanen

ごみ量19位以内：
札幌市 (349353), 函館市 (66649), 旭川市 (64890), 苫小牧市 (42288), 釧路市 (38335), 帯広市 (35291), 千歳市 (25770), 小樽市 (25049), 江別市 (24906), 北見市 (20809), 室蘭市 (20448), 岩見沢市 (12638), 登別市 (11426), 北広島市 (10822), 石狩市 (9341), 音更町 (7531), 稚内市 (7127), 恵庭市 (6987), 伊達市 (6907)

焼却施設数: 4
中継施設数: 5

輸送単価＝ 4.8 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='kanen'
unit ='t/year'

inc_size= [851333, 86096, 2311, 1356]
inc_facility = ['札幌市', '函館市', '松前町', '福島町']
inc_blocks = [['夕張市', '岩見沢市', '美唄市', '赤平市', '三笠市', '滝川市', '砂川市', '歌志内市', '南幌町', '奈井江町', '上砂川町', '由仁町', '長沼町', '栗山町', '月形町', '浦臼町', '新十津川町', '雨竜町', '札幌市', '江別市', '千歳市', '恵庭市', '北広島市', '石狩市', '当別町', '新篠津村', '小樽市', '寿都町', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村', '豊浦町', '安平町', '様似町', '占冠村', '斜里町'], ['島牧村', '黒松内町', '函館市', '北斗市', '七飯町', '鹿部町', '森町', '八雲町', '長万部町', '厚沢部町', '乙部町', '今金町', 'せたな町'], ['松前町', '江差町', '上ノ国町'], ['福島町', '知内町', '木古内町']]

trans_size=[97042, 96752, 61909, 60124, 40276]
trans_facility = ['苫小牧市', '旭川市', '帯広市', '釧路市', '北見市']
trans_blocks = [['室蘭市', '苫小牧市', '登別市', '伊達市', '壮瞥町', '白老町', '厚真町', '洞爺湖町', 'むかわ町', '日高町', '平取町', '新冠町', '浦河町', '新ひだか町'], ['芦別市', '深川市', '妹背牛町', '秩父別町', '北竜町', '沼田町', '旭川市', '士別市', '名寄市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町', '和寒町', '剣淵町', '下川町', '美深町', '音威子府村', '中川町', '幌加内町', '留萌市', '増毛町', '小平町', '苫前町', '羽幌町', '初山別村', '遠別町', '天塩町', '稚内市', '猿払村', '浜頓別町', '中頓別町', '枝幸町', '豊富町', '幌延町', '西興部村'], ['北見市', '網走市', '紋別市', '美幌町', '津別町', '清里町', '小清水町', '訓子府町', '置戸町', '佐呂間町', '遠軽町', '湧別町', '滝上町', '興部町', '雄武町', '大空町', '陸別町'], ['えりも町', '南富良野町', '帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町', '本別町', '足寄町', '浦幌町'], ['釧路市', '釧路町', '厚岸町', '浜中町', '標茶町', '弟子屈町', '鶴居村', '白糠町', '根室市', '別海町', '中標津町', '標津町', '羅臼町']]

arrows = [[['札幌市'], ['釧路市', '帯広市', '苫小牧市', '旭川市', '北見市']]]


---------------------  エネルギー情報  ---------------------
[56546.14921989585, 270431.99109207455, -516756.5418576468, 21775.942356164385]

EL_direct: {'札幌市': 47609.204481854176, '函館市': 7858.173705416668, '松前町': 833.3328247291668, '福島町': 245.4382078958334}
ED_inc: {'札幌市': -577571.9554079386, '函館市': 50015.953011153746, '松前町': 6523.647287530638, '福島町': 4275.813251607425}

EL_indirect: {'苫小牧市': 50639.923827443155, '旭川市': 64550.96052084117, '帯広市': 42358.551716208014, '釧路市': 67611.24276930616, '北見市': 45271.312258276026}
ED_trans: {'苫小牧市': 5934.184767123287, '旭川市': 5916.451068493151, '帯広市': 3785.777753424658, '釧路市': 3676.6237808219175, '北見市': 2462.9049863013697}

----------------------  輸送情報  ----------------------

direct 札幌市(1357/2332) t/day → receive from: 夕張市, 岩見沢市, 美唄市, 赤平市, 三笠市, 滝川市, 砂川市, 歌志内市, 南幌町, 奈井江町, 上砂川町, 由仁町, 長沼町, 栗山町, 月形町, 浦臼町, 新十津川町, 雨竜町, 札幌市, 江別市, 千歳市, 恵庭市, 北広島市, 石狩市, 当別町, 新篠津村, 小樽市, 寿都町, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村, 豊浦町, 安平町, 様似町, 占冠村, 斜里町
indirect 札幌市(976/2332) t/day → receive from: 中継施設＝ 釧路市(60124) → receive from: 釧路市, 釧路町, 厚岸町, 浜中町, 標茶町, 弟子屈町, 鶴居村, 白糠町, 根室市, 別海町, 中標津町, 標津町, 羅臼町
帯広市(61909) → receive from: えりも町, 南富良野町, 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町, 本別町, 足寄町, 浦幌町
苫小牧市(97042) → receive from: 室蘭市, 苫小牧市, 登別市, 伊達市, 壮瞥町, 白老町, 厚真町, 洞爺湖町, むかわ町, 日高町, 平取町, 新冠町, 浦河町, 新ひだか町
旭川市(96752) → receive from: 芦別市, 深川市, 妹背牛町, 秩父別町, 北竜町, 沼田町, 旭川市, 士別市, 名寄市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町, 和寒町, 剣淵町, 下川町, 美深町, 音威子府村, 中川町, 幌加内町, 留萌市, 増毛町, 小平町, 苫前町, 羽幌町, 初山別村, 遠別町, 天塩町, 稚内市, 猿払村, 浜頓別町, 中頓別町, 枝幸町, 豊富町, 幌延町, 西興部村
北見市(40276) → receive from: 北見市, 網走市, 紋別市, 美幌町, 津別町, 清里町, 小清水町, 訓子府町, 置戸町, 佐呂間町, 遠軽町, 湧別町, 滝上町, 興部町, 雄武町, 大空町, 陸別町
direct 函館市(236/236) t/day → receive from: 島牧村, 黒松内町, 函館市, 北斗市, 七飯町, 鹿部町, 森町, 八雲町, 長万部町, 厚沢部町, 乙部町, 今金町, せたな町
direct 松前町(6/6) t/day → receive from: 松前町, 江差町, 上ノ国町
direct 福島町(4/4) t/day → receive from: 福島町, 知内町, 木古内町

----------------------  遺伝情報  ----------------------

個体数＝450
世代数＝100
0: neval=450{'avg': inf, 'max': inf, 'min': -83951.0913180104} best=-83951.0913180104
1: neval=359{'avg': inf, 'max': inf, 'min': -26508.716909831754} best=-83951.0913180104
2: neval=366{'avg': 64443.75811491163, 'max': 419582.21786910703, 'min': -66831.09946136849} best=-83951.0913180104
3: neval=349{'avg': inf, 'max': inf, 'min': -75360.3137216774} best=-83951.0913180104
4: neval=343{'avg': 3216.622825653703, 'max': 170206.25283930544, 'min': -75360.3137216774} best=-83951.0913180104
5: neval=343{'avg': -18805.309148472672, 'max': 275436.45777599094, 'min': -88964.42251234215} best=-88964.42251234215
6: neval=345{'avg': -39151.80654198863, 'max': 177594.92155036787, 'min': -122216.59130099932} best=-122216.59130099932
7: neval=353{'avg': -50385.91241302563, 'max': 296941.4122651486, 'min': -122216.59130099932} best=-122216.59130099932
8: neval=357{'avg': -68339.7669146851, 'max': 184798.02843044582, 'min': -124311.30467000006} best=-124311.30467000006
9: neval=350{'avg': -83256.25257976032, 'max': 206452.51547473043, 'min': -124311.30467000006} best=-124311.30467000006
10: neval=361{'avg': -94923.75633280026, 'max': 368257.0366340554, 'min': -136815.67942926017} best=-136815.67942926017
11: neval=349{'avg': -106840.73330489389, 'max': -26648.022280351695, 'min': -133902.39015536226} best=-136815.67942926017
12: neval=336{'avg': -116551.57278392522, 'max': -32922.31094790906, 'min': -135200.10344905176} best=-136815.67942926017
13: neval=364{'avg': -119973.95656427232, 'max': 130717.52993065194, 'min': -137046.9441657508} best=-137046.9441657508
14: neval=351{'avg': -125780.13514922443, 'max': -66060.17221827811, 'min': -142370.40780321127} best=-142370.40780321127
15: neval=343{'avg': -130201.46104724705, 'max': -10388.367584559306, 'min': -143815.97314849935} best=-143815.97314849935
16: neval=350{'avg': -131084.28303988415, 'max': 326191.1513138419, 'min': -143815.97314849935} best=-143815.97314849935
17: neval=348{'avg': -133442.6179097147, 'max': 320835.86327681254, 'min': -146326.6384447272} best=-146326.6384447272
18: neval=343{'avg': -137027.2444644778, 'max': 55806.57089325976, 'min': -146524.50015381252} best=-146524.50015381252
19: neval=353{'avg': -136648.10536733517, 'max': 155469.41315672453, 'min': -146524.50015381252} best=-146524.50015381252
20: neval=351{'avg': -139549.517312503, 'max': 66303.16450045854, 'min': -146524.50015381252} best=-146524.50015381252
21: neval=360{'avg': -143506.58072414706, 'max': -76382.4813870932, 'min': -146524.50015381252} best=-146524.50015381252
22: neval=353{'avg': -144062.25313861933, 'max': -34940.78444237514, 'min': -150483.10479044166} best=-150483.10479044166
23: neval=342{'avg': -144851.58707108189, 'max': 210927.5034159906, 'min': -150483.10479044166} best=-150483.10479044166
24: neval=361{'avg': -146733.56201075003, 'max': -143815.97314849935, 'min': -153154.63022472724} best=-153154.63022472724
25: neval=364{'avg': -146957.07696595715, 'max': -48210.55792854151, 'min': -153154.63022472724} best=-153154.63022472724
26: neval=360{'avg': -149006.0743304812, 'max': -108233.27094792668, 'min': -153154.63022472724} best=-153154.63022472724
27: neval=339{'avg': -151125.14135597722, 'max': -93925.4646079364, 'min': -153154.63022472724} best=-153154.63022472724
28: neval=356{'avg': -150415.9401454492, 'max': 141849.7641156559, 'min': -153154.63022472724} best=-153154.63022472724
29: neval=369{'avg': -153051.06212571482, 'max': -146524.50015381252, 'min': -153154.63022472724} best=-153154.63022472724
30: neval=354{'avg': -152488.40930601663, 'max': -38156.69750138973, 'min': -153154.63022472724} best=-153154.63022472724
31: neval=360{'avg': -152021.18150599176, 'max': 126945.47093335868, 'min': -153154.63022472724} best=-153154.63022472724
32: neval=363{'avg': -152316.1882290252, 'max': 17176.771672632658, 'min': -153154.63022472724} best=-153154.63022472724
33: neval=348{'avg': -152778.81742641953, 'max': -4242.760069626816, 'min': -153154.63022472724} best=-153154.63022472724
34: neval=361{'avg': -153154.63022472727, 'max': -153154.63022472724, 'min': -153154.63022472724} best=-153154.63022472724
35: neval=350{'avg': -152887.79085552756, 'max': -104533.02348713818, 'min': -153154.63022472724} best=-153154.63022472724
36: neval=350{'avg': -152165.73587720658, 'max': 58280.71305939532, 'min': -153154.63022472724} best=-153154.63022472724
37: neval=354{'avg': -152774.9280159329, 'max': -86792.37744992189, 'min': -153154.63022472724} best=-153154.63022472724
38: neval=321{'avg': -153154.63022472727, 'max': -153154.63022472724, 'min': -153154.63022472724} best=-153154.63022472724
39: neval=352{'avg': -152832.51461067982, 'max': -54911.6130288886, 'min': -153154.63022472724} best=-153154.63022472724
40: neval=345{'avg': -151769.15431560727, 'max': 24681.51060776237, 'min': -153154.63022472724} best=-153154.63022472724
41: neval=361{'avg': -152134.46591235683, 'max': 27436.474838051436, 'min': -153154.63022472724} best=-153154.63022472724
42: neval=353{'avg': -153139.46050582494, 'max': -142373.26004716937, 'min': -154472.9624485657} best=-154472.9624485657
43: neval=325{'avg': -152882.66835618997, 'max': -73087.47945732622, 'min': -154472.9624485657} best=-154472.9624485657
44: neval=366{'avg': -153182.25312742803, 'max': -99668.32524815714, 'min': -154472.9624485657} best=-154472.9624485657
45: neval=370{'avg': -152644.5307094458, 'max': -53453.81138145271, 'min': -154472.9624485657} best=-154472.9624485657
46: neval=370{'avg': -153659.76264759668, 'max': -62746.15457090391, 'min': -154472.9624485657} best=-154472.9624485657
47: neval=332{'avg': -153568.62222710787, 'max': 7237.135417561894, 'min': -154472.9624485657} best=-154472.9624485657
48: neval=367{'avg': -154362.01809692662, 'max': -107184.66865863604, 'min': -154472.9624485657} best=-154472.9624485657
49: neval=361{'avg': -153942.00458656685, 'max': -57761.36094317851, 'min': -154472.9624485657} best=-154472.9624485657
50: neval=360{'avg': -154358.0731590868, 'max': -68481.15736903972, 'min': -163045.86865206825} best=-163045.86865206825
51: neval=351{'avg': -154028.12535724553, 'max': -62115.842510709845, 'min': -163045.86865206825} best=-163045.86865206825
52: neval=365{'avg': -154127.36485809446, 'max': 134643.51855525002, 'min': -163045.86865206825} best=-163045.86865206825
53: neval=367{'avg': -155462.95153460072, 'max': 25277.206208766478, 'min': -163045.86865206825} best=-163045.86865206825
54: neval=332{'avg': -159156.1641944616, 'max': -55257.18482602866, 'min': -163045.86865206825} best=-163045.86865206825
55: neval=347{'avg': -161681.6767869627, 'max': -105007.48287135214, 'min': -163045.86865206825} best=-163045.86865206825
56: neval=382{'avg': -162428.957773867, 'max': -93198.6771463061, 'min': -163045.86865206825} best=-163045.86865206825
57: neval=354{'avg': -163007.76684671937, 'max': -154472.9624485657, 'min': -163045.86865206825} best=-163045.86865206825
58: neval=358{'avg': -160754.35357945587, 'max': 35814.57390335184, 'min': -163045.86865206825} best=-163045.86865206825
59: neval=354{'avg': -162564.81405051958, 'max': -21683.472397180965, 'min': -163045.86865206825} best=-163045.86865206825
60: neval=351{'avg': -162459.63493790495, 'max': -21515.231660274276, 'min': -163045.86865206825} best=-163045.86865206825
61: neval=356{'avg': -162329.46964111162, 'max': -19962.213339559603, 'min': -163045.86865206825} best=-163045.86865206825
62: neval=368{'avg': -162868.24892807423, 'max': -109030.32328419285, 'min': -163045.86865206825} best=-163045.86865206825
63: neval=361{'avg': -162563.88171422467, 'max': -39891.26973826038, 'min': -163087.2776094849} best=-163087.2776094849
64: neval=336{'avg': -162941.69802977954, 'max': -115175.27364413586, 'min': -163087.2776094849} best=-163087.2776094849
65: neval=342{'avg': -162283.17378438663, 'max': -601.9884412378378, 'min': -163087.2776094849} best=-163087.2776094849
66: neval=352{'avg': -162491.9708342735, 'max': -56730.41962337349, 'min': -163087.2776094849} best=-163087.2776094849
67: neval=366{'avg': -162410.76105440033, 'max': -42341.01562933383, 'min': -163087.2776094849} best=-163087.2776094849
68: neval=357{'avg': -162757.62817798223, 'max': -46769.68801796156, 'min': -163087.2776094849} best=-163087.2776094849
69: neval=371{'avg': -161877.1612746097, 'max': 115363.14595364609, 'min': -163087.2776094849} best=-163087.2776094849
70: neval=346{'avg': -162912.53965616465, 'max': -89107.72113872379, 'min': -163087.2776094849} best=-163087.2776094849
71: neval=374{'avg': -162529.91857036523, 'max': -66509.00561696975, 'min': -163087.2776094849} best=-163087.2776094849
72: neval=341{'avg': -161694.988764996, 'max': -27879.724220830336, 'min': -163087.2776094849} best=-163087.2776094849
73: neval=385{'avg': -162452.90282462022, 'max': -99630.36085911952, 'min': -163087.2776094849} best=-163087.2776094849
74: neval=364{'avg': -163087.2776094849, 'max': -163087.2776094849, 'min': -163087.2776094849} best=-163087.2776094849
75: neval=353{'avg': -162763.5359269283, 'max': -96492.4690179092, 'min': -163087.2776094849} best=-163087.2776094849
76: neval=353{'avg': -162623.0843292485, 'max': -81765.74120056907, 'min': -163087.2776094849} best=-163087.2776094849
77: neval=360{'avg': -161353.70935044417, 'max': 45281.45752179019, 'min': -163087.2776094849} best=-163087.2776094849
78: neval=360{'avg': -161984.52398036525, 'max': 6693.454526271606, 'min': -163087.2776094849} best=-163087.2776094849
79: neval=344{'avg': -161458.96054769435, 'max': -34718.435382656025, 'min': -163087.2776094849} best=-163087.2776094849
80: neval=363{'avg': -162907.02822936513, 'max': -115411.82200772832, 'min': -163087.2776094849} best=-163087.2776094849
81: neval=361{'avg': -162809.5847337642, 'max': -93664.4968707975, 'min': -163087.2776094849} best=-163087.2776094849
82: neval=335{'avg': -162771.77457878, 'max': -86112.41845277773, 'min': -163087.2776094849} best=-163087.2776094849
83: neval=337{'avg': -162788.20902428104, 'max': -63837.11983912813, 'min': -163087.2776094849} best=-163087.2776094849
84: neval=364{'avg': -161374.27808794958, 'max': 172392.80368631968, 'min': -163087.2776094849} best=-163087.2776094849
85: neval=337{'avg': -162211.6123875647, 'max': -37443.381572418366, 'min': -163087.2776094849} best=-163087.2776094849
86: neval=332{'avg': -163087.2776094849, 'max': -163087.2776094849, 'min': -163087.2776094849} best=-163087.2776094849
87: neval=360{'avg': -162511.65048326558, 'max': -19802.565430091265, 'min': -163087.2776094849} best=-163087.2776094849
88: neval=347{'avg': -162659.51833357295, 'max': -12314.429057714151, 'min': -163087.2776094849} best=-163087.2776094849
89: neval=353{'avg': -162748.82434271966, 'max': -86843.95752562644, 'min': -163087.2776094849} best=-163087.2776094849
90: neval=368{'avg': -162119.88078763624, 'max': -47992.28154875529, 'min': -163087.2776094849} best=-163087.2776094849
91: neval=369{'avg': -162373.6471103373, 'max': 1336.5588197436082, 'min': -163087.2776094849} best=-163087.2776094849
92: neval=370{'avg': -162041.8813903243, 'max': 87347.78814024359, 'min': -163087.2776094849} best=-163087.2776094849
93: neval=349{'avg': -162732.60643393995, 'max': -47618.88790593813, 'min': -163087.2776094849} best=-163087.2776094849
94: neval=335{'avg': -161666.71285694253, 'max': 11463.15437399338, 'min': -163087.2776094849} best=-163087.2776094849
95: neval=353{'avg': -162738.78604297957, 'max': -56916.72448110645, 'min': -163087.2776094849} best=-163087.2776094849
96: neval=364{'avg': -162588.31950001972, 'max': -87528.75955765993, 'min': -163087.2776094849} best=-163087.2776094849
97: neval=365{'avg': -162412.60583838404, 'max': -54178.18313069554, 'min': -163087.2776094849} best=-163087.2776094849
98: neval=355{'avg': -163087.2776094849, 'max': -163087.2776094849, 'min': -163087.2776094849} best=-163087.2776094849
99: neval=352{'avg': -162567.86964078626, 'max': -79129.69153032947, 'min': -163087.2776094849} best=-163087.2776094849


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 70, 72, 73]
best_individual.trans_facility = [53, 87, 125, 143, 162]
best_individual.unused_cities = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174}
best_individual.fitness.values = (-168002.45918951195,)