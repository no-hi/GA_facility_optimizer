局----------------------  実行情報  ----------------------
実行時間＝6161秒
個体数＝1400
合計世代数＝100
===============================
Total cost: -163967.63904819527
===============================
------------------------  前提  ------------------------

waste=kanen

ごみ量38位以内：
札幌市 (349353), 函館市 (66649), 旭川市 (64890), 苫小牧市 (42288), 釧路市 (38335), 帯広市 (35291), 千歳市 (25770), 小樽市 (25049), 江別市 (24906), 北見市 (20809), 室蘭市 (20448), 岩見沢市 (12638), 登別市 (11426), 北広島市 (10822), 石狩市 (9341), 音更町 (7531), 稚内市 (7127), 恵庭市 (6987), 伊達市 (6907), 網走市 (6299), 滝川市 (5831), 北斗市 (5150), 七飯町 (5008), 中標津町 (4837), 根室市 (4736), 幕別町 (4414), 新ひだか町 (4277), 釧路町 (4090), 美幌町 (4063), 白老町 (3395), 紋別市 (3325), 中札内村 (2807), 芽室町 (2638), 東神楽町 (2584), 余市町 (2489), 砂川市 (2419), せたな町 (2370), 遠軽町 (2357)

焼却施設数: 13
中継施設数: 15

輸送単価＝ 4.8 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='kanen'
unit ='t/year'

inc_size= [764443, 154560, 11775, 7127, 1166, 712, 439, 282, 255, 170, 110, 33, 24]
inc_facility = ['札幌市', '釧路市', '興部町', '稚内市', '枝幸町', '天塩町', '浜頓別町', '猿払村', '中川町', '雄武町', '中頓別町', '豊富町', '幌延町']
inc_blocks = [['南幌町', '札幌市', '江別市', '北広島市', '石狩市', '当別町', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町'], ['士別市', '名寄市', '剣淵町', '下川町', '紋別市', '佐呂間町', '遠軽町', '湧別町', '滝上町', '興部町', '西興部村'], ['美深町', '音威子府村', '中川町'], ['苫前町', '羽幌町', '初山別村', '遠別町', '天塩町'], ['稚内市'], ['猿払村'], ['浜頓別町'], ['中頓別町'], ['枝幸町'], ['豊富町'], ['幌延町'], ['雄武町'], ['斜里町', '本別町', '足寄町', '浦幌町', '釧路市', '釧路町', '厚岸町', '浜中町', '標茶町', '弟子屈町', '鶴居村', '白糠町']]

trans_size=[83618, 78454, 60024, 46307, 34734, 33062, 32045, 20448, 19659, 17415, 14290, 11426, 9414, 7726, 4736]
trans_facility = ['函館市', '旭川市', '帯広市', '苫小牧市', '千歳市', '美幌町', '小樽市', '室蘭市', '岩見沢市', '豊浦町', '新十津川町', '登別市', '新ひだか町', '中標津町', '根室市']
trans_blocks = [['根室市'], ['芦別市', '赤平市', '滝川市', '砂川市', '歌志内市', '奈井江町', '上砂川町', '浦臼町', '新十津川町', '妹背牛町', '秩父別町', '雨竜町', '北竜町', '沼田町', '留萌市', '増毛町', '小平町'], ['夕張市', '岩見沢市', '美唄市', '三笠市', '由仁町', '長沼町', '栗山町', '月形町', '新篠津村'], ['千歳市', '恵庭市', '厚真町', '安平町', '占冠村'], ['小樽市', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村'], ['苫小牧市', '白老町', 'むかわ町'], ['登別市'], ['日高町', '平取町', '新冠町', '浦河町', '様似町', 'えりも町', '新ひだか町'], ['函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '江差町', '上ノ国町', '厚沢部町', '乙部町'], ['島牧村', '寿都町', '黒松内町', '伊達市', '豊浦町', '壮瞥町', '洞爺湖町', '八雲町', '長万部町', '今金町', 'せたな町'], ['深川市', '旭川市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町', '和寒町', '幌加内町'], ['北見市', '網走市', '美幌町', '津別町', '清里町', '小清水町', '訓子府町', '置戸町', '大空町', '陸別町'], ['南富良野町', '帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町'], ['室蘭市'], ['別海町', '中標津町', '標津町', '羅臼町']]

arrows = [[['札幌市'], ['小樽市', '岩見沢市', '新ひだか町', '函館市', '新十津川町', '室蘭市', '苫小牧市', '登別市', '旭川市', '豊浦町', '千歳市']], [['釧路市'], ['美幌町', '根室市', '中標津町', '帯広市']]]


---------------------  エネルギー情報  ---------------------
[16767.114420062506, 226867.38898342339, -436548.30836948944, 28946.165917808223]

EL_direct: {'札幌市': 7503.434974208334, '釧路市': 3390.9531963125005, '興部町': 5423.189972958334, '稚内市': 0.0, '枝幸町': 0.0, '天塩町': 330.4174637291667, '浜頓別町': 0.0, '猿払村': 0.0, '中川町': 119.11881285416668, '雄武町': 0.0, '中頓別町': 0.0, '豊富町': 0.0, '幌延町': 0.0}
ED_inc: {'札幌市': -518622.9575359005, '釧路市': 33745.795446138785, '興部町': 21357.651571208775, '稚内市': 15144.566798995975, '枝幸町': 3785.7739254253656, '天塩町': 2529.3620589194475, '浜頓別町': 1691.0928798414677, '猿払村': 1163.6509218695028, '中川町': 1068.141545704223, '雄武町': 754.8096209267659, '中頓別町': 518.0804921426532, '豊富町': 180.0454620005565, '幌延町': 135.67844323768028}

EL_indirect: {'函館市': 82574.7988576593, '旭川市': 35288.89512690316, '帯広市': 26609.1886427835, '苫小牧市': 10141.120542156501, '千歳市': 5732.45048792, '美幌町': 18563.373663379996, '小樽市': 5947.0408341825005, '室蘭市': 8068.9939499520015, '岩見沢市': 3640.2421771495005, '豊浦町': 10840.559320391669, '新十津川町': 5481.854690682501, '登別市': 4112.243634096, '新ひだか町': 5330.977747872834, '中標津町': 2782.1158314300005, '根室市': 1753.533476864}
ED_trans: {'函館市': 5113.297972602739, '旭川市': 4797.515835616439, '帯広市': 3670.508712328767, '苫小牧市': 2831.7047671232876, '千歳市': 2124.007890410959, '美幌町': 2021.7639452054793, '小樽市': 1959.5736986301372, '室蘭市': 1250.409205479452, '岩見沢市': 1202.1613150684934, '豊浦町': 1064.9391780821918, '新十津川町': 873.8432876712329, '登別市': 698.7077260273974, '新ひだか町': 575.6725479452055, '中標津町': 472.45019178082197, '根室市': 289.6096438356164}

----------------------  輸送情報  ----------------------

direct 札幌市(1087/2094) t/day → receive from: 南幌町, 札幌市, 江別市, 北広島市, 石狩市, 当別町, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町
indirect 札幌市(1008/2094) t/day → receive from: 中継施設＝ 小樽市(32045) → receive from: 小樽市, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村
岩見沢市(19659) → receive from: 夕張市, 岩見沢市, 美唄市, 三笠市, 由仁町, 長沼町, 栗山町, 月形町, 新篠津村
新ひだか町(9414) → receive from: 日高町, 平取町, 新冠町, 浦河町, 様似町, えりも町, 新ひだか町
函館市(83618) → receive from: 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 江差町, 上ノ国町, 厚沢部町, 乙部町
新十津川町(14290) → receive from: 芦別市, 赤平市, 滝川市, 砂川市, 歌志内市, 奈井江町, 上砂川町, 浦臼町, 新十津川町, 妹背牛町, 秩父別町, 雨竜町, 北竜町, 沼田町, 留萌市, 増毛町, 小平町
室蘭市(20448) → receive from: 室蘭市
苫小牧市(46307) → receive from: 苫小牧市, 白老町, むかわ町
登別市(11426) → receive from: 登別市
旭川市(78454) → receive from: 深川市, 旭川市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町, 和寒町, 幌加内町
豊浦町(17415) → receive from: 島牧村, 寿都町, 黒松内町, 伊達市, 豊浦町, 壮瞥町, 洞爺湖町, 八雲町, 長万部町, 今金町, せたな町
千歳市(34734) → receive from: 千歳市, 恵庭市, 厚真町, 安平町, 占冠村
direct 釧路市(134/423) t/day → receive from: 斜里町, 本別町, 足寄町, 浦幌町, 釧路市, 釧路町, 厚岸町, 浜中町, 標茶町, 弟子屈町, 鶴居村, 白糠町
indirect 釧路市(289/423) t/day → receive from: 中継施設＝ 美幌町(33062) → receive from: 北見市, 網走市, 美幌町, 津別町, 清里町, 小清水町, 訓子府町, 置戸町, 大空町, 陸別町
根室市(4736) → receive from: 根室市
中標津町(7726) → receive from: 別海町, 中標津町, 標津町, 羅臼町
帯広市(60024) → receive from: 南富良野町, 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町
direct 興部町(32/32) t/day → receive from: 士別市, 名寄市, 剣淵町, 下川町, 紋別市, 佐呂間町, 遠軽町, 湧別町, 滝上町, 興部町, 西興部村
direct 稚内市(20/20) t/day → receive from: 稚内市
direct 枝幸町(3/3) t/day → receive from: 枝幸町
direct 天塩町(2/2) t/day → receive from: 苫前町, 羽幌町, 初山別村, 遠別町, 天塩町
direct 浜頓別町(1/1) t/day → receive from: 浜頓別町
direct 猿払村(1/1) t/day → receive from: 猿払村
direct 中川町(1/1) t/day → receive from: 美深町, 音威子府村, 中川町
direct 雄武町(0/0) t/day → receive from: 雄武町
direct 中頓別町(0/0) t/day → receive from: 中頓別町
direct 豊富町(0/0) t/day → receive from: 豊富町
direct 幌延町(0/0) t/day → receive from: 幌延町

----------------------  遺伝情報  ----------------------

個体数＝1400
世代数＝100
0: neval=1400{'avg': inf, 'max': inf, 'min': 147213.2355779459} best=147213.2355779459
1: neval=1120{'avg': inf, 'max': inf, 'min': 118990.03032114523} best=118990.03032114523
2: neval=1119{'avg': inf, 'max': inf, 'min': 118990.03032114523} best=118990.03032114523
3: neval=1101{'avg': inf, 'max': inf, 'min': 118990.03032114523} best=118990.03032114523
4: neval=1108{'avg': inf, 'max': inf, 'min': 91776.27286066177} best=91776.27286066177
5: neval=1086{'avg': inf, 'max': inf, 'min': 91776.27286066177} best=91776.27286066177
6: neval=1077{'avg': inf, 'max': inf, 'min': 49431.116437982695} best=49431.116437982695
7: neval=1090{'avg': inf, 'max': inf, 'min': 49431.116437982695} best=49431.116437982695
8: neval=1126{'avg': inf, 'max': inf, 'min': 34377.60542855087} best=34377.60542855087
9: neval=1111{'avg': inf, 'max': inf, 'min': 49431.116437982695} best=34377.60542855087
10: neval=1078{'avg': inf, 'max': inf, 'min': 28597.652560460658} best=28597.652560460658
11: neval=1115{'avg': inf, 'max': inf, 'min': 31292.90343872664} best=28597.652560460658
12: neval=1118{'avg': inf, 'max': inf, 'min': 28442.17166875883} best=28442.17166875883
13: neval=1112{'avg': inf, 'max': inf, 'min': 28442.17166875883} best=28442.17166875883
14: neval=1121{'avg': inf, 'max': inf, 'min': 10883.944278184146} best=10883.944278184146
15: neval=1116{'avg': inf, 'max': inf, 'min': -536.3109822160332} best=-536.3109822160332
16: neval=1080{'avg': inf, 'max': inf, 'min': -3063.15947017285} best=-3063.15947017285
17: neval=1108{'avg': 55597.79450183449, 'max': 429551.2780459247, 'min': -8918.275255710192} best=-8918.275255710192
18: neval=1144{'avg': inf, 'max': inf, 'min': -8947.117288079124} best=-8947.117288079124
19: neval=1100{'avg': 36627.547926602034, 'max': 384337.3931463622, 'min': -23478.29078360906} best=-23478.29078360906
20: neval=1130{'avg': 30264.62490449453, 'max': 334823.14568565204, 'min': -24156.736297261086} best=-24156.736297261086
21: neval=1109{'avg': 23431.604584935532, 'max': 538775.2788330433, 'min': -35752.64670373422} best=-35752.64670373422
22: neval=1031{'avg': 16211.781051811735, 'max': 556294.6250712507, 'min': -77500.64684498479} best=-77500.64684498479
23: neval=1089{'avg': 10346.511704894312, 'max': 316259.85640663694, 'min': -46726.2277663828} best=-77500.64684498479
24: neval=1108{'avg': 4984.425316043229, 'max': 398836.5662972734, 'min': -61447.72430570253} best=-77500.64684498479
25: neval=1118{'avg': -3581.7605909968997, 'max': 338743.6124415082, 'min': -65790.11885057375} best=-77500.64684498479
26: neval=1120{'avg': -10460.58570611458, 'max': 430346.3413392676, 'min': -73877.95396228037} best=-77500.64684498479
27: neval=1093{'avg': -19108.65487645445, 'max': 342368.51537625917, 'min': -73877.95396228037} best=-77500.64684498479
28: neval=1079{'avg': -28503.15487185675, 'max': 202382.33245316567, 'min': -77644.72394517975} best=-77644.72394517975
29: neval=1129{'avg': -34399.98373138743, 'max': 358201.8670807985, 'min': -84443.77892713061} best=-84443.77892713061
30: neval=1080{'avg': -44670.75898695231, 'max': 398873.44301720295, 'min': -80916.28070718398} best=-84443.77892713061
31: neval=1103{'avg': -54304.98196768836, 'max': 280862.5638930227, 'min': -88349.69705254152} best=-88349.69705254152
32: neval=1111{'avg': -63493.10278557708, 'max': 201540.8897509628, 'min': -90638.7037186988} best=-90638.7037186988
33: neval=1111{'avg': -72057.54353591292, 'max': 144236.37040259258, 'min': -94769.46655178914} best=-94769.46655178914
34: neval=1104{'avg': -77472.67972516653, 'max': 316085.1392229921, 'min': -97244.33387136522} best=-97244.33387136522
35: neval=1075{'avg': -82411.54581790134, 'max': 284441.6817417904, 'min': -100272.89899262498} best=-100272.89899262498
36: neval=1127{'avg': -85571.29947700822, 'max': 222860.5356411882, 'min': -103765.32077355188} best=-103765.32077355188
37: neval=1111{'avg': -89723.80459170317, 'max': 171763.5115666778, 'min': -109023.9842536299} best=-109023.9842536299
38: neval=1085{'avg': -92087.70133816797, 'max': 219240.83605995314, 'min': -111832.33020517693} best=-111832.33020517693
39: neval=1115{'avg': -96622.55773679705, 'max': 139400.739041309, 'min': -120490.12975984547} best=-120490.12975984547
40: neval=1079{'avg': -99551.22241807324, 'max': 266423.9428476725, 'min': -125099.60871374035} best=-125099.60871374035
41: neval=1137{'avg': -102142.89772954115, 'max': 389390.5345227873, 'min': -123750.88116088344} best=-125099.60871374035
42: neval=1073{'avg': -105457.74575641679, 'max': 240504.680501939, 'min': -128663.2690977609} best=-128663.2690977609
43: neval=1102{'avg': -109118.86302717541, 'max': 194579.0809383549, 'min': -132097.02747056814} best=-132097.02747056814
44: neval=1103{'avg': -114206.41562181473, 'max': 189654.39508914927, 'min': -133372.30037222558} best=-133372.30037222558
45: neval=1121{'avg': -118069.07683686508, 'max': 222980.0645977423, 'min': -132953.54497630813} best=-133372.30037222558
46: neval=1105{'avg': -123167.43567464506, 'max': 100899.50081526393, 'min': -135321.99993422226} best=-135321.99993422226
47: neval=1088{'avg': -126327.26932663673, 'max': 171783.6809159783, 'min': -135435.26591519252} best=-135435.26591519252
48: neval=1083{'avg': -129241.95431762231, 'max': 96452.49138076733, 'min': -137017.72690867726} best=-137017.72690867726
49: neval=1098{'avg': -130891.30860822716, 'max': 154944.8732942963, 'min': -137531.42212453167} best=-137531.42212453167
50: neval=1095{'avg': -131976.82323684913, 'max': 141809.48512671868, 'min': -139304.28593597453} best=-139304.28593597453
51: neval=1101{'avg': -133389.67508206275, 'max': 131725.27188765438, 'min': -139062.63133359206} best=-139304.28593597453
52: neval=1084{'avg': -135297.77915557695, 'max': 50580.81923025119, 'min': -140144.85745689154} best=-140144.85745689154
53: neval=1110{'avg': -135986.97285240272, 'max': 239513.95714437164, 'min': -140261.47080382574} best=-140261.47080382574
54: neval=1114{'avg': -136750.7414028182, 'max': 175866.30039578045, 'min': -141533.16196257717} best=-141533.16196257717
55: neval=1133{'avg': -137291.92326245247, 'max': 132220.94379894665, 'min': -147491.22423915516} best=-147491.22423915516
56: neval=1078{'avg': -138117.8109156473, 'max': 237530.27730499435, 'min': -147491.22423915516} best=-147491.22423915516
57: neval=1123{'avg': -138968.9119947758, 'max': 180080.66381246585, 'min': -150383.4411990529} best=-150383.4411990529
58: neval=1088{'avg': -139407.8441495831, 'max': 196227.09585980597, 'min': -150513.363112493} best=-150513.363112493
59: neval=1093{'avg': -140985.3031486642, 'max': 171856.13545023566, 'min': -151758.06985926046} best=-151758.06985926046
60: neval=1115{'avg': -144153.25854318312, 'max': 145957.18361368816, 'min': -153078.2578828463} best=-153078.2578828463
61: neval=1129{'avg': -145535.57206475685, 'max': 148331.77093044372, 'min': -153078.2578828463} best=-153078.2578828463
62: neval=1088{'avg': -149614.36270926514, 'max': 69016.40623417564, 'min': -153195.865172831} best=-153195.865172831
63: neval=1105{'avg': -150159.20391894624, 'max': 186611.3679886245, 'min': -153714.53532543458} best=-153714.53532543458
64: neval=1105{'avg': -150467.499534277, 'max': 174472.84159134942, 'min': -154090.84201323363} best=-154090.84201323363
65: neval=1098{'avg': -150157.74813398105, 'max': 204538.1145877227, 'min': -154090.84201323363} best=-154090.84201323363
66: neval=1107{'avg': -151197.82295756447, 'max': 184920.10238077043, 'min': -154090.84201323363} best=-154090.84201323363
67: neval=1105{'avg': -151520.0024625122, 'max': 274108.1372048784, 'min': -154090.84201323363} best=-154090.84201323363
68: neval=1084{'avg': -152581.17943571947, 'max': 77810.15466389227, 'min': -154090.84201323363} best=-154090.84201323363
69: neval=1091{'avg': -151743.91220652426, 'max': 240509.84922888936, 'min': -154090.84201323363} best=-154090.84201323363
70: neval=1105{'avg': -151223.81183113082, 'max': 183234.1287943786, 'min': -154090.84201323363} best=-154090.84201323363
71: neval=1150{'avg': -151638.5196829092, 'max': 381757.2488258026, 'min': -154090.84201323363} best=-154090.84201323363
72: neval=1102{'avg': -151247.63853398451, 'max': 245826.04245977302, 'min': -154090.84201323363} best=-154090.84201323363
73: neval=1099{'avg': -152140.84868623695, 'max': 193270.09743527236, 'min': -154090.84201323363} best=-154090.84201323363
74: neval=1134{'avg': -151450.81932210538, 'max': 165464.6057170226, 'min': -154090.84201323363} best=-154090.84201323363
75: neval=1102{'avg': -152200.24348531818, 'max': 168200.87102923117, 'min': -154090.84201323363} best=-154090.84201323363
76: neval=1107{'avg': -151289.67141946952, 'max': 424910.3802624802, 'min': -154090.84201323363} best=-154090.84201323363
77: neval=1093{'avg': -151689.3979206602, 'max': 263151.1866352549, 'min': -154090.84201323363} best=-154090.84201323363
78: neval=1104{'avg': -153120.9405624585, 'max': 217314.1627734662, 'min': -154090.84201323363} best=-154090.84201323363
79: neval=1122{'avg': -152596.99151432855, 'max': 215213.2606413173, 'min': -154090.84201323363} best=-154090.84201323363
80: neval=1105{'avg': -153293.54275759996, 'max': 113694.55072613027, 'min': -154090.84201323363} best=-154090.84201323363
81: neval=1086{'avg': -152979.70820950466, 'max': 153567.12077231077, 'min': -154090.84201323363} best=-154090.84201323363
82: neval=1109{'avg': -152573.08071739177, 'max': 157143.78121669154, 'min': -154090.84201323363} best=-154090.84201323363
83: neval=1090{'avg': -152913.78047965787, 'max': 199386.0726120004, 'min': -154090.84201323363} best=-154090.84201323363
84: neval=1122{'avg': -152794.71464982993, 'max': 101525.80856530748, 'min': -154090.84201323363} best=-154090.84201323363
85: neval=1086{'avg': -152711.03920221797, 'max': 96639.5165591971, 'min': -154090.84201323363} best=-154090.84201323363
86: neval=1073{'avg': -151469.32707309275, 'max': 215139.9647206391, 'min': -154090.84201323363} best=-154090.84201323363
87: neval=1114{'avg': -153429.97300910775, 'max': 94759.9646835002, 'min': -154090.84201323363} best=-154090.84201323363
88: neval=1096{'avg': -152460.3931535989, 'max': 150522.6450492209, 'min': -154090.84201323363} best=-154090.84201323363
89: neval=1104{'avg': -152702.5849400176, 'max': 156073.15890983315, 'min': -154090.84201323363} best=-154090.84201323363
90: neval=1079{'avg': -151954.24946052997, 'max': 223027.72775240606, 'min': -154090.84201323363} best=-154090.84201323363
91: neval=1134{'avg': -152442.02325990627, 'max': 193688.53298397933, 'min': -154090.84201323363} best=-154090.84201323363
92: neval=1096{'avg': -153176.12315415943, 'max': 174060.8186354311, 'min': -154090.84201323363} best=-154090.84201323363
93: neval=1101{'avg': -152502.96200831374, 'max': 154347.02590639007, 'min': -154090.84201323363} best=-154090.84201323363
94: neval=1087{'avg': -152349.1396455576, 'max': 196033.54953334888, 'min': -155764.3788484929} best=-155764.3788484929
95: neval=1112{'avg': -153200.75353301305, 'max': 78063.75953573704, 'min': -155764.3788484929} best=-155764.3788484929
96: neval=1093{'avg': -153070.0420716786, 'max': 150323.4489264264, 'min': -158717.39939434736} best=-158717.39939434736
97: neval=1112{'avg': -153093.78473682769, 'max': 85189.5415719914, 'min': -158717.39939434736} best=-158717.39939434736
98: neval=1113{'avg': -153838.03943340643, 'max': 93264.99975137187, 'min': -158717.39939434736} best=-158717.39939434736
99: neval=1126{'avg': -153506.3395534638, 'max': 98610.86754195095, 'min': -158717.39939434736} best=-158717.39939434736


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 139, 108, 117, 118, 119, 120, 121, 122, 123, 124, 141, 162]
best_individual.trans_facility = [170, 18, 1, 26, 32, 53, 54, 69, 70, 56, 87, 128, 143, 52, 172]
best_individual.unused_cities = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174}
best_individual.fitness.values = (-163967.63904819527,)