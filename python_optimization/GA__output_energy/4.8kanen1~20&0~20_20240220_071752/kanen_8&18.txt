局----------------------  実行情報  ----------------------
実行時間＝5064秒
個体数＝1300
合計世代数＝100
=============================
Total cost: -149472.203857341
=============================
------------------------  前提  ------------------------

waste=kanen

ごみ量36位以内：
札幌市 (349353), 函館市 (66649), 旭川市 (64890), 苫小牧市 (42288), 釧路市 (38335), 帯広市 (35291), 千歳市 (25770), 小樽市 (25049), 江別市 (24906), 北見市 (20809), 室蘭市 (20448), 岩見沢市 (12638), 登別市 (11426), 北広島市 (10822), 石狩市 (9341), 音更町 (7531), 稚内市 (7127), 恵庭市 (6987), 伊達市 (6907), 網走市 (6299), 滝川市 (5831), 北斗市 (5150), 七飯町 (5008), 中標津町 (4837), 根室市 (4736), 幕別町 (4414), 新ひだか町 (4277), 釧路町 (4090), 美幌町 (4063), 白老町 (3395), 紋別市 (3325), 中札内村 (2807), 芽室町 (2638), 東神楽町 (2584), 余市町 (2489), 砂川市 (2419)

焼却施設数: 8
中継施設数: 18

輸送単価＝ 4.8 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='kanen'
unit ='t/year'

inc_size= [782114, 95858, 55283, 4414, 1785, 788, 528, 326]
inc_facility = ['札幌市', '釧路市', '帯広市', '幕別町', '池田町', '豊頃町', '白糠町', '浦幌町']
inc_blocks = [['南幌町', '札幌市', '江別市', '北広島市', '石狩市', '当別町', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町', '初山別村'], ['南富良野町', '占冠村', '帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町'], ['幕別町'], ['池田町', '本別町', '足寄町', '陸別町'], ['えりも町', '豊頃町'], ['浦幌町'], ['斜里町', '釧路市', '釧路町', '厚岸町', '標茶町', '弟子屈町', '鶴居村'], ['白糠町']]

trans_size=[76201, 73757, 46307, 36262, 34187, 32045, 20448, 19659, 16543, 13154, 11426, 10761, 10694, 9861, 8879, 7955, 6721, 5152]
trans_facility = ['旭川市', '函館市', '苫小牧市', '美幌町', '千歳市', '小樽市', '室蘭市', '岩見沢市', '滝川市', '別海町', '登別市', '名寄市', '豊浦町', '七飯町', '新ひだか町', '稚内市', '長万部町', '中札内村']
trans_blocks = [['夕張市', '岩見沢市', '美唄市', '三笠市', '由仁町', '長沼町', '栗山町', '月形町', '新篠津村'], ['芦別市', '赤平市', '滝川市', '砂川市', '歌志内市', '深川市', '奈井江町', '上砂川町', '浦臼町', '新十津川町', '妹背牛町', '秩父別町', '雨竜町', '北竜町', '沼田町', '留萌市', '増毛町', '小平町'], ['千歳市', '恵庭市', '厚真町', '安平町'], ['小樽市', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村'], ['島牧村', '寿都町', '黒松内町', '八雲町', '長万部町', '今金町', 'せたな町'], ['室蘭市'], ['苫小牧市', '白老町', 'むかわ町'], ['登別市'], ['伊達市', '豊浦町', '壮瞥町', '洞爺湖町'], ['日高町', '平取町', '新冠町', '浦河町', '様似町', '新ひだか町'], ['函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町'], ['士別市', '名寄市', '剣淵町', '下川町', '美深町', '音威子府村', '中川町', '苫前町', '羽幌町', '中頓別町', '枝幸町', '紋別市', '滝上町', '興部町', '西興部村', '雄武町'], ['旭川市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町', '和寒町', '幌加内町'], ['七飯町', '鹿部町', '森町', '江差町', '上ノ国町', '厚沢部町', '乙部町'], ['遠別町', '天塩町', '稚内市', '猿払村', '浜頓別町', '豊富町', '幌延町'], ['北見市', '網走市', '美幌町', '津別町', '清里町', '小清水町', '訓子府町', '置戸町', '佐呂間町', '遠軽町', '湧別町', '大空町'], ['中札内村', '更別村', '大樹町', '広尾町'], ['浜中町', '根室市', '別海町', '中標津町', '標津町', '羅臼町']]

arrows = [[['札幌市'], ['小樽市', '岩見沢市', '新ひだか町', '滝川市', '函館市', '七飯町', '長万部町', '室蘭市', '苫小牧市', '登別市', '旭川市', '豊浦町', '名寄市', '千歳市', '稚内市']], [['帯広市'], ['中札内村']], [['釧路市'], ['美幌町', '別海町']]]


---------------------  エネルギー情報  ---------------------
[12951.969392645837, 222627.38269982586, -411958.5911278949, 26907.03517808219]

EL_direct: {'札幌市': 7566.934309458334, '釧路市': 1991.5372311250003, '帯広市': 2512.533849854167, '幕別町': 0.0, '池田町': 384.09677366666676, '豊頃町': 496.8672285416667, '白糠町': 0.0, '浦幌町': 0.0}
ED_inc: {'札幌市': -530611.5378258855, '釧路市': 49306.828089426446, '帯広市': 47292.24947009012, '幕別町': 10690.090267626625, '池田町': 5324.498454259212, '豊頃町': 2749.824377558609, '白糠町': 1973.533764116069, '浦幌町': 1315.9222749135129}

EL_indirect: {'旭川市': 33845.01212142266, '函館市': 70446.08183088232, '苫小牧市': 10141.120542156501, '美幌町': 21594.110035734164, '千歳市': 5335.555729497501, '小樽市': 5947.0408341825005, '室蘭市': 8068.9939499520015, '岩見沢市': 3640.2421771495005, '滝川市': 6532.673770146334, '別海町': 7197.846356683667, '登別市': 4112.243634096, '名寄市': 11484.524451031668, '豊浦町': 4638.077371243334, '七飯町': 10522.230859616666, '新ひだか町': 4779.048490263667, '稚内市': 8302.395277280002, '長万部町': 4915.316375127167, '中札内村': 1124.8688933603335}
ED_trans: {'旭川市': 4659.743342465754, '函館市': 4510.291068493151, '苫小牧市': 2831.7047671232876, '美幌町': 2217.446136986301, '千歳市': 2090.5584657534246, '小樽市': 1959.5736986301372, '室蘭市': 1250.409205479452, '岩見沢市': 1202.1613150684934, '滝川市': 1011.6157808219178, '別海町': 804.3761095890412, '登別市': 698.7077260273974, '名寄市': 658.0425205479453, '豊浦町': 653.9454246575343, '七飯町': 603.0069041095891, '新ひだか町': 542.9569315068493, '稚内市': 486.453698630137, '長万部町': 410.9937534246576, '中札内村': 315.04832876712334}

----------------------  輸送情報  ----------------------

direct 札幌市(1087/2143) t/day → receive from: 南幌町, 札幌市, 江別市, 北広島市, 石狩市, 当別町, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町, 初山別村
indirect 札幌市(1056/2143) t/day → receive from: 中継施設＝ 小樽市(32045) → receive from: 小樽市, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村
岩見沢市(19659) → receive from: 夕張市, 岩見沢市, 美唄市, 三笠市, 由仁町, 長沼町, 栗山町, 月形町, 新篠津村
新ひだか町(8879) → receive from: 日高町, 平取町, 新冠町, 浦河町, 様似町, 新ひだか町
滝川市(16543) → receive from: 芦別市, 赤平市, 滝川市, 砂川市, 歌志内市, 深川市, 奈井江町, 上砂川町, 浦臼町, 新十津川町, 妹背牛町, 秩父別町, 雨竜町, 北竜町, 沼田町, 留萌市, 増毛町, 小平町
函館市(73757) → receive from: 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町
七飯町(9861) → receive from: 七飯町, 鹿部町, 森町, 江差町, 上ノ国町, 厚沢部町, 乙部町
長万部町(6721) → receive from: 島牧村, 寿都町, 黒松内町, 八雲町, 長万部町, 今金町, せたな町
室蘭市(20448) → receive from: 室蘭市
苫小牧市(46307) → receive from: 苫小牧市, 白老町, むかわ町
登別市(11426) → receive from: 登別市
旭川市(76201) → receive from: 旭川市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町, 和寒町, 幌加内町
豊浦町(10694) → receive from: 伊達市, 豊浦町, 壮瞥町, 洞爺湖町
名寄市(10761) → receive from: 士別市, 名寄市, 剣淵町, 下川町, 美深町, 音威子府村, 中川町, 苫前町, 羽幌町, 中頓別町, 枝幸町, 紋別市, 滝上町, 興部町, 西興部村, 雄武町
千歳市(34187) → receive from: 千歳市, 恵庭市, 厚真町, 安平町
稚内市(7955) → receive from: 遠別町, 天塩町, 稚内市, 猿払村, 浜頓別町, 豊富町, 幌延町
direct 釧路市(127/263) t/day → receive from: 斜里町, 釧路市, 釧路町, 厚岸町, 標茶町, 弟子屈町, 鶴居村
indirect 釧路市(135/263) t/day → receive from: 中継施設＝ 美幌町(36262) → receive from: 北見市, 網走市, 美幌町, 津別町, 清里町, 小清水町, 訓子府町, 置戸町, 佐呂間町, 遠軽町, 湧別町, 大空町
別海町(13154) → receive from: 浜中町, 根室市, 別海町, 中標津町, 標津町, 羅臼町
direct 帯広市(137/151) t/day → receive from: 南富良野町, 占冠村, 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町
indirect 帯広市(14/151) t/day → receive from: 中継施設＝ 中札内村(5152) → receive from: 中札内村, 更別村, 大樹町, 広尾町
direct 幕別町(12/12) t/day → receive from: 幕別町
direct 池田町(5/5) t/day → receive from: 池田町, 本別町, 足寄町, 陸別町
direct 豊頃町(2/2) t/day → receive from: えりも町, 豊頃町
direct 白糠町(1/1) t/day → receive from: 白糠町
direct 浦幌町(1/1) t/day → receive from: 浦幌町

----------------------  遺伝情報  ----------------------

個体数＝1300
世代数＝100
0: neval=1300{'avg': inf, 'max': inf, 'min': -30317.104307784968} best=-30317.104307784968
1: neval=1051{'avg': inf, 'max': inf, 'min': -55671.5337200903} best=-55671.5337200903
2: neval=1041{'avg': inf, 'max': inf, 'min': -56515.20137050649} best=-56515.20137050649
3: neval=1050{'avg': inf, 'max': inf, 'min': -57443.57777911544} best=-57443.57777911544
4: neval=1016{'avg': inf, 'max': inf, 'min': -58371.72628848433} best=-58371.72628848433
5: neval=1039{'avg': inf, 'max': inf, 'min': -58371.72628848433} best=-58371.72628848433
6: neval=1030{'avg': inf, 'max': inf, 'min': -73159.50554843013} best=-73159.50554843013
7: neval=996{'avg': inf, 'max': inf, 'min': -73159.50554843013} best=-73159.50554843013
8: neval=1054{'avg': inf, 'max': inf, 'min': -79858.01728463502} best=-79858.01728463502
9: neval=1030{'avg': inf, 'max': inf, 'min': -78968.85339921972} best=-79858.01728463502
10: neval=1031{'avg': inf, 'max': inf, 'min': -78968.85339921972} best=-79858.01728463502
11: neval=1037{'avg': inf, 'max': inf, 'min': -78968.85339921972} best=-79858.01728463502
12: neval=1009{'avg': inf, 'max': inf, 'min': -85906.14304590915} best=-85906.14304590915
13: neval=995{'avg': -46824.84441847903, 'max': 511385.8314429035, 'min': -95102.7458819052} best=-95102.7458819052
14: neval=1015{'avg': inf, 'max': inf, 'min': -95102.7458819052} best=-95102.7458819052
15: neval=1011{'avg': inf, 'max': inf, 'min': -94870.81402854732} best=-95102.7458819052
16: neval=1026{'avg': -67464.26095185145, 'max': 213003.05151287385, 'min': -100524.07550307475} best=-100524.07550307475
17: neval=1036{'avg': -69543.91297058083, 'max': 512029.3363272172, 'min': -98586.21240485094} best=-100524.07550307475
18: neval=1035{'avg': -75851.52058108756, 'max': 291615.58009127376, 'min': -98586.21240485094} best=-100524.07550307475
19: neval=1025{'avg': -79756.38984125537, 'max': 255904.12793884045, 'min': -98733.13345836461} best=-100524.07550307475
20: neval=1020{'avg': -81623.38308522568, 'max': 181476.94612571356, 'min': -100521.78363660915} best=-100524.07550307475
21: neval=1046{'avg': -83345.68817737528, 'max': 403801.4994138456, 'min': -104319.01278691876} best=-104319.01278691876
22: neval=1002{'avg': -88612.92303011946, 'max': 198806.1037229859, 'min': -118752.15195140762} best=-118752.15195140762
23: neval=1019{'avg': -89781.15633911232, 'max': 215714.0356326269, 'min': -118752.15195140762} best=-118752.15195140762
24: neval=1045{'avg': -94430.86183111183, 'max': 35244.03591624063, 'min': -118752.15195140762} best=-118752.15195140762
25: neval=1020{'avg': -97495.0618859699, 'max': 251587.6257870116, 'min': -118752.15195140762} best=-118752.15195140762
26: neval=1003{'avg': -99730.11521391507, 'max': 235792.35334207854, 'min': -118130.67564892434} best=-118752.15195140762
27: neval=1033{'avg': -101588.16843465727, 'max': 230347.19302729066, 'min': -114638.03108553585} best=-118752.15195140762
28: neval=1012{'avg': -105145.36081562634, 'max': 29527.817451695035, 'min': -119845.5918826249} best=-119845.5918826249
29: neval=1049{'avg': -105933.22635417711, 'max': 101346.67363158555, 'min': -123921.26608715909} best=-123921.26608715909
30: neval=1022{'avg': -108799.25935481432, 'max': 140978.61922898248, 'min': -126701.47444447824} best=-126701.47444447824
31: neval=1000{'avg': -111142.21373361848, 'max': 93615.43076940005, 'min': -129159.39993446296} best=-129159.39993446296
32: neval=1040{'avg': -113081.61952771038, 'max': 134415.3291201562, 'min': -129159.39993446296} best=-129159.39993446296
33: neval=1062{'avg': -114663.8114050104, 'max': 66261.8741055513, 'min': -131385.33325138263} best=-131385.33325138263
34: neval=1024{'avg': -116665.83585397624, 'max': 211952.3851474026, 'min': -131412.94663614975} best=-131412.94663614975
35: neval=1032{'avg': -118647.93034681323, 'max': 67111.64108109183, 'min': -131573.9836714972} best=-131573.9836714972
36: neval=1041{'avg': -120118.05737711082, 'max': 173250.30436936184, 'min': -135691.72929044027} best=-135691.72929044027
37: neval=1043{'avg': -121435.2584086323, 'max': 69461.91050290028, 'min': -135691.72929044027} best=-135691.72929044027
38: neval=989{'avg': -123939.51858583327, 'max': 28629.392689099703, 'min': -135627.6201985149} best=-135691.72929044027
39: neval=1017{'avg': -124183.16206506807, 'max': 172837.94879538316, 'min': -135627.6201985149} best=-135691.72929044027
40: neval=1038{'avg': -125310.29050535537, 'max': 91703.51081893162, 'min': -133068.47036679252} best=-135691.72929044027
41: neval=1032{'avg': -126615.54191752747, 'max': 44096.40090221929, 'min': -134004.5346101664} best=-135691.72929044027
42: neval=1013{'avg': -127115.90508465093, 'max': 76874.17308996529, 'min': -137174.58465644845} best=-137174.58465644845
43: neval=1064{'avg': -128595.4175304624, 'max': -1866.620901482238, 'min': -138639.91644259458} best=-138639.91644259458
44: neval=1018{'avg': -129226.54691971134, 'max': 12363.770880268428, 'min': -138639.91644259458} best=-138639.91644259458
45: neval=1048{'avg': -128746.16624302445, 'max': 147961.25962136502, 'min': -137836.5307730276} best=-138639.91644259458
46: neval=1011{'avg': -130011.77359846652, 'max': 95224.47648268788, 'min': -137836.5307730276} best=-138639.91644259458
47: neval=1030{'avg': -130026.76406737983, 'max': 118424.34289178887, 'min': -139983.5403850248} best=-139983.5403850248
48: neval=1049{'avg': -130650.11379864239, 'max': 39153.37309805728, 'min': -138216.68382176402} best=-139983.5403850248
49: neval=1007{'avg': -132243.88530216305, 'max': 88967.78551737695, 'min': -140048.3280442443} best=-140048.3280442443
50: neval=1034{'avg': -132372.7310203471, 'max': 161240.09727107093, 'min': -140918.95383302163} best=-140918.95383302163
51: neval=1015{'avg': -134859.88945538647, 'max': 122513.22186396286, 'min': -140182.97781844105} best=-140918.95383302163
52: neval=982{'avg': -136770.48590505432, 'max': 87239.91941591474, 'min': -142381.33920443678} best=-142381.33920443678
53: neval=1035{'avg': -138034.74219002365, 'max': 82476.97928254746, 'min': -141596.6857356904} best=-142381.33920443678
54: neval=1010{'avg': -139318.5165507296, 'max': -21991.76197382137, 'min': -141715.9627501986} best=-142381.33920443678
55: neval=1042{'avg': -138972.60685906952, 'max': 114865.44952209658, 'min': -142260.90978025534} best=-142381.33920443678
56: neval=1020{'avg': -139759.7051634352, 'max': 76437.15771658262, 'min': -142381.33920443678} best=-142381.33920443678
57: neval=1054{'avg': -140265.36832850668, 'max': 34613.71069685485, 'min': -142890.970081823} best=-142890.970081823
58: neval=1019{'avg': -140290.62869637358, 'max': 108750.1094768391, 'min': -142890.970081823} best=-142890.970081823
59: neval=1014{'avg': -141442.84538931138, 'max': -16593.813041449248, 'min': -142890.970081823} best=-142890.970081823
60: neval=1035{'avg': -141662.43620785483, 'max': 58300.564495874176, 'min': -143063.87551521408} best=-143063.87551521408
61: neval=1009{'avg': -140740.7570429676, 'max': 135445.6406572521, 'min': -143110.3201025981} best=-143110.3201025981
62: neval=1074{'avg': -141638.29409482292, 'max': 40860.39973042536, 'min': -143873.17440184267} best=-143873.17440184267
63: neval=1039{'avg': -141502.67245043916, 'max': 194186.40555699056, 'min': -143873.17440184267} best=-143873.17440184267
64: neval=1018{'avg': -142376.39509743068, 'max': 62011.21615234984, 'min': -143873.17440184267} best=-143873.17440184267
65: neval=1024{'avg': -142510.1318240177, 'max': 98026.25798369989, 'min': -143873.17440184267} best=-143873.17440184267
66: neval=1050{'avg': -142239.53805210392, 'max': 122532.20267821602, 'min': -143873.17440184267} best=-143873.17440184267
67: neval=1056{'avg': -142606.26715087722, 'max': 105063.67308265792, 'min': -143873.17440184267} best=-143873.17440184267
68: neval=1038{'avg': -142920.76014243122, 'max': 37486.70697144144, 'min': -143919.7094512564} best=-143919.7094512564
69: neval=1019{'avg': -143093.14519060074, 'max': 418255.92330968654, 'min': -143919.7094512564} best=-143919.7094512564
70: neval=1008{'avg': -143448.282599853, 'max': 37598.97706584511, 'min': -143919.7094512564} best=-143919.7094512564
71: neval=1006{'avg': -141936.47220070308, 'max': 47576.83640128518, 'min': -143919.7094512564} best=-143919.7094512564
72: neval=1047{'avg': -142174.56279224006, 'max': 86450.47843473754, 'min': -144055.64980417638} best=-144055.64980417638
73: neval=1012{'avg': -142374.77422661404, 'max': 97901.04218648889, 'min': -147038.92519622942} best=-147038.92519622942
74: neval=1002{'avg': -143504.6372199626, 'max': 37895.118073838436, 'min': -147038.92519622942} best=-147038.92519622942
75: neval=1035{'avg': -143445.00362007468, 'max': 3280.3196282430763, 'min': -147038.92519622942} best=-147038.92519622942
76: neval=1034{'avg': -143411.18566567343, 'max': 168041.8970591765, 'min': -147038.92519622942} best=-147038.92519622942
77: neval=1050{'avg': -143727.20132406318, 'max': 200528.4399496714, 'min': -147038.92519622942} best=-147038.92519622942
78: neval=1026{'avg': -144969.44498393027, 'max': 7201.791639004554, 'min': -147038.92519622942} best=-147038.92519622942
79: neval=992{'avg': -146144.0683659954, 'max': 155028.87623419336, 'min': -147039.0156582591} best=-147039.0156582591
80: neval=1013{'avg': -145656.45796251856, 'max': 62377.50236534167, 'min': -147039.0156582591} best=-147039.0156582591
81: neval=1027{'avg': -146776.80500369385, 'max': -15643.29418169177, 'min': -147039.0156582591} best=-147039.0156582591
82: neval=991{'avg': -145853.2900846775, 'max': 114957.11898072287, 'min': -147039.0156582591} best=-147039.0156582591
83: neval=1042{'avg': -146174.38823848224, 'max': 139574.53402511263, 'min': -147039.0156582591} best=-147039.0156582591
84: neval=1022{'avg': -145967.02583671417, 'max': 36071.30774066695, 'min': -147039.0156582591} best=-147039.0156582591
85: neval=1011{'avg': -146635.72861554404, 'max': 62222.13735954267, 'min': -147039.0156582591} best=-147039.0156582591
86: neval=1037{'avg': -145504.86922841557, 'max': 74898.29703384692, 'min': -147039.0156582591} best=-147039.0156582591
87: neval=1022{'avg': -146670.63917762818, 'max': -16893.632519180563, 'min': -147039.0156582591} best=-147039.0156582591
88: neval=1011{'avg': -146441.75716696781, 'max': 137352.13823431198, 'min': -147039.0156582591} best=-147039.0156582591
89: neval=1040{'avg': -146115.64466979963, 'max': 54648.171003876705, 'min': -147039.0156582591} best=-147039.0156582591
90: neval=1037{'avg': -146263.0860174938, 'max': 118097.61196531236, 'min': -147039.0156582591} best=-147039.0156582591
91: neval=1043{'avg': -146044.4411595883, 'max': -2259.667747887979, 'min': -147039.0156582591} best=-147039.0156582591
92: neval=1000{'avg': -146459.29222721612, 'max': 35850.109327452345, 'min': -147039.0156582591} best=-147039.0156582591
93: neval=1034{'avg': -146106.55767614502, 'max': 90739.31851280428, 'min': -147039.0156582591} best=-147039.0156582591
94: neval=1048{'avg': -145693.7810769482, 'max': 254177.91284215357, 'min': -147039.0156582591} best=-147039.0156582591
95: neval=1032{'avg': -145685.72413300065, 'max': 107330.40040122117, 'min': -147039.0156582591} best=-147039.0156582591
96: neval=1030{'avg': -146332.9558025734, 'max': 40223.19691705646, 'min': -147039.0156582591} best=-147039.0156582591
97: neval=1028{'avg': -146592.35924446495, 'max': 250207.3278924507, 'min': -147039.0156582591} best=-147039.0156582591
98: neval=1024{'avg': -146290.02854079584, 'max': -7291.252235845193, 'min': -147039.0156582591} best=-147039.0156582591
99: neval=991{'avg': -146300.14467184822, 'max': 39994.1131694356, 'min': -147039.0156582591} best=-147039.0156582591


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 143, 155, 156, 157, 161, 162, 169]
best_individual.trans_facility = [1, 6, 26, 32, 80, 52, 53, 54, 56, 69, 70, 89, 87, 76, 118, 128, 151, 171]
best_individual.unused_cities = {0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 158, 159, 160, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174}
best_individual.fitness.values = (-149472.203857341,)