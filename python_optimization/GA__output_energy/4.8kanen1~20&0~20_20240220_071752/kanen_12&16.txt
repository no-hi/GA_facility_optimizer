局----------------------  実行情報  ----------------------
実行時間＝5946秒
個体数＝1400
合計世代数＝100
===============================
Total cost: -165192.44862012033
===============================
------------------------  前提  ------------------------

waste=kanen

ごみ量38位以内：
札幌市 (349353), 函館市 (66649), 旭川市 (64890), 苫小牧市 (42288), 釧路市 (38335), 帯広市 (35291), 千歳市 (25770), 小樽市 (25049), 江別市 (24906), 北見市 (20809), 室蘭市 (20448), 岩見沢市 (12638), 登別市 (11426), 北広島市 (10822), 石狩市 (9341), 音更町 (7531), 稚内市 (7127), 恵庭市 (6987), 伊達市 (6907), 網走市 (6299), 滝川市 (5831), 北斗市 (5150), 七飯町 (5008), 中標津町 (4837), 根室市 (4736), 幕別町 (4414), 新ひだか町 (4277), 釧路町 (4090), 美幌町 (4063), 白老町 (3395), 紋別市 (3325), 中札内村 (2807), 芽室町 (2638), 東神楽町 (2584), 余市町 (2489), 砂川市 (2419), せたな町 (2370), 遠軽町 (2357)

焼却施設数: 12
中継施設数: 16

輸送単価＝ 4.8 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='kanen'
unit ='t/year'

inc_size= [763624, 154560, 12014, 7409, 1715, 1481, 170, 33, 26, 24, 24, 16]
inc_facility = ['札幌市', '釧路市', '興部町', '稚内市', '枝幸町', '初山別村', '雄武町', '豊富町', '遠別町', '天塩町', '幌延町', '中川町']
inc_blocks = [['南幌町', '札幌市', '江別市', '北広島市', '石狩市', '当別町', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町'], ['音威子府村', '中川町'], ['留萌市', '増毛町', '小平町', '苫前町', '羽幌町', '初山別村'], ['遠別町'], ['天塩町'], ['稚内市', '猿払村'], ['雄武町'], ['浜頓別町', '中頓別町', '枝幸町'], ['豊富町'], ['幌延町'], ['紋別市', '佐呂間町', '遠軽町', '湧別町', '滝上町', '興部町', '西興部村'], ['斜里町', '本別町', '足寄町', '浦幌町', '釧路市', '釧路町', '厚岸町', '浜中町', '標茶町', '弟子屈町', '鶴居村', '白糠町']]

trans_size=[83618, 76201, 60024, 46307, 34734, 33062, 32045, 20448, 19659, 17415, 15724, 11426, 9414, 7726, 4896, 4736]
trans_facility = ['函館市', '旭川市', '帯広市', '苫小牧市', '千歳市', '美幌町', '小樽市', '室蘭市', '岩見沢市', '豊浦町', '滝川市', '登別市', '新ひだか町', '中標津町', '名寄市', '根室市']
trans_blocks = [['根室市'], ['芦別市', '赤平市', '滝川市', '砂川市', '歌志内市', '深川市', '奈井江町', '上砂川町', '浦臼町', '新十津川町', '妹背牛町', '秩父別町', '雨竜町', '北竜町', '沼田町'], ['千歳市', '恵庭市', '厚真町', '安平町', '占冠村'], ['小樽市', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村'], ['夕張市', '岩見沢市', '美唄市', '三笠市', '由仁町', '長沼町', '栗山町', '月形町', '新篠津村'], ['苫小牧市', '白老町', 'むかわ町'], ['室蘭市'], ['島牧村', '寿都町', '黒松内町', '伊達市', '豊浦町', '壮瞥町', '洞爺湖町', '八雲町', '長万部町', '今金町', 'せたな町'], ['日高町', '平取町', '新冠町', '浦河町', '様似町', 'えりも町', '新ひだか町'], ['函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '江差町', '上ノ国町', '厚沢部町', '乙部町'], ['登別市'], ['士別市', '名寄市', '剣淵町', '下川町', '美深町'], ['旭川市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町', '和寒町', '幌加内町'], ['北見市', '網走市', '美幌町', '津別町', '清里町', '小清水町', '訓子府町', '置戸町', '大空町', '陸別町'], ['南富良野町', '帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町'], ['別海町', '中標津町', '標津町', '羅臼町']]

arrows = [[['札幌市'], ['小樽市', '岩見沢市', '新ひだか町', '滝川市', '函館市', '室蘭市', '苫小牧市', '登別市', '旭川市', '豊浦町', '千歳市']], [['興部町'], ['名寄市']], [['釧路市'], ['美幌町', '根室市', '中標津町', '帯広市']]]


---------------------  エネルギー情報  ---------------------
[14209.174391750003, 227323.60301890835, -435920.70329105266, 29195.477260273976]

EL_direct: {'札幌市': 7503.434974208334, '釧路市': 3390.9531963125005, '興部町': 2505.597560375, '稚内市': 108.504511375, '枝幸町': 141.4559371875, '初山別村': 558.4578127916668, '雄武町': 0.0, '豊富町': 0.0, '遠別町': 0.0, '天塩町': 0.0, '幌延町': 0.0, '中川町': 0.7703995000000001}
ED_inc: {'札幌市': -518067.3213377512, '釧路市': 33745.795446138785, '興部町': 21641.55192503825, '稚内市': 15565.636936887062, '枝幸町': 5158.211596709525, '初山別村': 4589.042298863878, '雄武町': 754.8096209267659, '豊富町': 180.0454620005565, '遠別町': 145.69531867270277, '天塩町': 135.67844323768028, '幌延町': 135.67844323768028, '中川町': 94.4725549858057}

EL_indirect: {'函館市': 82574.7988576593, '旭川市': 33845.01212142266, '帯広市': 26609.1886427835, '苫小牧市': 10141.120542156501, '千歳市': 5732.45048792, '美幌町': 18563.373663379996, '小樽市': 5947.0408341825005, '室蘭市': 8068.9939499520015, '岩見沢市': 3640.2421771495005, '豊浦町': 10840.559320391669, '滝川市': 5852.888054125668, '登別市': 4112.243634096, '新ひだか町': 5330.977747872834, '中標津町': 2782.1158314300005, '名寄市': 1529.0636775223336, '根室市': 1753.533476864}
ED_trans: {'函館市': 5113.297972602739, '旭川市': 4659.743342465754, '帯広市': 3670.508712328767, '苫小牧市': 2831.7047671232876, '千歳市': 2124.007890410959, '美幌町': 2021.7639452054793, '小樽市': 1959.5736986301372, '室蘭市': 1250.409205479452, '岩見沢市': 1202.1613150684934, '豊浦町': 1064.9391780821918, '滝川市': 961.5333698630137, '登別市': 698.7077260273974, '新ひだか町': 575.6725479452055, '中標津町': 472.45019178082197, '名寄市': 299.3937534246576, '根室市': 289.6096438356164}

----------------------  輸送情報  ----------------------

direct 札幌市(1087/2092) t/day → receive from: 南幌町, 札幌市, 江別市, 北広島市, 石狩市, 当別町, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町
indirect 札幌市(1005/2092) t/day → receive from: 中継施設＝ 小樽市(32045) → receive from: 小樽市, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村
岩見沢市(19659) → receive from: 夕張市, 岩見沢市, 美唄市, 三笠市, 由仁町, 長沼町, 栗山町, 月形町, 新篠津村
新ひだか町(9414) → receive from: 日高町, 平取町, 新冠町, 浦河町, 様似町, えりも町, 新ひだか町
滝川市(15724) → receive from: 芦別市, 赤平市, 滝川市, 砂川市, 歌志内市, 深川市, 奈井江町, 上砂川町, 浦臼町, 新十津川町, 妹背牛町, 秩父別町, 雨竜町, 北竜町, 沼田町
函館市(83618) → receive from: 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 江差町, 上ノ国町, 厚沢部町, 乙部町
室蘭市(20448) → receive from: 室蘭市
苫小牧市(46307) → receive from: 苫小牧市, 白老町, むかわ町
登別市(11426) → receive from: 登別市
旭川市(76201) → receive from: 旭川市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町, 和寒町, 幌加内町
豊浦町(17415) → receive from: 島牧村, 寿都町, 黒松内町, 伊達市, 豊浦町, 壮瞥町, 洞爺湖町, 八雲町, 長万部町, 今金町, せたな町
千歳市(34734) → receive from: 千歳市, 恵庭市, 厚真町, 安平町, 占冠村
direct 釧路市(134/423) t/day → receive from: 斜里町, 本別町, 足寄町, 浦幌町, 釧路市, 釧路町, 厚岸町, 浜中町, 標茶町, 弟子屈町, 鶴居村, 白糠町
indirect 釧路市(289/423) t/day → receive from: 中継施設＝ 美幌町(33062) → receive from: 北見市, 網走市, 美幌町, 津別町, 清里町, 小清水町, 訓子府町, 置戸町, 大空町, 陸別町
根室市(4736) → receive from: 根室市
中標津町(7726) → receive from: 別海町, 中標津町, 標津町, 羅臼町
帯広市(60024) → receive from: 南富良野町, 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町
direct 興部町(20/33) t/day → receive from: 紋別市, 佐呂間町, 遠軽町, 湧別町, 滝上町, 興部町, 西興部村
indirect 興部町(13/33) t/day → receive from: 中継施設＝ 名寄市(4896) → receive from: 士別市, 名寄市, 剣淵町, 下川町, 美深町
direct 稚内市(20/20) t/day → receive from: 稚内市, 猿払村
direct 枝幸町(5/5) t/day → receive from: 浜頓別町, 中頓別町, 枝幸町
direct 初山別村(4/4) t/day → receive from: 留萌市, 増毛町, 小平町, 苫前町, 羽幌町, 初山別村
direct 雄武町(0/0) t/day → receive from: 雄武町
direct 豊富町(0/0) t/day → receive from: 豊富町
direct 遠別町(0/0) t/day → receive from: 遠別町
direct 天塩町(0/0) t/day → receive from: 天塩町
direct 幌延町(0/0) t/day → receive from: 幌延町
direct 中川町(0/0) t/day → receive from: 音威子府村, 中川町

----------------------  遺伝情報  ----------------------

個体数＝1400
世代数＝100
0: neval=1400{'avg': inf, 'max': inf, 'min': 105780.32234457807} best=105780.32234457807
1: neval=1111{'avg': inf, 'max': inf, 'min': 95453.83357251066} best=95453.83357251066
2: neval=1102{'avg': inf, 'max': inf, 'min': 98288.2819255463} best=95453.83357251066
3: neval=1114{'avg': inf, 'max': inf, 'min': 75734.23583526167} best=75734.23583526167
4: neval=1096{'avg': inf, 'max': inf, 'min': 42571.97636196794} best=42571.97636196794
5: neval=1124{'avg': inf, 'max': inf, 'min': 42571.97636196794} best=42571.97636196794
6: neval=1144{'avg': inf, 'max': inf, 'min': 42571.97636196794} best=42571.97636196794
7: neval=1072{'avg': inf, 'max': inf, 'min': 21091.95449082734} best=21091.95449082734
8: neval=1052{'avg': inf, 'max': inf, 'min': 15330.094160638218} best=15330.094160638218
9: neval=1113{'avg': inf, 'max': inf, 'min': 15330.094160638218} best=15330.094160638218
10: neval=1113{'avg': inf, 'max': inf, 'min': 34732.23587534344} best=15330.094160638218
11: neval=1110{'avg': inf, 'max': inf, 'min': 10205.820318698381} best=10205.820318698381
12: neval=1105{'avg': inf, 'max': inf, 'min': -5133.976986714682} best=-5133.976986714682
13: neval=1112{'avg': inf, 'max': inf, 'min': -23168.1886736612} best=-23168.1886736612
14: neval=1071{'avg': inf, 'max': inf, 'min': -23168.1886736612} best=-23168.1886736612
15: neval=1136{'avg': inf, 'max': inf, 'min': -23168.1886736612} best=-23168.1886736612
16: neval=1091{'avg': 43360.88268842767, 'max': 542983.9477863763, 'min': -32843.959908676334} best=-32843.959908676334
17: neval=1104{'avg': inf, 'max': inf, 'min': -32843.959908676334} best=-32843.959908676334
18: neval=1134{'avg': 20192.87693574904, 'max': 428664.1537199855, 'min': -36870.08117699217} best=-36870.08117699217
19: neval=1108{'avg': 10711.16610532219, 'max': 427869.110771697, 'min': -62396.44175513668} best=-62396.44175513668
20: neval=1125{'avg': -328.6125340261327, 'max': 554528.0032681676, 'min': -62396.44175513668} best=-62396.44175513668
21: neval=1113{'avg': -10556.349544141984, 'max': 599083.73567759, 'min': -62396.44175513668} best=-62396.44175513668
22: neval=1110{'avg': -18514.153814887148, 'max': 222536.84733310353, 'min': -51889.92564211786} best=-62396.44175513668
23: neval=1102{'avg': -25322.74328549204, 'max': 333838.7979979326, 'min': -57660.13090273403} best=-62396.44175513668
24: neval=1092{'avg': -28787.833949467993, 'max': 290642.27432108275, 'min': -62437.56894541175} best=-62437.56894541175
25: neval=1125{'avg': -34273.57268318334, 'max': 293232.0321313444, 'min': -68159.91407673237} best=-68159.91407673237
26: neval=1141{'avg': -35119.86417346975, 'max': 522614.94685822923, 'min': -68798.46463625427} best=-68798.46463625427
27: neval=1110{'avg': -42921.159820364344, 'max': 295511.19563314685, 'min': -79143.76450549759} best=-79143.76450549759
28: neval=1103{'avg': -48511.61149288795, 'max': 348023.6820104962, 'min': -79647.97332001022} best=-79647.97332001022
29: neval=1132{'avg': -53698.852467393066, 'max': 311166.60442557203, 'min': -82647.66241917132} best=-82647.66241917132
30: neval=1082{'avg': -58840.6322013234, 'max': 281243.7168710423, 'min': -96237.8349456862} best=-96237.8349456862
31: neval=1098{'avg': -61758.10225977971, 'max': 313593.5064859997, 'min': -84573.28513842329} best=-96237.8349456862
32: neval=1108{'avg': -66711.25900720502, 'max': 237551.1145779622, 'min': -101109.93419579374} best=-101109.93419579374
33: neval=1064{'avg': -70603.09843045502, 'max': 295930.5397082352, 'min': -93291.55840538345} best=-101109.93419579374
34: neval=1122{'avg': -75727.52695388882, 'max': 276186.05865712505, 'min': -101542.00198625155} best=-101542.00198625155
35: neval=1087{'avg': -80823.6689800081, 'max': 155161.92489612676, 'min': -102023.53090147204} best=-102023.53090147204
36: neval=1118{'avg': -84142.78046265955, 'max': 98530.73377766449, 'min': -103935.74904595096} best=-103935.74904595096
37: neval=1078{'avg': -89064.75030144966, 'max': 136647.6879588153, 'min': -103935.74904595096} best=-103935.74904595096
38: neval=1131{'avg': -91499.04595312367, 'max': 194218.94210821745, 'min': -104705.15696445332} best=-104705.15696445332
39: neval=1123{'avg': -94520.05676180645, 'max': 131195.24614681362, 'min': -113545.6984385239} best=-113545.6984385239
40: neval=1092{'avg': -97449.07629313436, 'max': 204193.42726253212, 'min': -113033.56011721698} best=-113545.6984385239
41: neval=1112{'avg': -100019.81898931244, 'max': 154117.2418143313, 'min': -131850.62617288003} best=-131850.62617288003
42: neval=1098{'avg': -102748.97272622892, 'max': 142426.67797448992, 'min': -131850.62617288003} best=-131850.62617288003
43: neval=1126{'avg': -104341.6512506583, 'max': 134262.76425474108, 'min': -131850.62617288003} best=-131850.62617288003
44: neval=1130{'avg': -106703.4906284237, 'max': 177563.63042795396, 'min': -131850.62617288003} best=-131850.62617288003
45: neval=1104{'avg': -108863.0337963347, 'max': 314133.3725521813, 'min': -131850.62617288003} best=-131850.62617288003
46: neval=1102{'avg': -111884.57120341522, 'max': 166957.50134194328, 'min': -135641.88471678164} best=-135641.88471678164
47: neval=1147{'avg': -115394.1483924681, 'max': 220059.07839275448, 'min': -137842.90405642008} best=-137842.90405642008
48: neval=1109{'avg': -119132.05643668311, 'max': 233392.16130652605, 'min': -137842.90405642008} best=-137842.90405642008
49: neval=1092{'avg': -123548.60764210459, 'max': 228611.35411562596, 'min': -146262.5758238749} best=-146262.5758238749
50: neval=1104{'avg': -127966.49739237552, 'max': 38424.431096694294, 'min': -148843.8025247214} best=-148843.8025247214
51: neval=1131{'avg': -130077.9905183801, 'max': 186859.59619508992, 'min': -150501.2114199989} best=-150501.2114199989
52: neval=1094{'avg': -132662.30241696062, 'max': 202620.75645360124, 'min': -153322.3902104667} best=-153322.3902104667
53: neval=1117{'avg': -136073.51706445427, 'max': 160002.30258104627, 'min': -152633.17964420642} best=-153322.3902104667
54: neval=1123{'avg': -139425.59963061445, 'max': 205944.97535901275, 'min': -152633.17964420642} best=-153322.3902104667
55: neval=1136{'avg': -144768.8655346944, 'max': 112674.46054811143, 'min': -152663.5093987954} best=-153322.3902104667
56: neval=1072{'avg': -147799.48003406645, 'max': 249542.53841841666, 'min': -153368.92525988043} best=-153368.92525988043
57: neval=1098{'avg': -150470.84388332613, 'max': 97133.7638779134, 'min': -155130.27807895455} best=-155130.27807895455
58: neval=1139{'avg': -150603.32625191344, 'max': 126410.37505603989, 'min': -154595.21834323305} best=-155130.27807895455
59: neval=1079{'avg': -150592.34744764387, 'max': 373220.71545882634, 'min': -156237.83903483668} best=-156237.83903483668
60: neval=1123{'avg': -152205.53224674825, 'max': 201466.29014881013, 'min': -157586.6335877995} best=-157586.6335877995
61: neval=1099{'avg': -152735.13669843136, 'max': 107360.62459925069, 'min': -160687.0159755953} best=-160687.0159755953
62: neval=1107{'avg': -153292.5207107871, 'max': 162056.30034244584, 'min': -160687.0159755953} best=-160687.0159755953
63: neval=1134{'avg': -153487.61688681858, 'max': 155071.98402359377, 'min': -161537.23250964368} best=-161537.23250964368
64: neval=1146{'avg': -156545.5276631266, 'max': 102743.54675493613, 'min': -161537.23250964368} best=-161537.23250964368
65: neval=1110{'avg': -158476.39303711936, 'max': 87236.84789014692, 'min': -161860.82292790338} best=-161860.82292790338
66: neval=1125{'avg': -159043.60018279063, 'max': 195193.8785893363, 'min': -161860.82292790338} best=-161860.82292790338
67: neval=1115{'avg': -158735.43601772957, 'max': 159552.8606296363, 'min': -161860.82292790338} best=-161860.82292790338
68: neval=1083{'avg': -159716.65493775255, 'max': 226017.35932858213, 'min': -161860.82292790338} best=-161860.82292790338
69: neval=1092{'avg': -158624.57344723144, 'max': 258115.3146232136, 'min': -161860.82292790338} best=-161860.82292790338
70: neval=1086{'avg': -161298.35801746548, 'max': 19157.78080920861, 'min': -161860.82292790338} best=-161860.82292790338
71: neval=1135{'avg': -160295.59566442345, 'max': 83926.71650243062, 'min': -161860.82292790338} best=-161860.82292790338
72: neval=1089{'avg': -161171.7950697981, 'max': 34428.35114052353, 'min': -161860.82292790338} best=-161860.82292790338
73: neval=1080{'avg': -160179.79839570491, 'max': 116618.81004072365, 'min': -161860.82292790338} best=-161860.82292790338
74: neval=1133{'avg': -160810.14557761123, 'max': 71280.18047557742, 'min': -161860.82292790338} best=-161860.82292790338
75: neval=1092{'avg': -160134.69083984563, 'max': 194581.61967305338, 'min': -161860.82292790338} best=-161860.82292790338
76: neval=1105{'avg': -161416.18685001897, 'max': 18711.673726572437, 'min': -161860.82292790338} best=-161860.82292790338
77: neval=1128{'avg': -159895.63888159028, 'max': 83394.46540807752, 'min': -161942.5546348358} best=-161942.5546348358
78: neval=1093{'avg': -159515.9435012118, 'max': 170088.7081587713, 'min': -161942.5546348358} best=-161942.5546348358
79: neval=1098{'avg': -161004.21094197218, 'max': 30292.350482196638, 'min': -161942.5546348358} best=-161942.5546348358
80: neval=1143{'avg': -159815.8712100705, 'max': 210996.66970676824, 'min': -163030.59961272383} best=-163030.59961272383
81: neval=1109{'avg': -160754.03624787202, 'max': 175805.2308545703, 'min': -163030.59961272383} best=-163030.59961272383
82: neval=1105{'avg': -160448.9896749614, 'max': 191246.33815289696, 'min': -163030.59961272383} best=-163030.59961272383
83: neval=1111{'avg': -160886.52316457353, 'max': 183437.81043897348, 'min': -163030.59961272383} best=-163030.59961272383
84: neval=1083{'avg': -160795.69963465593, 'max': 190264.0296941252, 'min': -163030.59961272383} best=-163030.59961272383
85: neval=1130{'avg': -160370.60854345546, 'max': 212956.6485330669, 'min': -163030.59961272383} best=-163030.59961272383
86: neval=1112{'avg': -162100.77869518945, 'max': 187348.745465148, 'min': -163030.59961272383} best=-163030.59961272383
87: neval=1104{'avg': -161919.52643042718, 'max': 133267.85382984, 'min': -163030.59961272383} best=-163030.59961272383
88: neval=1075{'avg': -161466.22225561473, 'max': 147244.30862531858, 'min': -163030.59961272383} best=-163030.59961272383
89: neval=1125{'avg': -162079.79629801316, 'max': 100161.78225425363, 'min': -163030.59961272383} best=-163030.59961272383
90: neval=1090{'avg': -161110.88083759559, 'max': 169636.83393629375, 'min': -163030.59961272383} best=-163030.59961272383
91: neval=1126{'avg': -160606.35372640184, 'max': 190282.07370276636, 'min': -163030.59961272383} best=-163030.59961272383
92: neval=1146{'avg': -161241.09745940022, 'max': 146094.79109738028, 'min': -163030.59961272383} best=-163030.59961272383
93: neval=1090{'avg': -160098.49370389545, 'max': 195257.42033502902, 'min': -163030.59961272383} best=-163030.59961272383
94: neval=1137{'avg': -161545.704230373, 'max': 149531.95539593528, 'min': -163030.59961272383} best=-163030.59961272383
95: neval=1116{'avg': -162023.10667335396, 'max': 210715.68941790806, 'min': -163030.59961272383} best=-163030.59961272383
96: neval=1140{'avg': -161307.13951676892, 'max': 128796.55985402862, 'min': -163030.59961272383} best=-163030.59961272383
97: neval=1129{'avg': -161181.75742401156, 'max': 230589.5076302355, 'min': -163030.59961272383} best=-163030.59961272383
98: neval=1107{'avg': -161103.9352845294, 'max': 195302.05520906288, 'min': -163030.59961272383} best=-163030.59961272383
99: neval=1113{'avg': -161708.55511662515, 'max': 209890.88642386819, 'min': -163030.59961272383} best=-163030.59961272383


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 108, 115, 116, 117, 118, 141, 122, 123, 124, 139, 162]
best_individual.trans_facility = [170, 6, 26, 32, 1, 53, 52, 56, 69, 70, 54, 89, 87, 128, 143, 172]
best_individual.unused_cities = {0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 119, 120, 121, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174}
best_individual.fitness.values = (-165192.44862012033,)