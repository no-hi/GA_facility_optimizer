局----------------------  実行情報  ----------------------
実行時間＝1256秒
個体数＝550
合計世代数＝100
==============================
Total cost: -190632.6498245605
==============================
------------------------  前提  ------------------------

waste=kanen

ごみ量21位以内：
札幌市 (349353), 函館市 (66649), 旭川市 (64890), 苫小牧市 (42288), 釧路市 (38335), 帯広市 (35291), 千歳市 (25770), 小樽市 (25049), 江別市 (24906), 北見市 (20809), 室蘭市 (20448), 岩見沢市 (12638), 登別市 (11426), 北広島市 (10822), 石狩市 (9341), 音更町 (7531), 稚内市 (7127), 恵庭市 (6987), 伊達市 (6907), 網走市 (6299), 滝川市 (5831)

焼却施設数: 4
中継施設数: 7

輸送単価＝ 4.8 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='kanen'
unit ='t/year'

inc_size= [851506, 85923, 2311, 1356]
inc_facility = ['札幌市', '函館市', '松前町', '福島町']
inc_blocks = [['夕張市', '岩見沢市', '美唄市', '赤平市', '三笠市', '滝川市', '砂川市', '歌志内市', '南幌町', '奈井江町', '上砂川町', '由仁町', '長沼町', '栗山町', '月形町', '浦臼町', '新十津川町', '雨竜町', '札幌市', '江別市', '千歳市', '恵庭市', '北広島市', '石狩市', '当別町', '新篠津村', '小樽市', '寿都町', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村', '安平町', '様似町', '占冠村', '羽幌町', '初山別村', '斜里町'], ['黒松内町', '函館市', '北斗市', '七飯町', '鹿部町', '森町', '八雲町', '長万部町', '厚沢部町', '乙部町', '今金町', 'せたな町'], ['松前町', '江差町', '上ノ国町'], ['福島町', '知内町', '木古内町']]

trans_size=[86940, 61909, 60124, 55115, 42741, 40276, 9247]
trans_facility = ['旭川市', '帯広市', '釧路市', '苫小牧市', '登別市', '北見市', '稚内市']
trans_blocks = [['苫小牧市', '白老町', '厚真町', 'むかわ町', '日高町', '平取町', '新冠町', '浦河町', '新ひだか町'], ['島牧村', '室蘭市', '登別市', '伊達市', '豊浦町', '壮瞥町', '洞爺湖町'], ['芦別市', '深川市', '妹背牛町', '秩父別町', '北竜町', '沼田町', '旭川市', '士別市', '名寄市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町', '和寒町', '剣淵町', '下川町', '美深町', '幌加内町', '留萌市', '増毛町', '小平町', '苫前町', '西興部村'], ['音威子府村', '中川町', '遠別町', '天塩町', '稚内市', '猿払村', '浜頓別町', '中頓別町', '枝幸町', '豊富町', '幌延町'], ['北見市', '網走市', '紋別市', '美幌町', '津別町', '清里町', '小清水町', '訓子府町', '置戸町', '佐呂間町', '遠軽町', '湧別町', '滝上町', '興部町', '雄武町', '大空町', '陸別町'], ['えりも町', '南富良野町', '帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町', '本別町', '足寄町', '浦幌町'], ['釧路市', '釧路町', '厚岸町', '浜中町', '標茶町', '弟子屈町', '鶴居村', '白糠町', '根室市', '別海町', '中標津町', '標津町', '羅臼町']]

arrows = [[['札幌市'], ['釧路市', '帯広市', '苫小牧市', '稚内市', '登別市', '旭川市', '北見市']]]


---------------------  エネルギー情報  ---------------------
[56690.143450958356, 247753.349723594, -516867.3118758253, 21791.168876712327]

EL_direct: {'札幌市': 47971.642864708345, '函館市': 7639.729553625002, '松前町': 833.3328247291668, '福島町': 245.4382078958334}
ED_inc: {'札幌市': -577689.3242263511, '函館市': 50022.55181138781, '松前町': 6523.647287530638, '福島町': 4275.813251607425}

EL_indirect: {'旭川市': 43223.340253556664, '帯広市': 42358.551716208014, '釧路市': 67611.24276930616, '苫小牧市': 17463.086854330006, '登別市': 21138.039618273506, '北見市': 45271.312258276026, '稚内市': 10687.77625364367}
ED_trans: {'旭川市': 5316.440547945205, '帯広市': 3785.777753424658, '釧路市': 3676.6237808219175, '苫小牧市': 3370.32, '登別市': 2613.641424657534, '北見市': 2462.9049863013697, '稚内市': 565.4603835616439}

----------------------  輸送情報  ----------------------

direct 札幌市(1357/2333) t/day → receive from: 夕張市, 岩見沢市, 美唄市, 赤平市, 三笠市, 滝川市, 砂川市, 歌志内市, 南幌町, 奈井江町, 上砂川町, 由仁町, 長沼町, 栗山町, 月形町, 浦臼町, 新十津川町, 雨竜町, 札幌市, 江別市, 千歳市, 恵庭市, 北広島市, 石狩市, 当別町, 新篠津村, 小樽市, 寿都町, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村, 安平町, 様似町, 占冠村, 羽幌町, 初山別村, 斜里町
indirect 札幌市(976/2333) t/day → receive from: 中継施設＝ 釧路市(60124) → receive from: 釧路市, 釧路町, 厚岸町, 浜中町, 標茶町, 弟子屈町, 鶴居村, 白糠町, 根室市, 別海町, 中標津町, 標津町, 羅臼町
帯広市(61909) → receive from: えりも町, 南富良野町, 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町, 本別町, 足寄町, 浦幌町
苫小牧市(55115) → receive from: 苫小牧市, 白老町, 厚真町, むかわ町, 日高町, 平取町, 新冠町, 浦河町, 新ひだか町
稚内市(9247) → receive from: 音威子府村, 中川町, 遠別町, 天塩町, 稚内市, 猿払村, 浜頓別町, 中頓別町, 枝幸町, 豊富町, 幌延町
登別市(42741) → receive from: 島牧村, 室蘭市, 登別市, 伊達市, 豊浦町, 壮瞥町, 洞爺湖町
旭川市(86940) → receive from: 芦別市, 深川市, 妹背牛町, 秩父別町, 北竜町, 沼田町, 旭川市, 士別市, 名寄市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町, 和寒町, 剣淵町, 下川町, 美深町, 幌加内町, 留萌市, 増毛町, 小平町, 苫前町, 西興部村
北見市(40276) → receive from: 北見市, 網走市, 紋別市, 美幌町, 津別町, 清里町, 小清水町, 訓子府町, 置戸町, 佐呂間町, 遠軽町, 湧別町, 滝上町, 興部町, 雄武町, 大空町, 陸別町
direct 函館市(235/235) t/day → receive from: 黒松内町, 函館市, 北斗市, 七飯町, 鹿部町, 森町, 八雲町, 長万部町, 厚沢部町, 乙部町, 今金町, せたな町
direct 松前町(6/6) t/day → receive from: 松前町, 江差町, 上ノ国町
direct 福島町(4/4) t/day → receive from: 福島町, 知内町, 木古内町

----------------------  遺伝情報  ----------------------

個体数＝550
世代数＝100
0: neval=550{'avg': inf, 'max': inf, 'min': -82166.21916987273} best=-82166.21916987273
1: neval=447{'avg': inf, 'max': inf, 'min': -50806.51099923815} best=-82166.21916987273
2: neval=433{'avg': inf, 'max': inf, 'min': -79447.77474973914} best=-82166.21916987273
3: neval=450{'avg': 7747.431284073622, 'max': 523250.71148119826, 'min': -118930.12745432422} best=-118930.12745432422
4: neval=430{'avg': inf, 'max': inf, 'min': -118930.12745432422} best=-118930.12745432422
5: neval=437{'avg': -28103.708180829333, 'max': 576904.2604061929, 'min': -122749.6077888118} best=-122749.6077888118
6: neval=414{'avg': inf, 'max': inf, 'min': -122749.6077888118} best=-122749.6077888118
7: neval=433{'avg': -61677.24079510084, 'max': 223217.65284497116, 'min': -137216.8882238107} best=-137216.8882238107
8: neval=436{'avg': inf, 'max': inf, 'min': -137216.8882238107} best=-137216.8882238107
9: neval=429{'avg': -90654.40407869982, 'max': 124111.65844293326, 'min': -141090.36173170342} best=-141090.36173170342
10: neval=425{'avg': -103299.99813903554, 'max': 191378.99469615027, 'min': -141090.36173170342} best=-141090.36173170342
11: neval=442{'avg': -112661.76631128983, 'max': 310781.0035094554, 'min': -141090.36173170342} best=-141090.36173170342
12: neval=446{'avg': -118875.24423226509, 'max': 92652.69873571093, 'min': -140162.60164727614} best=-141090.36173170342
13: neval=406{'avg': -126159.25984267516, 'max': -77711.45310547797, 'min': -146799.3736005115} best=-146799.3736005115
14: neval=434{'avg': -129691.17329851349, 'max': 20581.98618779801, 'min': -152713.55836085888} best=-152713.55836085888
15: neval=419{'avg': -135698.54548234545, 'max': 18977.98362795341, 'min': -156120.5056025462} best=-156120.5056025462
16: neval=455{'avg': -139999.16342762523, 'max': 12224.179443947261, 'min': -170728.20537724064} best=-170728.20537724064
17: neval=443{'avg': -144826.74905202363, 'max': 30514.037042616557, 'min': -164096.20819160275} best=-170728.20537724064
18: neval=479{'avg': -149019.96640022896, 'max': -3490.400523217744, 'min': -172054.836715038} best=-172054.836715038
19: neval=450{'avg': -152974.24212962567, 'max': -34637.73898900983, 'min': -164096.20819160275} best=-172054.836715038
20: neval=413{'avg': -155038.4801676117, 'max': -51387.196273055786, 'min': -172054.836715038} best=-172054.836715038
21: neval=433{'avg': -156560.98859807735, 'max': 43005.4836723057, 'min': -172054.836715038} best=-172054.836715038
22: neval=447{'avg': -159374.47982981656, 'max': -55544.85695349693, 'min': -174350.8734318792} best=-174350.8734318792
23: neval=438{'avg': -160852.24531419968, 'max': 387050.49230681325, 'min': -174350.8734318792} best=-174350.8734318792
24: neval=423{'avg': -162643.34478877977, 'max': 49309.82950219516, 'min': -174350.8734318792} best=-174350.8734318792
25: neval=440{'avg': -165053.83951856094, 'max': -34462.264066095006, 'min': -174350.8734318792} best=-174350.8734318792
26: neval=419{'avg': -166926.73259382142, 'max': -46949.920135918146, 'min': -174350.8734318792} best=-174350.8734318792
27: neval=448{'avg': -169031.42667846376, 'max': -37173.10093380224, 'min': -176115.71316548093} best=-176115.71316548093
28: neval=447{'avg': -170421.13819243855, 'max': -46334.87699957129, 'min': -176130.5947344067} best=-176130.5947344067
29: neval=411{'avg': -172460.28719270005, 'max': -25865.65693607525, 'min': -176130.5947344067} best=-176130.5947344067
30: neval=432{'avg': -173749.71507242852, 'max': -25798.244208288575, 'min': -176130.5947344067} best=-176130.5947344067
31: neval=436{'avg': -174556.7141468442, 'max': -111914.81498986227, 'min': -176130.5947344067} best=-176130.5947344067
32: neval=433{'avg': -175076.1695001464, 'max': -37240.96750403989, 'min': -176130.5947344067} best=-176130.5947344067
33: neval=442{'avg': -173811.23844671194, 'max': 35997.208575979865, 'min': -176130.5947344067} best=-176130.5947344067
34: neval=443{'avg': -175208.47092863853, 'max': -93161.64455171843, 'min': -180106.75371757982} best=-180106.75371757982
35: neval=439{'avg': -174686.64712837272, 'max': -53745.11040263689, 'min': -180106.75371757982} best=-180106.75371757982
36: neval=447{'avg': -174413.9988147223, 'max': -70331.25942203995, 'min': -180106.75371757982} best=-180106.75371757982
37: neval=432{'avg': -175607.7371496188, 'max': 73143.2441964907, 'min': -180106.75371757982} best=-180106.75371757982
38: neval=452{'avg': -175079.33250241113, 'max': 14845.189211458008, 'min': -184840.05720121737} best=-184840.05720121737
39: neval=403{'avg': -175916.04473489185, 'max': 104294.09542263877, 'min': -184840.05720121737} best=-184840.05720121737
40: neval=437{'avg': -178630.0636816259, 'max': -147541.88976575402, 'min': -186655.1047344656} best=-186655.1047344656
41: neval=422{'avg': -181004.45378422926, 'max': -87918.29174205368, 'min': -186655.1047344656} best=-186655.1047344656
42: neval=429{'avg': -183722.2620998534, 'max': -75809.73301776612, 'min': -187490.8424165525} best=-187490.8424165525
43: neval=431{'avg': -184860.765372236, 'max': -64938.21974273458, 'min': -187490.8424165525} best=-187490.8424165525
44: neval=464{'avg': -185363.16361615233, 'max': -64849.074441454046, 'min': -187490.8424165525} best=-187490.8424165525
45: neval=434{'avg': -185792.99789391557, 'max': -4221.871473110579, 'min': -187490.8424165525} best=-187490.8424165525
46: neval=460{'avg': -185680.5518296419, 'max': 123684.8601404546, 'min': -187490.8424165525} best=-187490.8424165525
47: neval=439{'avg': -186724.7727734997, 'max': -34711.52828133183, 'min': -187490.8424165525} best=-187490.8424165525
48: neval=446{'avg': -186806.01738247165, 'max': 93109.34526439778, 'min': -187490.8424165525} best=-187490.8424165525
49: neval=431{'avg': -186880.56592411458, 'max': -32228.69674349751, 'min': -187490.8424165525} best=-187490.8424165525
50: neval=442{'avg': -186737.39266204895, 'max': -43629.78090615061, 'min': -187490.8424165525} best=-187490.8424165525
51: neval=444{'avg': -186350.8135591847, 'max': -9129.766339399699, 'min': -187490.8424165525} best=-187490.8424165525
52: neval=430{'avg': -186968.10111827235, 'max': -106404.92361970307, 'min': -187490.8424165525} best=-187490.8424165525
53: neval=415{'avg': -187402.9709643462, 'max': -155613.93442769043, 'min': -187490.8424165525} best=-187490.8424165525
54: neval=455{'avg': -187352.5504199007, 'max': -127372.59484535104, 'min': -187490.8424165525} best=-187490.8424165525
55: neval=413{'avg': -187086.2792086812, 'max': -77809.42689553261, 'min': -187490.8424165525} best=-187490.8424165525
56: neval=443{'avg': -187186.27622055585, 'max': -103292.67227782826, 'min': -187490.8424165525} best=-187490.8424165525
57: neval=434{'avg': -186867.8685278194, 'max': -79039.52308149991, 'min': -187490.8424165525} best=-187490.8424165525
58: neval=425{'avg': -186216.2303298499, 'max': 24659.601058274555, 'min': -187490.8424165525} best=-187490.8424165525
59: neval=426{'avg': -186707.1462749701, 'max': 16814.067624742413, 'min': -187490.8424165525} best=-187490.8424165525
60: neval=458{'avg': -185654.57101473075, 'max': 19045.713423004472, 'min': -187490.8424165525} best=-187490.8424165525
61: neval=408{'avg': -186963.61632071604, 'max': -40326.82722316788, 'min': -187490.8424165525} best=-187490.8424165525
62: neval=439{'avg': -186393.98300386727, 'max': 64346.57753216805, 'min': -189564.05953033612} best=-189564.05953033612
63: neval=425{'avg': -186522.86976134955, 'max': -46070.203678716636, 'min': -189564.05953033612} best=-189564.05953033612
64: neval=429{'avg': -187538.82614281806, 'max': -106843.2229082298, 'min': -189564.05953033612} best=-189564.05953033612
65: neval=441{'avg': -187512.02184530886, 'max': -52019.667058081504, 'min': -189564.05953033612} best=-189564.05953033612
66: neval=449{'avg': -187913.15892951266, 'max': -4049.307694120369, 'min': -189564.05953033612} best=-189564.05953033612
67: neval=453{'avg': -187319.24303845566, 'max': 90445.73116044259, 'min': -189564.05953033612} best=-189564.05953033612
68: neval=423{'avg': -189427.5590237912, 'max': -122781.64938575261, 'min': -189564.05953033612} best=-189564.05953033612
69: neval=436{'avg': -189014.76781879776, 'max': -88999.76500397021, 'min': -189564.05953033612} best=-189564.05953033612
70: neval=437{'avg': -188994.15985884503, 'max': -100674.37274214596, 'min': -189564.05953033612} best=-189564.05953033612
71: neval=417{'avg': -189205.88440196315, 'max': -50519.887566615376, 'min': -189564.05953033612} best=-189564.05953033612
72: neval=420{'avg': -189421.79950935693, 'max': -111321.04799178691, 'min': -189564.05953033612} best=-189564.05953033612
73: neval=438{'avg': -188743.9192049946, 'max': -27493.56507676043, 'min': -189564.05953033612} best=-189564.05953033612
74: neval=452{'avg': -188767.3659257216, 'max': 19706.865934876765, 'min': -189564.05953033612} best=-189564.05953033612
75: neval=442{'avg': -188623.0189038249, 'max': 133030.6859119536, 'min': -189564.05953033612} best=-189564.05953033612
76: neval=464{'avg': -189269.17502973508, 'max': -110190.93581989926, 'min': -189564.05953033612} best=-189564.05953033612
77: neval=425{'avg': -189373.6200296053, 'max': -147211.60673545155, 'min': -189564.05953033612} best=-189564.05953033612
78: neval=435{'avg': -188648.874798186, 'max': 9030.083843792474, 'min': -189564.05953033612} best=-189564.05953033612
79: neval=443{'avg': -188810.82544206397, 'max': -84219.30440961829, 'min': -189564.05953033612} best=-189564.05953033612
80: neval=412{'avg': -189564.05953033615, 'max': -189564.05953033612, 'min': -189564.05953033612} best=-189564.05953033612
81: neval=452{'avg': -188768.33321669497, 'max': 9624.805956229728, 'min': -189564.05953033612} best=-189564.05953033612
82: neval=437{'avg': -188895.20858073214, 'max': 21728.75146138494, 'min': -189564.05953033612} best=-189564.05953033612
83: neval=451{'avg': -189392.83733826398, 'max': -142070.52473311243, 'min': -189564.05953033612} best=-189564.05953033612
84: neval=420{'avg': -189497.41400631308, 'max': -163808.4580681147, 'min': -189564.05953033612} best=-189564.05953033612
85: neval=432{'avg': -189230.79475313702, 'max': -99249.77342628794, 'min': -189564.05953033612} best=-189564.05953033612
86: neval=432{'avg': -188752.5546733252, 'max': -79012.49365113759, 'min': -189564.05953033612} best=-189564.05953033612
87: neval=430{'avg': -188373.38126273616, 'max': 194107.75175773978, 'min': -189564.05953033612} best=-189564.05953033612
88: neval=453{'avg': -188652.45935371477, 'max': 211484.39397371156, 'min': -189564.05953033612} best=-189564.05953033612
89: neval=439{'avg': -188965.5919735284, 'max': -55318.39219152276, 'min': -189564.05953033612} best=-189564.05953033612
90: neval=442{'avg': -188913.68996701587, 'max': -77819.46981632423, 'min': -189564.05953033612} best=-189564.05953033612
91: neval=439{'avg': -188900.05006880447, 'max': -75307.50673317982, 'min': -189564.05953033612} best=-189564.05953033612
92: neval=452{'avg': -189293.65165922864, 'max': -93314.37483800104, 'min': -189564.05953033612} best=-189564.05953033612
93: neval=422{'avg': -188990.46473203122, 'max': -40693.8279285005, 'min': -189564.05953033612} best=-189564.05953033612
94: neval=440{'avg': -189052.64698349638, 'max': -54934.16680695074, 'min': -189564.05953033612} best=-189564.05953033612
95: neval=440{'avg': -188504.1450637845, 'max': -66955.14700686978, 'min': -189564.05953033612} best=-189564.05953033612
96: neval=440{'avg': -188418.89340912353, 'max': -297.0495682289402, 'min': -189564.05953033612} best=-189564.05953033612
97: neval=442{'avg': -189107.4530372562, 'max': -88633.21537267661, 'min': -189564.05953033612} best=-189564.05953033612
98: neval=419{'avg': -189059.19863230461, 'max': -47069.96905014199, 'min': -189564.05953033612} best=-189564.05953033612
99: neval=451{'avg': -188387.5890459394, 'max': 51887.812666881306, 'min': -189564.05953033612} best=-189564.05953033612


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 70, 72, 73]
best_individual.trans_facility = [53, 54, 87, 118, 125, 143, 162]
best_individual.unused_cities = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174}
best_individual.fitness.values = (-190632.6498245605,)