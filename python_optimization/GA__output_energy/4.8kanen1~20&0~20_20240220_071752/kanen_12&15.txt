局----------------------  実行情報  ----------------------
実行時間＝5720秒
個体数＝1350
合計世代数＝100
===============================
Total cost: -159842.25750752972
===============================
------------------------  前提  ------------------------

waste=kanen

ごみ量37位以内：
札幌市 (349353), 函館市 (66649), 旭川市 (64890), 苫小牧市 (42288), 釧路市 (38335), 帯広市 (35291), 千歳市 (25770), 小樽市 (25049), 江別市 (24906), 北見市 (20809), 室蘭市 (20448), 岩見沢市 (12638), 登別市 (11426), 北広島市 (10822), 石狩市 (9341), 音更町 (7531), 稚内市 (7127), 恵庭市 (6987), 伊達市 (6907), 網走市 (6299), 滝川市 (5831), 北斗市 (5150), 七飯町 (5008), 中標津町 (4837), 根室市 (4736), 幕別町 (4414), 新ひだか町 (4277), 釧路町 (4090), 美幌町 (4063), 白老町 (3395), 紋別市 (3325), 中札内村 (2807), 芽室町 (2638), 東神楽町 (2584), 余市町 (2489), 砂川市 (2419), せたな町 (2370)

焼却施設数: 12
中継施設数: 15

輸送単価＝ 4.8 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='kanen'
unit ='t/year'

inc_size= [823976, 101201, 7127, 5467, 1959, 880, 282, 110, 33, 24, 24, 13]
inc_facility = ['札幌市', '弟子屈町', '稚内市', '音威子府村', '浜頓別町', '遠別町', '猿払村', '中頓別町', '豊富町', '天塩町', '幌延町', '中川町']
inc_blocks = [['南幌町', '札幌市', '江別市', '北広島市', '石狩市', '当別町', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町', '占冠村'], ['士別市', '名寄市', '和寒町', '剣淵町', '下川町', '美深町', '音威子府村', '滝上町', '西興部村'], ['中川町'], ['浜頓別町', '枝幸町', '興部町', '雄武町'], ['天塩町'], ['稚内市'], ['中頓別町'], ['猿払村'], ['豊富町'], ['幌延町'], ['網走市', '清里町', '斜里町', '小清水町', '足寄町', '厚岸町', '浜中町', '標茶町', '弟子屈町', '鶴居村', '別海町', '中標津町', '標津町', '羅臼町'], ['小平町', '苫前町', '羽幌町', '初山別村', '遠別町']]

trans_size=[83618, 77675, 60024, 46307, 43784, 34187, 32485, 32045, 20448, 19659, 17415, 14578, 11426, 9414, 4736]
trans_facility = ['函館市', '深川市', '清水町', '苫小牧市', '釧路市', '千歳市', '北見市', '小樽市', '室蘭市', '岩見沢市', '豊浦町', '砂川市', '登別市', '新ひだか町', '根室市']
trans_blocks = [['夕張市', '岩見沢市', '美唄市', '三笠市', '由仁町', '長沼町', '栗山町', '月形町', '新篠津村'], ['芦別市', '赤平市', '滝川市', '砂川市', '歌志内市', '奈井江町', '上砂川町', '浦臼町', '新十津川町', '富良野市', '上富良野町', '中富良野町'], ['深川市', '妹背牛町', '秩父別町', '雨竜町', '北竜町', '沼田町', '旭川市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '幌加内町', '留萌市', '増毛町'], ['千歳市', '恵庭市', '厚真町', '安平町'], ['小樽市', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村'], ['室蘭市'], ['苫小牧市', '白老町', 'むかわ町'], ['根室市'], ['島牧村', '寿都町', '黒松内町', '伊達市', '豊浦町', '壮瞥町', '洞爺湖町', '八雲町', '長万部町', '今金町', 'せたな町'], ['日高町', '平取町', '新冠町', '浦河町', '様似町', 'えりも町', '新ひだか町'], ['函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '江差町', '上ノ国町', '厚沢部町', '乙部町'], ['北見市', '紋別市', '美幌町', '津別町', '訓子府町', '置戸町', '佐呂間町', '遠軽町', '湧別町', '大空町', '陸別町'], ['南富良野町', '帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町'], ['本別町', '浦幌町', '釧路市', '釧路町', '白糠町'], ['登別市']]

arrows = [[['札幌市'], ['小樽市', '岩見沢市', '新ひだか町', '函館市', '砂川市', '深川市', '室蘭市', '苫小牧市', '登別市', '清水町', '豊浦町', '千歳市']], [['弟子屈町'], ['根室市', '釧路市', '北見市']]]


---------------------  エネルギー情報  ---------------------
[20833.185455875002, 260017.92600707093, -471745.7479293797, 31052.378958904108]

EL_direct: {'札幌市': 7993.286727562501, '弟子屈町': 9212.448358208332, '稚内市': 0.0, '音威子府村': 2746.796026270833, '浜頓別町': 530.9455152083335, '遠別町': 349.7088286250001, '猿払村': 0.0, '中頓別町': 0.0, '豊富町': 0.0, '天塩町': 0.0, '幌延町': 0.0, '中川町': 0.0}
ED_inc: {'札幌市': -559012.0781518063, '弟子屈町': 48653.467446550654, '稚内市': 15144.566798995975, '音威子府村': 12515.473550343351, '浜頓別町': 5730.605050750211, '遠別町': 3010.651902275182, '猿払村': 1163.6509218695028, '中頓別町': 518.0804921426532, '豊富町': 180.0454620005565, '天塩町': 135.67844323768028, '幌延町': 135.67844323768028, '中川町': 78.43171102319175}

EL_indirect: {'函館市': 82574.7988576593, '深川市': 44211.4962011125, '清水町': 49332.10393117067, '苫小牧市': 10141.120542156501, '釧路市': 10351.630949681668, '千歳市': 5335.555729497501, '北見市': 12908.488427206668, '小樽市': 5947.0408341825005, '室蘭市': 8068.9939499520015, '岩見沢市': 3640.2421771495005, '豊浦町': 10840.559320391669, '砂川市': 5600.893777901499, '登別市': 4112.243634096, '新ひだか町': 5330.977747872834, '根室市': 1621.7799270400005}
ED_trans: {'函館市': 5113.297972602739, '深川市': 4749.8794520547945, '清水町': 3670.508712328767, '苫小牧市': 2831.7047671232876, '釧路市': 2677.421589041096, '千歳市': 2090.5584657534246, '北見市': 1986.48, '小樽市': 1959.5736986301372, '室蘭市': 1250.409205479452, '岩見沢市': 1202.1613150684934, '豊浦町': 1064.9391780821918, '砂川市': 891.454684931507, '登別市': 698.7077260273974, '新ひだか町': 575.6725479452055, '根室市': 289.6096438356164}

----------------------  輸送情報  ----------------------

direct 札幌市(1088/2257) t/day → receive from: 南幌町, 札幌市, 江別市, 北広島市, 石狩市, 当別町, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町, 占冠村
indirect 札幌市(1169/2257) t/day → receive from: 中継施設＝ 小樽市(32045) → receive from: 小樽市, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村
岩見沢市(19659) → receive from: 夕張市, 岩見沢市, 美唄市, 三笠市, 由仁町, 長沼町, 栗山町, 月形町, 新篠津村
新ひだか町(9414) → receive from: 日高町, 平取町, 新冠町, 浦河町, 様似町, えりも町, 新ひだか町
函館市(83618) → receive from: 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 江差町, 上ノ国町, 厚沢部町, 乙部町
砂川市(14578) → receive from: 芦別市, 赤平市, 滝川市, 砂川市, 歌志内市, 奈井江町, 上砂川町, 浦臼町, 新十津川町, 富良野市, 上富良野町, 中富良野町
深川市(77675) → receive from: 深川市, 妹背牛町, 秩父別町, 雨竜町, 北竜町, 沼田町, 旭川市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 幌加内町, 留萌市, 増毛町
室蘭市(20448) → receive from: 室蘭市
苫小牧市(46307) → receive from: 苫小牧市, 白老町, むかわ町
登別市(11426) → receive from: 登別市
清水町(60024) → receive from: 南富良野町, 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町
豊浦町(17415) → receive from: 島牧村, 寿都町, 黒松内町, 伊達市, 豊浦町, 壮瞥町, 洞爺湖町, 八雲町, 長万部町, 今金町, せたな町
千歳市(34187) → receive from: 千歳市, 恵庭市, 厚真町, 安平町
direct 弟子屈町(55/277) t/day → receive from: 網走市, 清里町, 斜里町, 小清水町, 足寄町, 厚岸町, 浜中町, 標茶町, 弟子屈町, 鶴居村, 別海町, 中標津町, 標津町, 羅臼町
indirect 弟子屈町(222/277) t/day → receive from: 中継施設＝ 根室市(4736) → receive from: 根室市
釧路市(43784) → receive from: 本別町, 浦幌町, 釧路市, 釧路町, 白糠町
北見市(32485) → receive from: 北見市, 紋別市, 美幌町, 津別町, 訓子府町, 置戸町, 佐呂間町, 遠軽町, 湧別町, 大空町, 陸別町
direct 稚内市(20/20) t/day → receive from: 稚内市
direct 音威子府村(15/15) t/day → receive from: 士別市, 名寄市, 和寒町, 剣淵町, 下川町, 美深町, 音威子府村, 滝上町, 西興部村
direct 浜頓別町(5/5) t/day → receive from: 浜頓別町, 枝幸町, 興部町, 雄武町
direct 遠別町(2/2) t/day → receive from: 小平町, 苫前町, 羽幌町, 初山別村, 遠別町
direct 猿払村(1/1) t/day → receive from: 猿払村
direct 中頓別町(0/0) t/day → receive from: 中頓別町
direct 豊富町(0/0) t/day → receive from: 豊富町
direct 天塩町(0/0) t/day → receive from: 天塩町
direct 幌延町(0/0) t/day → receive from: 幌延町
direct 中川町(0/0) t/day → receive from: 中川町

----------------------  遺伝情報  ----------------------

個体数＝1350
世代数＝100
0: neval=1350{'avg': inf, 'max': inf, 'min': 193574.24687901983} best=193574.24687901983
1: neval=1062{'avg': inf, 'max': inf, 'min': 129837.62130673372} best=129837.62130673372
2: neval=1081{'avg': inf, 'max': inf, 'min': 123685.73671587124} best=123685.73671587124
3: neval=1042{'avg': inf, 'max': inf, 'min': 65300.094741988505} best=65300.094741988505
4: neval=1052{'avg': inf, 'max': inf, 'min': 56051.61601425067} best=56051.61601425067
5: neval=1063{'avg': inf, 'max': inf, 'min': 56051.61601425067} best=56051.61601425067
6: neval=1060{'avg': inf, 'max': inf, 'min': 56051.61601425067} best=56051.61601425067
7: neval=1061{'avg': inf, 'max': inf, 'min': 35049.859697502456} best=35049.859697502456
8: neval=1085{'avg': inf, 'max': inf, 'min': 27950.61748970808} best=27950.61748970808
9: neval=1084{'avg': inf, 'max': inf, 'min': 27950.61748970808} best=27950.61748970808
10: neval=1102{'avg': inf, 'max': inf, 'min': 6296.8245059815235} best=6296.8245059815235
11: neval=1039{'avg': inf, 'max': inf, 'min': 10906.544497456081} best=6296.8245059815235
12: neval=1076{'avg': inf, 'max': inf, 'min': 21277.76320545315} best=6296.8245059815235
13: neval=1079{'avg': inf, 'max': inf, 'min': -4767.612879933105} best=-4767.612879933105
14: neval=1082{'avg': inf, 'max': inf, 'min': 10535.520824011783} best=-4767.612879933105
15: neval=1081{'avg': inf, 'max': inf, 'min': -2474.1978444639026} best=-4767.612879933105
16: neval=1075{'avg': inf, 'max': inf, 'min': -9722.086601511874} best=-9722.086601511874
17: neval=1054{'avg': inf, 'max': inf, 'min': -8536.134225928105} best=-9722.086601511874
18: neval=1093{'avg': 47663.75634433361, 'max': 369929.6667157091, 'min': -27503.91033837471} best=-27503.91033837471
19: neval=1100{'avg': 36483.888093678506, 'max': 352779.82582754735, 'min': -39342.6979571413} best=-39342.6979571413
20: neval=1085{'avg': inf, 'max': inf, 'min': -41277.16407560647} best=-41277.16407560647
21: neval=1054{'avg': inf, 'max': inf, 'min': -99209.08513929696} best=-99209.08513929696
22: neval=1082{'avg': 12492.197815194208, 'max': 430325.62599063583, 'min': -52450.12478981931} best=-99209.08513929696
23: neval=1055{'avg': 5067.34634983333, 'max': 493552.8721960337, 'min': -52450.12478981931} best=-99209.08513929696
24: neval=1068{'avg': -3700.6150979438453, 'max': 387191.60704407835, 'min': -50959.84624889997} best=-99209.08513929696
25: neval=1010{'avg': inf, 'max': inf, 'min': -58041.146959983824} best=-99209.08513929696
26: neval=1080{'avg': -21215.214240928166, 'max': 443037.26986191224, 'min': -64376.802454537494} best=-99209.08513929696
27: neval=1079{'avg': -30076.65386860524, 'max': 339110.2187380507, 'min': -73169.2418007993} best=-99209.08513929696
28: neval=1081{'avg': -35717.51898481851, 'max': 284765.9647387791, 'min': -83432.92467693775} best=-99209.08513929696
29: neval=1084{'avg': -40898.73423270795, 'max': 393308.29979946243, 'min': -83432.92467693775} best=-99209.08513929696
30: neval=1075{'avg': -45919.93436004142, 'max': 419378.9548492284, 'min': -87688.38595034441} best=-99209.08513929696
31: neval=1045{'avg': -52566.690537308015, 'max': 412392.78965018864, 'min': -92825.86274217056} best=-99209.08513929696
32: neval=1058{'avg': -59667.9575052297, 'max': 272968.0348526402, 'min': -100440.6290661133} best=-100440.6290661133
33: neval=1091{'avg': -64422.916728583696, 'max': 260211.5615994394, 'min': -101242.79736757732} best=-101242.79736757732
34: neval=1069{'avg': -71610.16781504116, 'max': 245927.1696911432, 'min': -104309.0365499541} best=-104309.0365499541
35: neval=1085{'avg': -78795.44770246201, 'max': 226568.6511071636, 'min': -119542.14426967897} best=-119542.14426967897
36: neval=1082{'avg': -86565.18456627749, 'max': 54640.81841719472, 'min': -122377.36207872376} best=-122377.36207872376
37: neval=1056{'avg': -90784.55024867004, 'max': 288870.89368967444, 'min': -128229.49904163384} best=-128229.49904163384
38: neval=1036{'avg': -100091.53396925365, 'max': 182379.35422501853, 'min': -133505.26949454503} best=-133505.26949454503
39: neval=1010{'avg': -108779.09464670974, 'max': 73753.05579229485, 'min': -133505.26949454503} best=-133505.26949454503
40: neval=1071{'avg': -114142.46657453603, 'max': 124665.26895115306, 'min': -131423.09622743854} best=-133505.26949454503
41: neval=1071{'avg': -118131.9792347407, 'max': 118919.11320196305, 'min': -133829.5993657505} best=-133829.5993657505
42: neval=1081{'avg': -120416.4833391746, 'max': 228876.17492748075, 'min': -134205.59310806947} best=-134205.59310806947
43: neval=1034{'avg': -124192.42233853124, 'max': 162534.05570013705, 'min': -137188.30203479278} best=-137188.30203479278
44: neval=1069{'avg': -125999.32642341207, 'max': 91584.82309482188, 'min': -137188.30203479278} best=-137188.30203479278
45: neval=1069{'avg': -128013.76305542907, 'max': 239532.95506165488, 'min': -138512.82789311156} best=-138512.82789311156
46: neval=1060{'avg': -129766.33855501696, 'max': 150607.96752401377, 'min': -138512.82789311156} best=-138512.82789311156
47: neval=1102{'avg': -131972.48886589948, 'max': 278684.9779825024, 'min': -139151.96248012324} best=-139151.96248012324
48: neval=1066{'avg': -131872.81672930595, 'max': 203954.12440828688, 'min': -141223.87890777396} best=-141223.87890777396
49: neval=1093{'avg': -133647.266834502, 'max': 228750.79804785957, 'min': -141223.87890777396} best=-141223.87890777396
50: neval=1065{'avg': -135929.47866357968, 'max': 172852.28886773103, 'min': -146658.65942145095} best=-146658.65942145095
51: neval=1072{'avg': -137603.33229646704, 'max': 262152.35051327164, 'min': -146658.65942145095} best=-146658.65942145095
52: neval=1073{'avg': -138364.4937415182, 'max': 178315.781693686, 'min': -147183.11602990585} best=-147183.11602990585
53: neval=1057{'avg': -139940.85033391503, 'max': 134333.90894111153, 'min': -148002.9252765022} best=-148002.9252765022
54: neval=1058{'avg': -141550.85913751597, 'max': 206225.2621992824, 'min': -149198.31460402953} best=-149198.31460402953
55: neval=1033{'avg': -142729.7926087972, 'max': 175119.2852809372, 'min': -151050.6387888763} best=-151050.6387888763
56: neval=1083{'avg': -144536.6079466634, 'max': 161859.07560084053, 'min': -151709.75634594448} best=-151709.75634594448
57: neval=1075{'avg': -146090.87115404446, 'max': 163685.11254373737, 'min': -151709.75634594448} best=-151709.75634594448
58: neval=1104{'avg': -146783.38120445854, 'max': 197877.03508769168, 'min': -151863.58555467066} best=-151863.58555467066
59: neval=1090{'avg': -148224.9689507525, 'max': 115320.68543617046, 'min': -151863.58555467066} best=-151863.58555467066
60: neval=1045{'avg': -148956.80412047368, 'max': 159425.29039300288, 'min': -151863.58555467066} best=-151863.58555467066
61: neval=1075{'avg': -149807.7322092609, 'max': 160214.63494827723, 'min': -151863.58555467066} best=-151863.58555467066
62: neval=1123{'avg': -149930.06828512298, 'max': 141639.06894922841, 'min': -151863.58555467066} best=-151863.58555467066
63: neval=1058{'avg': -149836.97947808733, 'max': 62152.4323150964, 'min': -151863.58555467066} best=-151863.58555467066
64: neval=1119{'avg': -148280.7515126438, 'max': 207346.3220493892, 'min': -151863.58555467066} best=-151863.58555467066
65: neval=1088{'avg': -150235.45236503056, 'max': 122527.8109808098, 'min': -151863.58555467066} best=-151863.58555467066
66: neval=1079{'avg': -150229.57422975157, 'max': 76885.22869095612, 'min': -151863.58555467066} best=-151863.58555467066
67: neval=1009{'avg': -150361.41016825475, 'max': 211629.07984819205, 'min': -151863.58555467066} best=-151863.58555467066
68: neval=1082{'avg': -151039.216889411, 'max': 109660.82817375216, 'min': -151863.58555467066} best=-151863.58555467066
69: neval=1062{'avg': -150840.00173342036, 'max': 101739.73676273311, 'min': -151863.58555467066} best=-151863.58555467066
70: neval=1091{'avg': -149395.44593503568, 'max': 242013.8516142741, 'min': -151863.58555467066} best=-151863.58555467066
71: neval=1073{'avg': -150802.63103803052, 'max': 104161.40122229024, 'min': -151863.58555467066} best=-151863.58555467066
72: neval=1058{'avg': -149739.01970197566, 'max': 237198.37447687922, 'min': -151863.58555467066} best=-151863.58555467066
73: neval=1055{'avg': -150542.825765042, 'max': 70839.30925296938, 'min': -151863.58555467066} best=-151863.58555467066
74: neval=1063{'avg': -151218.69057281362, 'max': 47564.555316683385, 'min': -151863.58555467066} best=-151863.58555467066
75: neval=1026{'avg': -150833.51656265603, 'max': 98280.43908802673, 'min': -151863.58555467066} best=-151863.58555467066
76: neval=1068{'avg': -149943.09589163848, 'max': 219087.8000539153, 'min': -151863.58555467066} best=-151863.58555467066
77: neval=1077{'avg': -149900.33158948523, 'max': 79500.44686193012, 'min': -151863.58555467066} best=-151863.58555467066
78: neval=1085{'avg': -149990.67786690482, 'max': 120161.75747511265, 'min': -151863.58555467066} best=-151863.58555467066
79: neval=1063{'avg': -149982.88917110988, 'max': 144812.41382513617, 'min': -151863.58555467066} best=-151863.58555467066
80: neval=1070{'avg': -150552.9154913311, 'max': 128848.57597981437, 'min': -151863.58555467066} best=-151863.58555467066
81: neval=1089{'avg': -151092.08283717433, 'max': 65199.552674646184, 'min': -151863.58555467066} best=-151863.58555467066
82: neval=1065{'avg': -149995.5890881197, 'max': 116864.18267991781, 'min': -151863.58555467066} best=-151863.58555467066
83: neval=1074{'avg': -150443.05768101866, 'max': 128255.11134199813, 'min': -151863.58555467066} best=-151863.58555467066
84: neval=1082{'avg': -150401.07499303506, 'max': 80875.1402148816, 'min': -151863.58555467066} best=-151863.58555467066
85: neval=1101{'avg': -150386.54621520758, 'max': 78375.91311202443, 'min': -151863.58555467066} best=-151863.58555467066
86: neval=1069{'avg': -150176.48510905218, 'max': 135357.40883427908, 'min': -151863.58555467066} best=-151863.58555467066
87: neval=1076{'avg': -150592.74000437272, 'max': 163147.4322315871, 'min': -151863.58555467066} best=-151863.58555467066
88: neval=1048{'avg': -150109.1592437923, 'max': 146571.00611987253, 'min': -151863.58555467066} best=-151863.58555467066
89: neval=1091{'avg': -151294.81670186724, 'max': 48222.63484711213, 'min': -151863.58555467066} best=-151863.58555467066
90: neval=1057{'avg': -150560.07697762264, 'max': 135124.5222350321, 'min': -151863.58555467066} best=-151863.58555467066
91: neval=1089{'avg': -150069.26116227216, 'max': 299031.2830168626, 'min': -151863.58555467066} best=-151863.58555467066
92: neval=1096{'avg': -150849.83105934336, 'max': 164462.05706838844, 'min': -151863.58555467066} best=-151863.58555467066
93: neval=1048{'avg': -151095.91846319966, 'max': 79739.88400568871, 'min': -151863.58555467066} best=-151863.58555467066
94: neval=1083{'avg': -150568.5517024907, 'max': 235642.62777305956, 'min': -151863.58555467066} best=-151863.58555467066
95: neval=1037{'avg': -150890.36773712697, 'max': 91708.10040383133, 'min': -151863.58555467066} best=-151863.58555467066
96: neval=1083{'avg': -150680.4907150228, 'max': 276060.5831370092, 'min': -151863.58555467066} best=-151863.58555467066
97: neval=1048{'avg': -150793.91154707863, 'max': 132569.9275199583, 'min': -151863.58555467066} best=-151863.58555467066
98: neval=1075{'avg': -149253.37750593363, 'max': 277998.74250443676, 'min': -151863.58555467066} best=-151863.58555467066
99: neval=1091{'avg': -149851.86699069754, 'max': 169742.16124305574, 'min': -151863.58555467066} best=-151863.58555467066


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 107, 108, 120, 117, 118, 121, 119, 123, 124, 167, 116]
best_individual.trans_facility = [1, 7, 9, 26, 32, 52, 53, 170, 56, 69, 70, 125, 149, 162, 54]
best_individual.unused_cities = {0, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174}
best_individual.fitness.values = (-159842.25750752972,)