局----------------------  実行情報  ----------------------
実行時間＝5940秒
個体数＝1350
合計世代数＝100
==============================
Total cost: -143824.5938452053
==============================
------------------------  前提  ------------------------

waste=kanen

ごみ量37位以内：
札幌市 (349353), 函館市 (66649), 旭川市 (64890), 苫小牧市 (42288), 釧路市 (38335), 帯広市 (35291), 千歳市 (25770), 小樽市 (25049), 江別市 (24906), 北見市 (20809), 室蘭市 (20448), 岩見沢市 (12638), 登別市 (11426), 北広島市 (10822), 石狩市 (9341), 音更町 (7531), 稚内市 (7127), 恵庭市 (6987), 伊達市 (6907), 網走市 (6299), 滝川市 (5831), 北斗市 (5150), 七飯町 (5008), 中標津町 (4837), 根室市 (4736), 幕別町 (4414), 新ひだか町 (4277), 釧路町 (4090), 美幌町 (4063), 白老町 (3395), 紋別市 (3325), 中札内村 (2807), 芽室町 (2638), 東神楽町 (2584), 余市町 (2489), 砂川市 (2419), せたな町 (2370)

焼却施設数: 15
中継施設数: 12

輸送単価＝ 4.8 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='kanen'
unit ='t/year'

inc_size= [671699, 257531, 7127, 2033, 1189, 528, 352, 282, 101, 97, 37, 37, 33, 26, 24]
inc_facility = ['札幌市', '旭川市', '稚内市', '浜頓別町', '小平町', '羽幌町', '中頓別町', '猿払村', '増毛町', '苫前町', '初山別村', '幌延町', '豊富町', '遠別町', '天塩町']
inc_blocks = [['夕張市', '岩見沢市', '美唄市', '三笠市', '南幌町', '長沼町', '栗山町', '月形町', '札幌市', '江別市', '北広島市', '石狩市', '当別町', '新篠津村', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町'], ['芦別市', '赤平市', '滝川市', '砂川市', '歌志内市', '深川市', '奈井江町', '上砂川町', '浦臼町', '新十津川町', '妹背牛町', '雨竜町', '旭川市', '士別市', '名寄市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町', '南富良野町', '和寒町', '剣淵町', '下川町', '幌加内町', '斜里町'], ['増毛町'], ['秩父別町', '北竜町', '沼田町', '留萌市', '小平町'], ['苫前町'], ['羽幌町'], ['初山別村'], ['遠別町'], ['天塩町'], ['稚内市'], ['猿払村'], ['浜頓別町', '枝幸町', '興部町', '西興部村', '雄武町'], ['美深町', '音威子府村', '中頓別町'], ['豊富町'], ['中川町', '幌延町']]

trans_size=[83618, 61174, 46307, 45633, 34892, 32738, 32045, 31874, 17415, 14815, 9414, 6860]
trans_facility = ['函館市', '帯広市', '苫小牧市', '釧路市', '千歳市', '北見市', '小樽市', '登別市', '豊浦町', '中標津町', '新ひだか町', '遠軽町']
trans_blocks = [['北見市', '網走市', '美幌町', '津別町', '小清水町', '訓子府町', '置戸町', '大空町', '陸別町'], ['由仁町', '千歳市', '恵庭市', '厚真町', '安平町', '占冠村'], ['室蘭市', '登別市'], ['苫小牧市', '白老町', 'むかわ町'], ['小樽市', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村'], ['函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '江差町', '上ノ国町', '厚沢部町', '乙部町'], ['島牧村', '寿都町', '黒松内町', '伊達市', '豊浦町', '壮瞥町', '洞爺湖町', '八雲町', '長万部町', '今金町', 'せたな町'], ['日高町', '平取町', '新冠町', '浦河町', '様似町', 'えりも町', '新ひだか町'], ['紋別市', '佐呂間町', '遠軽町', '湧別町', '滝上町'], ['帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町', '本別町', '足寄町', '浦幌町'], ['釧路市', '釧路町', '厚岸町', '標茶町', '鶴居村', '白糠町'], ['清里町', '浜中町', '弟子屈町', '根室市', '別海町', '中標津町', '標津町', '羅臼町']]

arrows = [[['札幌市'], ['小樽市', '新ひだか町', '函館市', '苫小牧市', '登別市', '豊浦町', '千歳市']], [['旭川市'], ['釧路市', '遠軽町', '中標津町', '帯広市', '北見市']]]


---------------------  エネルギー情報  ---------------------
[26634.342480958338, 253771.94371411775, -449717.5682594596, 25486.688219178082]

EL_direct: {'札幌市': 14533.605841625, '旭川市': 11162.155546479167, '稚内市': 0.0, '浜頓別町': 601.4763088750001, '小平町': 204.39033793750002, '羽幌町': 0.0, '中頓別町': 129.2457632916667, '猿払村': 0.0, '増毛町': 0.0, '苫前町': 0.0, '初山別村': 0.0, '幌延町': 3.4686827500000006, '豊富町': 0.0, '遠別町': 0.0, '天塩町': 0.0}
ED_inc: {'札幌市': -455702.4159471758, '旭川市': -25252.816879635455, '稚内市': 15144.566798995975, '浜頓別町': 5900.361947226432, '小平町': 3846.0576958165507, '羽幌町': 1973.533764116069, '中頓別町': 1404.1348849457947, '猿払村': 1163.6509218695028, '増毛町': 481.03472475266034, '苫前町': 464.41289336074425, '初山別村': 199.24585617849738, '幌延町': 199.24585617849738, '豊富町': 180.0454620005565, '遠別町': 145.69531867270277, '天塩町': 135.67844323768028}

EL_indirect: {'函館市': 82574.7988576593, '帯広市': 36439.57152811949, '苫小牧市': 10141.120542156501, '釧路市': 39269.455331101664, '千歳市': 5788.847229251666, '北見市': 21201.771620581505, '小樽市': 5947.0408341825005, '登別市': 14184.575368704001, '豊浦町': 10840.559320391669, '中標津町': 17885.003648145834, '新ひだか町': 5330.977747872834, '遠軽町': 4168.2216859508335}
ED_trans: {'函館市': 5113.297972602739, '帯広市': 3740.832, '苫小牧市': 2831.7047671232876, '釧路市': 2790.489205479452, '千歳市': 2133.669698630137, '北見市': 2001.9511232876712, '小樽市': 1959.5736986301372, '登別市': 1949.1169315068496, '豊浦町': 1064.9391780821918, '中標津町': 905.9473972602739, '新ひだか町': 575.6725479452055, '遠軽町': 419.493698630137}

----------------------  輸送情報  ----------------------

direct 札幌市(1140/1840) t/day → receive from: 夕張市, 岩見沢市, 美唄市, 三笠市, 南幌町, 長沼町, 栗山町, 月形町, 札幌市, 江別市, 北広島市, 石狩市, 当別町, 新篠津村, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町
indirect 札幌市(700/1840) t/day → receive from: 中継施設＝ 小樽市(32045) → receive from: 小樽市, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村
新ひだか町(9414) → receive from: 日高町, 平取町, 新冠町, 浦河町, 様似町, えりも町, 新ひだか町
函館市(83618) → receive from: 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 江差町, 上ノ国町, 厚沢部町, 乙部町
苫小牧市(46307) → receive from: 苫小牧市, 白老町, むかわ町
登別市(31874) → receive from: 室蘭市, 登別市
豊浦町(17415) → receive from: 島牧村, 寿都町, 黒松内町, 伊達市, 豊浦町, 壮瞥町, 洞爺湖町, 八雲町, 長万部町, 今金町, せたな町
千歳市(34892) → receive from: 由仁町, 千歳市, 恵庭市, 厚真町, 安平町, 占冠村
direct 旭川市(264/706) t/day → receive from: 芦別市, 赤平市, 滝川市, 砂川市, 歌志内市, 深川市, 奈井江町, 上砂川町, 浦臼町, 新十津川町, 妹背牛町, 雨竜町, 旭川市, 士別市, 名寄市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町, 南富良野町, 和寒町, 剣淵町, 下川町, 幌加内町, 斜里町
indirect 旭川市(442/706) t/day → receive from: 中継施設＝ 釧路市(45633) → receive from: 釧路市, 釧路町, 厚岸町, 標茶町, 鶴居村, 白糠町
遠軽町(6860) → receive from: 紋別市, 佐呂間町, 遠軽町, 湧別町, 滝上町
中標津町(14815) → receive from: 清里町, 浜中町, 弟子屈町, 根室市, 別海町, 中標津町, 標津町, 羅臼町
帯広市(61174) → receive from: 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町, 本別町, 足寄町, 浦幌町
北見市(32738) → receive from: 北見市, 網走市, 美幌町, 津別町, 小清水町, 訓子府町, 置戸町, 大空町, 陸別町
direct 稚内市(20/20) t/day → receive from: 稚内市
direct 浜頓別町(6/6) t/day → receive from: 浜頓別町, 枝幸町, 興部町, 西興部村, 雄武町
direct 小平町(3/3) t/day → receive from: 秩父別町, 北竜町, 沼田町, 留萌市, 小平町
direct 羽幌町(1/1) t/day → receive from: 羽幌町
direct 中頓別町(1/1) t/day → receive from: 美深町, 音威子府村, 中頓別町
direct 猿払村(1/1) t/day → receive from: 猿払村
direct 増毛町(0/0) t/day → receive from: 増毛町
direct 苫前町(0/0) t/day → receive from: 苫前町
direct 初山別村(0/0) t/day → receive from: 初山別村
direct 幌延町(0/0) t/day → receive from: 中川町, 幌延町
direct 豊富町(0/0) t/day → receive from: 豊富町
direct 遠別町(0/0) t/day → receive from: 遠別町
direct 天塩町(0/0) t/day → receive from: 天塩町

----------------------  遺伝情報  ----------------------

個体数＝1350
世代数＝100
0: neval=1350{'avg': inf, 'max': inf, 'min': 247092.03302664665} best=247092.03302664665
1: neval=1060{'avg': inf, 'max': inf, 'min': 227757.64223464325} best=227757.64223464325
2: neval=1089{'avg': inf, 'max': inf, 'min': 215049.2085152249} best=215049.2085152249
3: neval=1060{'avg': inf, 'max': inf, 'min': 152777.5020012532} best=152777.5020012532
4: neval=1090{'avg': inf, 'max': inf, 'min': 123299.34518881429} best=123299.34518881429
5: neval=1084{'avg': inf, 'max': inf, 'min': 115827.9606318953} best=115827.9606318953
6: neval=1076{'avg': inf, 'max': inf, 'min': 98079.91265845182} best=98079.91265845182
7: neval=1084{'avg': inf, 'max': inf, 'min': 98079.91265845182} best=98079.91265845182
8: neval=1068{'avg': inf, 'max': inf, 'min': 108855.07778220506} best=98079.91265845182
9: neval=1070{'avg': inf, 'max': inf, 'min': 68949.01587596312} best=68949.01587596312
10: neval=1075{'avg': inf, 'max': inf, 'min': 68949.01587596312} best=68949.01587596312
11: neval=1078{'avg': inf, 'max': inf, 'min': 68949.01587596312} best=68949.01587596312
12: neval=1048{'avg': inf, 'max': inf, 'min': 68949.01587596312} best=68949.01587596312
13: neval=1052{'avg': inf, 'max': inf, 'min': 63050.02892775738} best=63050.02892775738
14: neval=1079{'avg': 149447.01004081505, 'max': 635782.8029494046, 'min': 63050.02892775738} best=63050.02892775738
15: neval=1043{'avg': 135266.48920138134, 'max': 472068.45724443, 'min': 25338.318535813552} best=25338.318535813552
16: neval=1096{'avg': inf, 'max': inf, 'min': 6698.720932213069} best=6698.720932213069
17: neval=1052{'avg': inf, 'max': inf, 'min': 6698.720932213069} best=6698.720932213069
18: neval=1078{'avg': 95231.40349879453, 'max': 538278.6754143968, 'min': 6698.720932213069} best=6698.720932213069
19: neval=1070{'avg': inf, 'max': inf, 'min': 6698.720932213069} best=6698.720932213069
20: neval=1071{'avg': inf, 'max': inf, 'min': 2070.5315556994065} best=2070.5315556994065
21: neval=1052{'avg': 53006.750779280286, 'max': 451763.8248265764, 'min': -15791.568737029818} best=-15791.568737029818
22: neval=1050{'avg': 40626.70034589764, 'max': 475214.58936845337, 'min': -15791.568737029818} best=-15791.568737029818
23: neval=1054{'avg': 33362.22884679663, 'max': 436280.29710462363, 'min': -17496.552871934546} best=-17496.552871934546
24: neval=1064{'avg': 26273.889893561274, 'max': 505644.4326167108, 'min': -21050.013549697287} best=-21050.013549697287
25: neval=1050{'avg': 15541.03620155019, 'max': 391757.7608521946, 'min': -21332.724219426746} best=-21332.724219426746
26: neval=1059{'avg': 7056.707804877976, 'max': 319154.52908210945, 'min': -29112.934467594187} best=-29112.934467594187
27: neval=1070{'avg': 1055.721372828969, 'max': 277339.0758986288, 'min': -33313.83598442938} best=-33313.83598442938
28: neval=1075{'avg': -7140.016347364557, 'max': 236585.50182229147, 'min': -39187.251337234164} best=-39187.251337234164
29: neval=1080{'avg': -13294.19212174106, 'max': 328733.8965542072, 'min': -48830.56960870591} best=-48830.56960870591
30: neval=1055{'avg': -19480.778056325875, 'max': 282362.8871860602, 'min': -52894.93437838259} best=-52894.93437838259
31: neval=1074{'avg': -24330.023007062024, 'max': 404708.5180880091, 'min': -61403.056342648255} best=-61403.056342648255
32: neval=1075{'avg': -30099.474883636147, 'max': 255159.7075184591, 'min': -60046.57231270126} best=-61403.056342648255
33: neval=1058{'avg': -36215.42252450403, 'max': 218575.290721091, 'min': -71517.54939209716} best=-71517.54939209716
34: neval=1045{'avg': -42460.34605631571, 'max': 237272.9888420127, 'min': -71517.54939209716} best=-71517.54939209716
35: neval=1058{'avg': -48448.70649623103, 'max': 209296.60602120197, 'min': -72549.51083588482} best=-72549.51083588482
36: neval=1065{'avg': -54173.276912855574, 'max': 246962.54796478804, 'min': -84957.3325754442} best=-84957.3325754442
37: neval=1068{'avg': -58863.496559131716, 'max': 270024.4582995517, 'min': -88741.23313523001} best=-88741.23313523001
38: neval=1045{'avg': -64694.96360662306, 'max': 253396.07473604806, 'min': -93198.33816674196} best=-93198.33816674196
39: neval=1121{'avg': -67661.7759076788, 'max': 236853.80269796815, 'min': -102287.83208695191} best=-102287.83208695191
40: neval=1045{'avg': -74328.47617946897, 'max': 220613.12675977199, 'min': -110361.38422843872} best=-110361.38422843872
41: neval=1066{'avg': -78077.6423587612, 'max': 286939.20782707643, 'min': -110361.38422843872} best=-110361.38422843872
42: neval=1066{'avg': -85046.94122000498, 'max': 184904.78520454053, 'min': -110814.81973536039} best=-110814.81973536039
43: neval=1107{'avg': -90790.20028602068, 'max': 337945.3120135234, 'min': -113263.7027441195} best=-113263.7027441195
44: neval=1064{'avg': -95401.0617913928, 'max': 309818.63152468525, 'min': -115321.43143384127} best=-115321.43143384127
45: neval=1058{'avg': -101923.62594024332, 'max': 172793.5521978838, 'min': -124360.69539424218} best=-124360.69539424218
46: neval=1076{'avg': -106567.95333329185, 'max': 173761.9987245112, 'min': -124777.26408984908} best=-124777.26408984908
47: neval=1052{'avg': -111025.73420343491, 'max': 116952.58883186456, 'min': -125389.58737790593} best=-125389.58737790593
48: neval=1053{'avg': -112957.12099270648, 'max': 265019.1793749298, 'min': -128482.24980733274} best=-128482.24980733274
49: neval=1072{'avg': -116789.98619055488, 'max': 240595.8017330187, 'min': -128731.3235357374} best=-128731.3235357374
50: neval=1054{'avg': -120933.64240032973, 'max': 277990.9260138334, 'min': -131781.32781897724} best=-131781.32781897724
51: neval=1038{'avg': -123403.9609589545, 'max': 256651.1511543746, 'min': -134130.85128827987} best=-134130.85128827987
52: neval=1101{'avg': -125787.41487289219, 'max': 290855.14251923433, 'min': -134434.81705864362} best=-134434.81705864362
53: neval=1047{'avg': -127644.186259622, 'max': 209631.3365977222, 'min': -135073.0746805463} best=-135073.0746805463
54: neval=1037{'avg': -128986.23704635563, 'max': 232920.64625975952, 'min': -135940.4676206567} best=-135940.4676206567
55: neval=1088{'avg': -129383.0713090486, 'max': 218836.3001308395, 'min': -137381.19845463708} best=-137381.19845463708
56: neval=1065{'avg': -129528.53248236078, 'max': 306459.37074027694, 'min': -137381.19845463708} best=-137381.19845463708
57: neval=1071{'avg': -132500.53138008912, 'max': 150090.66837934384, 'min': -137466.94943707332} best=-137466.94943707332
58: neval=1067{'avg': -133929.29904182616, 'max': 202082.6843989123, 'min': -137466.94943707332} best=-137466.94943707332
59: neval=1076{'avg': -133178.44432084548, 'max': 431146.9615467593, 'min': -137466.94943707332} best=-137466.94943707332
60: neval=1082{'avg': -134610.73899726736, 'max': 186966.77584568385, 'min': -137466.94943707332} best=-137466.94943707332
61: neval=1070{'avg': -135735.63867189296, 'max': 160511.26635560388, 'min': -137466.94943707332} best=-137466.94943707332
62: neval=1097{'avg': -134093.93693836028, 'max': 259879.9843192242, 'min': -137466.94943707332} best=-137466.94943707332
63: neval=1078{'avg': -134112.78604705993, 'max': 210394.94329101578, 'min': -137466.94943707332} best=-137466.94943707332
64: neval=1035{'avg': -136534.0238047568, 'max': 173228.89565917145, 'min': -137466.94943707332} best=-137466.94943707332
65: neval=1079{'avg': -134972.92325522512, 'max': 266958.8903480979, 'min': -137466.94943707332} best=-137466.94943707332
66: neval=1076{'avg': -135518.08526822302, 'max': 199648.32534264177, 'min': -137466.94943707332} best=-137466.94943707332
67: neval=1066{'avg': -135935.9992439618, 'max': 316802.610204018, 'min': -137466.94943707332} best=-137466.94943707332
68: neval=1058{'avg': -136575.10824988983, 'max': 125595.12020719016, 'min': -137466.94943707332} best=-137466.94943707332
69: neval=1080{'avg': -135496.16128231675, 'max': 257450.53833766584, 'min': -137466.94943707332} best=-137466.94943707332
70: neval=1065{'avg': -135211.39058910773, 'max': 284228.752519925, 'min': -137466.94943707332} best=-137466.94943707332
71: neval=1087{'avg': -135591.13585313116, 'max': 262332.3940100512, 'min': -137466.94943707332} best=-137466.94943707332
72: neval=1078{'avg': -136340.73835370407, 'max': 147435.66796539543, 'min': -137466.94943707332} best=-137466.94943707332
73: neval=1072{'avg': -135787.30560801204, 'max': 114467.57487772514, 'min': -137466.94943707332} best=-137466.94943707332
74: neval=1053{'avg': -135800.56616239776, 'max': 224250.89742830326, 'min': -137466.94943707332} best=-137466.94943707332
75: neval=1056{'avg': -136681.62546579234, 'max': 226616.38920432096, 'min': -137466.94943707332} best=-137466.94943707332
76: neval=1085{'avg': -136359.00345618324, 'max': 227781.05287194264, 'min': -137466.94943707332} best=-137466.94943707332
77: neval=1081{'avg': -133157.72322919877, 'max': 248193.85880868332, 'min': -137466.94943707332} best=-137466.94943707332
78: neval=1048{'avg': -135559.68738202125, 'max': 326337.4643863597, 'min': -137466.94943707332} best=-137466.94943707332
79: neval=1103{'avg': -136022.83161746507, 'max': 305815.72040535655, 'min': -137466.94943707332} best=-137466.94943707332
80: neval=1056{'avg': -135879.08637008822, 'max': 222864.10208415403, 'min': -137466.94943707332} best=-137466.94943707332
81: neval=1071{'avg': -135909.293739993, 'max': 228780.16557647657, 'min': -137466.94943707332} best=-137466.94943707332
82: neval=1088{'avg': -135665.73640263223, 'max': 242131.88379233796, 'min': -137466.94943707332} best=-137466.94943707332
83: neval=1077{'avg': -134599.21415327908, 'max': 280223.2088707337, 'min': -137466.94943707332} best=-137466.94943707332
84: neval=1055{'avg': -136000.8983251373, 'max': 202370.4505305802, 'min': -137466.94943707332} best=-137466.94943707332
85: neval=1070{'avg': -135405.33498710813, 'max': 168851.89796194748, 'min': -137466.94943707332} best=-137466.94943707332
86: neval=1079{'avg': -135312.24731627852, 'max': 225125.24944307265, 'min': -137466.94943707332} best=-137466.94943707332
87: neval=1083{'avg': -135526.83515147326, 'max': 192022.61128248525, 'min': -137466.94943707332} best=-137466.94943707332
88: neval=1061{'avg': -135415.56089452206, 'max': 195905.29668011385, 'min': -137466.94943707332} best=-137466.94943707332
89: neval=1051{'avg': -135885.51630625586, 'max': 214483.4874502113, 'min': -137466.94943707332} best=-137466.94943707332
90: neval=1062{'avg': -136711.35389371545, 'max': 141765.45614744254, 'min': -137466.94943707332} best=-137466.94943707332
91: neval=1072{'avg': -135295.29843670936, 'max': 300996.2828616832, 'min': -137466.94943707332} best=-137466.94943707332
92: neval=1082{'avg': -136478.91868710902, 'max': 119668.70199705008, 'min': -137466.94943707332} best=-137466.94943707332
93: neval=1051{'avg': -135301.96492941742, 'max': 342596.6536411882, 'min': -137466.94943707332} best=-137466.94943707332
94: neval=1065{'avg': -135003.50403286223, 'max': 300191.1456320289, 'min': -137466.94943707332} best=-137466.94943707332
95: neval=1093{'avg': -135543.52493997096, 'max': 135954.8319432805, 'min': -137466.94943707332} best=-137466.94943707332
96: neval=1069{'avg': -135376.099397895, 'max': 335924.48471329577, 'min': -137466.94943707332} best=-137466.94943707332
97: neval=1067{'avg': -135298.80563912285, 'max': 220277.884402325, 'min': -137466.94943707332} best=-137466.94943707332
98: neval=1029{'avg': -135089.4898003469, 'max': 207877.717900349, 'min': -137466.94943707332} best=-137466.94943707332
99: neval=1075{'avg': -136085.34543496172, 'max': 269967.49019864417, 'min': -137466.94943707332} best=-137466.94943707332


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 87, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124]
best_individual.trans_facility = [125, 26, 54, 53, 32, 70, 56, 69, 136, 143, 162, 172]
best_individual.unused_cities = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174}
best_individual.fitness.values = (-143824.5938452053,)