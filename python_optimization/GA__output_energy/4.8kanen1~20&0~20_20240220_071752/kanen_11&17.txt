局----------------------  実行情報  ----------------------
実行時間＝5634秒
個体数＝1400
合計世代数＝100
===============================
Total cost: -176232.91996338422
===============================
------------------------  前提  ------------------------

waste=kanen

ごみ量38位以内：
札幌市 (349353), 函館市 (66649), 旭川市 (64890), 苫小牧市 (42288), 釧路市 (38335), 帯広市 (35291), 千歳市 (25770), 小樽市 (25049), 江別市 (24906), 北見市 (20809), 室蘭市 (20448), 岩見沢市 (12638), 登別市 (11426), 北広島市 (10822), 石狩市 (9341), 音更町 (7531), 稚内市 (7127), 恵庭市 (6987), 伊達市 (6907), 網走市 (6299), 滝川市 (5831), 北斗市 (5150), 七飯町 (5008), 中標津町 (4837), 根室市 (4736), 幕別町 (4414), 新ひだか町 (4277), 釧路町 (4090), 美幌町 (4063), 白老町 (3395), 紋別市 (3325), 中札内村 (2807), 芽室町 (2638), 東神楽町 (2584), 余市町 (2489), 砂川市 (2419), せたな町 (2370), 遠軽町 (2357)

焼却施設数: 11
中継施設数: 17

輸送単価＝ 4.8 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='kanen'
unit ='t/year'

inc_size= [765954, 157900, 7683, 7127, 1481, 549, 282, 37, 33, 26, 24]
inc_facility = ['札幌市', '釧路市', '枝幸町', '稚内市', '初山別村', '浜頓別町', '猿払村', '幌延町', '豊富町', '遠別町', '天塩町']
inc_blocks = [['南幌町', '札幌市', '江別市', '北広島市', '石狩市', '当別町', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町'], ['留萌市', '増毛町', '小平町', '苫前町', '羽幌町', '初山別村'], ['遠別町'], ['天塩町'], ['稚内市'], ['猿払村'], ['浜頓別町', '中頓別町'], ['名寄市', '下川町', '美深町', '音威子府村', '枝幸町', '紋別市', '滝上町', '興部町', '西興部村', '雄武町'], ['豊富町'], ['中川町', '幌延町'], ['斜里町', '本別町', '足寄町', '浦幌町', '釧路市', '釧路町', '厚岸町', '浜中町', '標茶町', '弟子屈町', '鶴居村', '白糠町']]

trans_size=[83618, 78531, 60024, 46307, 34734, 32045, 28870, 20448, 19659, 15724, 11426, 10694, 9414, 7726, 7532, 6721, 4736]
trans_facility = ['函館市', '旭川市', '帯広市', '苫小牧市', '千歳市', '小樽市', '北見市', '室蘭市', '岩見沢市', '滝川市', '登別市', '豊浦町', '新ひだか町', '中標津町', '網走市', '長万部町', '根室市']
trans_blocks = [['北見市', '美幌町', '津別町', '訓子府町', '置戸町', '佐呂間町', '遠軽町', '湧別町', '陸別町'], ['芦別市', '赤平市', '滝川市', '砂川市', '歌志内市', '深川市', '奈井江町', '上砂川町', '浦臼町', '新十津川町', '妹背牛町', '秩父別町', '雨竜町', '北竜町', '沼田町'], ['千歳市', '恵庭市', '厚真町', '安平町', '占冠村'], ['小樽市', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村'], ['夕張市', '岩見沢市', '美唄市', '三笠市', '由仁町', '長沼町', '栗山町', '月形町', '新篠津村'], ['苫小牧市', '白老町', 'むかわ町'], ['室蘭市'], ['伊達市', '豊浦町', '壮瞥町', '洞爺湖町'], ['日高町', '平取町', '新冠町', '浦河町', '様似町', 'えりも町', '新ひだか町'], ['函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '江差町', '上ノ国町', '厚沢部町', '乙部町'], ['登別市'], ['島牧村', '寿都町', '黒松内町', '八雲町', '長万部町', '今金町', 'せたな町'], ['旭川市', '士別市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町', '和寒町', '剣淵町', '幌加内町'], ['網走市', '清里町', '小清水町', '大空町'], ['南富良野町', '帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町'], ['根室市'], ['別海町', '中標津町', '標津町', '羅臼町']]

arrows = [[['札幌市'], ['小樽市', '岩見沢市', '新ひだか町', '滝川市', '函館市', '長万部町', '室蘭市', '苫小牧市', '登別市', '旭川市', '豊浦町', '千歳市']], [['釧路市'], ['根室市', '中標津町', '帯広市', '北見市', '網走市']]]


---------------------  エネルギー情報  ---------------------
[16151.848535062503, 226072.38840937178, -447699.96479822946, 29242.807890410964]

EL_direct: {'札幌市': 7503.434974208334, '釧路市': 3390.9531963125005, '枝幸町': 4678.151027333333, '稚内市': 0.0, '初山別村': 558.4578127916668, '浜頓別町': 17.38284166666667, '猿払村': 0.0, '幌延町': 3.4686827500000006, '豊富町': 0.0, '遠別町': 0.0, '天塩町': 0.0}
ED_inc: {'札幌市': -519648.0690076999, '釧路市': 32383.03472719959, '枝幸町': 15968.386902104026, '稚内市': 15144.566798995975, '初山別村': 4589.042298863878, '浜頓別町': 2038.7574803480984, '猿払村': 1163.6509218695028, '幌延町': 199.24585617849738, '豊富町': 180.0454620005565, '遠別町': 145.69531867270277, '天塩町': 135.67844323768028}

EL_indirect: {'函館市': 82574.7988576593, '旭川市': 35828.951353610995, '帯広市': 26609.1886427835, '苫小牧市': 10141.120542156501, '千歳市': 5732.45048792, '小樽市': 5947.0408341825005, '北見市': 14516.789832025002, '室蘭市': 8068.9939499520015, '岩見沢市': 3640.2421771495005, '滝川市': 5852.888054125668, '登別市': 4112.243634096, '豊浦町': 4638.077371243334, '新ひだか町': 5330.977747872834, '中標津町': 2782.1158314300005, '網走市': 3627.6592411735005, '長万部町': 4915.316375127167, '根室市': 1753.533476864}
ED_trans: {'函館市': 5113.297972602739, '旭川市': 4802.224438356165, '帯広市': 3670.508712328767, '苫小牧市': 2831.7047671232876, '千歳市': 2124.007890410959, '小樽市': 1959.5736986301372, '北見市': 1765.4202739726027, '室蘭市': 1250.409205479452, '岩見沢市': 1202.1613150684934, '滝川市': 961.5333698630137, '登別市': 698.7077260273974, '豊浦町': 653.9454246575343, '新ひだか町': 575.6725479452055, '中標津町': 472.45019178082197, '網走市': 460.58695890410957, '長万部町': 410.9937534246576, '根室市': 289.6096438356164}

----------------------  輸送情報  ----------------------

direct 札幌市(1087/2099) t/day → receive from: 南幌町, 札幌市, 江別市, 北広島市, 石狩市, 当別町, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町
indirect 札幌市(1012/2099) t/day → receive from: 中継施設＝ 小樽市(32045) → receive from: 小樽市, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村
岩見沢市(19659) → receive from: 夕張市, 岩見沢市, 美唄市, 三笠市, 由仁町, 長沼町, 栗山町, 月形町, 新篠津村
新ひだか町(9414) → receive from: 日高町, 平取町, 新冠町, 浦河町, 様似町, えりも町, 新ひだか町
滝川市(15724) → receive from: 芦別市, 赤平市, 滝川市, 砂川市, 歌志内市, 深川市, 奈井江町, 上砂川町, 浦臼町, 新十津川町, 妹背牛町, 秩父別町, 雨竜町, 北竜町, 沼田町
函館市(83618) → receive from: 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 江差町, 上ノ国町, 厚沢部町, 乙部町
長万部町(6721) → receive from: 島牧村, 寿都町, 黒松内町, 八雲町, 長万部町, 今金町, せたな町
室蘭市(20448) → receive from: 室蘭市
苫小牧市(46307) → receive from: 苫小牧市, 白老町, むかわ町
登別市(11426) → receive from: 登別市
旭川市(78531) → receive from: 旭川市, 士別市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町, 和寒町, 剣淵町, 幌加内町
豊浦町(10694) → receive from: 伊達市, 豊浦町, 壮瞥町, 洞爺湖町
千歳市(34734) → receive from: 千歳市, 恵庭市, 厚真町, 安平町, 占冠村
direct 釧路市(134/433) t/day → receive from: 斜里町, 本別町, 足寄町, 浦幌町, 釧路市, 釧路町, 厚岸町, 浜中町, 標茶町, 弟子屈町, 鶴居村, 白糠町
indirect 釧路市(298/433) t/day → receive from: 中継施設＝ 根室市(4736) → receive from: 根室市
中標津町(7726) → receive from: 別海町, 中標津町, 標津町, 羅臼町
帯広市(60024) → receive from: 南富良野町, 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町
北見市(28870) → receive from: 北見市, 美幌町, 津別町, 訓子府町, 置戸町, 佐呂間町, 遠軽町, 湧別町, 陸別町
網走市(7532) → receive from: 網走市, 清里町, 小清水町, 大空町
direct 枝幸町(21/21) t/day → receive from: 名寄市, 下川町, 美深町, 音威子府村, 枝幸町, 紋別市, 滝上町, 興部町, 西興部村, 雄武町
direct 稚内市(20/20) t/day → receive from: 稚内市
direct 初山別村(4/4) t/day → receive from: 留萌市, 増毛町, 小平町, 苫前町, 羽幌町, 初山別村
direct 浜頓別町(2/2) t/day → receive from: 浜頓別町, 中頓別町
direct 猿払村(1/1) t/day → receive from: 猿払村
direct 幌延町(0/0) t/day → receive from: 中川町, 幌延町
direct 豊富町(0/0) t/day → receive from: 豊富町
direct 遠別町(0/0) t/day → receive from: 遠別町
direct 天塩町(0/0) t/day → receive from: 天塩町

----------------------  遺伝情報  ----------------------

個体数＝1400
世代数＝100
0: neval=1400{'avg': inf, 'max': inf, 'min': 88994.60130995914} best=88994.60130995914
1: neval=1096{'avg': inf, 'max': inf, 'min': 82614.13033422634} best=82614.13033422634
2: neval=1110{'avg': inf, 'max': inf, 'min': 70869.5568617991} best=70869.5568617991
3: neval=1112{'avg': inf, 'max': inf, 'min': 84050.48247834017} best=70869.5568617991
4: neval=1090{'avg': inf, 'max': inf, 'min': 47383.88478249515} best=47383.88478249515
5: neval=1138{'avg': inf, 'max': inf, 'min': 42575.02267081904} best=42575.02267081904
6: neval=1081{'avg': inf, 'max': inf, 'min': 42575.02267081904} best=42575.02267081904
7: neval=1100{'avg': inf, 'max': inf, 'min': 12918.706718134028} best=12918.706718134028
8: neval=1101{'avg': inf, 'max': inf, 'min': 31473.334294686472} best=12918.706718134028
9: neval=1117{'avg': inf, 'max': inf, 'min': 17558.974371989465} best=12918.706718134028
10: neval=1074{'avg': inf, 'max': inf, 'min': -4570.072403415936} best=-4570.072403415936
11: neval=1093{'avg': inf, 'max': inf, 'min': -12293.986918345963} best=-12293.986918345963
12: neval=1102{'avg': inf, 'max': inf, 'min': -12293.986918345963} best=-12293.986918345963
13: neval=1091{'avg': inf, 'max': inf, 'min': -21665.669091401858} best=-21665.669091401858
14: neval=1145{'avg': inf, 'max': inf, 'min': -21665.669091401858} best=-21665.669091401858
15: neval=1087{'avg': inf, 'max': inf, 'min': -33034.431674105595} best=-33034.431674105595
16: neval=1124{'avg': inf, 'max': inf, 'min': -33034.431674105595} best=-33034.431674105595
17: neval=1092{'avg': inf, 'max': inf, 'min': -38950.39716352685} best=-38950.39716352685
18: neval=1129{'avg': inf, 'max': inf, 'min': -67974.82976325665} best=-67974.82976325665
19: neval=1164{'avg': 22150.817916557615, 'max': 428253.04602995917, 'min': -70073.01755483456} best=-70073.01755483456
20: neval=1113{'avg': 8369.269744115101, 'max': 460229.59507489746, 'min': -70073.01755483456} best=-70073.01755483456
21: neval=1157{'avg': -3264.499269976371, 'max': 734612.5128093084, 'min': -71478.4813124976} best=-71478.4813124976
22: neval=1128{'avg': -19163.97773557747, 'max': 310144.2794647692, 'min': -81567.45306484746} best=-81567.45306484746
23: neval=1119{'avg': -29303.97929159715, 'max': 389393.58793369326, 'min': -90889.39523129725} best=-90889.39523129725
24: neval=1114{'avg': -39436.86439579975, 'max': 325112.8803561608, 'min': -91840.52925277811} best=-91840.52925277811
25: neval=1068{'avg': -51166.78513995277, 'max': 373992.6059631891, 'min': -96721.37813541708} best=-96721.37813541708
26: neval=1106{'avg': -56440.85844125966, 'max': 292781.3417661111, 'min': -97203.23335914215} best=-97203.23335914215
27: neval=1102{'avg': -63011.88496725972, 'max': 259446.8450165181, 'min': -110249.93324100666} best=-110249.93324100666
28: neval=1109{'avg': -67969.57092626407, 'max': 256261.628712432, 'min': -110249.93324100666} best=-110249.93324100666
29: neval=1115{'avg': -73674.68818802621, 'max': 455836.8927508041, 'min': -110249.93324100666} best=-110249.93324100666
30: neval=1093{'avg': -81835.89411964269, 'max': 318777.18867326644, 'min': -124592.54821818277} best=-124592.54821818277
31: neval=1105{'avg': -86426.82460295355, 'max': 193213.11691793412, 'min': -122224.52533684908} best=-124592.54821818277
32: neval=1122{'avg': -92314.70532495673, 'max': 253361.41373501078, 'min': -130514.55108669966} best=-130514.55108669966
33: neval=1088{'avg': -99048.41967691349, 'max': 105320.247122481, 'min': -133728.5626961243} best=-133728.5626961243
34: neval=1110{'avg': -105027.00631893867, 'max': 338954.61238475, 'min': -146082.5143433584} best=-146082.5143433584
35: neval=1115{'avg': -112216.22240566848, 'max': 225966.11696350097, 'min': -146889.39328215446} best=-146889.39328215446
36: neval=1099{'avg': -118910.18552264204, 'max': 160607.0281520298, 'min': -149286.17769593044} best=-149286.17769593044
37: neval=1085{'avg': -125272.9815956163, 'max': 242085.24877725702, 'min': -153504.26707681292} best=-153504.26707681292
38: neval=1067{'avg': -131051.60967548464, 'max': 194680.2233743841, 'min': -156871.19338782996} best=-156871.19338782996
39: neval=1110{'avg': -136567.54598978467, 'max': 79009.0838838563, 'min': -158981.3143155472} best=-158981.3143155472
40: neval=1096{'avg': -141700.30371658917, 'max': 136570.5668434483, 'min': -161363.75708234526} best=-161363.75708234526
41: neval=1129{'avg': -146808.36802474866, 'max': 350884.30539194087, 'min': -164278.411025238} best=-164278.411025238
42: neval=1116{'avg': -153594.00095777924, 'max': 3395.7991267138896, 'min': -165111.08775904335} best=-165111.08775904335
43: neval=1096{'avg': -156773.3988161804, 'max': 98875.26420669386, 'min': -165409.29449512955} best=-165409.29449512955
44: neval=1125{'avg': -158653.7175805951, 'max': 136656.52783654645, 'min': -165519.79777456235} best=-165519.79777456235
45: neval=1077{'avg': -160364.22367722067, 'max': 133640.16518284605, 'min': -167447.41972675966} best=-167447.41972675966
46: neval=1116{'avg': -160917.73546666486, 'max': 194371.93597309996, 'min': -166757.34973339248} best=-167447.41972675966
47: neval=1133{'avg': -161540.2554296074, 'max': 175943.95184422936, 'min': -168484.6542113972} best=-168484.6542113972
48: neval=1111{'avg': -164363.53004846154, 'max': 180198.94441997827, 'min': -169426.86877997362} best=-169426.86877997362
49: neval=1132{'avg': -165372.08616836625, 'max': 226827.72074458128, 'min': -169426.86877997362} best=-169426.86877997362
50: neval=1101{'avg': -166020.98001368166, 'max': 82901.20983760312, 'min': -170929.04463998586} best=-170929.04463998586
51: neval=1128{'avg': -167018.28544151492, 'max': 64367.38927680988, 'min': -170929.04463998586} best=-170929.04463998586
52: neval=1083{'avg': -167270.75813359668, 'max': 194790.43494154813, 'min': -170929.04463998586} best=-170929.04463998586
53: neval=1085{'avg': -168156.3565498894, 'max': 133749.3955811756, 'min': -170929.04463998586} best=-170929.04463998586
54: neval=1093{'avg': -169193.41889235127, 'max': 24482.65562023377, 'min': -170929.04463998586} best=-170929.04463998586
55: neval=1131{'avg': -168628.33887669616, 'max': 151545.87043612343, 'min': -171934.7384732576} best=-171934.7384732576
56: neval=1128{'avg': -168686.62991965146, 'max': 141144.69225506973, 'min': -171934.7384732576} best=-171934.7384732576
57: neval=1132{'avg': -169261.2755671644, 'max': 164773.4098711611, 'min': -171934.7384732576} best=-171934.7384732576
58: neval=1104{'avg': -169523.91932914077, 'max': 121835.03703498228, 'min': -172528.72983858417} best=-172528.72983858417
59: neval=1062{'avg': -170215.3929295675, 'max': 141941.26979680752, 'min': -172528.72983858417} best=-172528.72983858417
60: neval=1097{'avg': -170630.47491043695, 'max': 151948.118857363, 'min': -172898.7573256255} best=-172898.7573256255
61: neval=1084{'avg': -170565.56936228453, 'max': 231333.92209456104, 'min': -172898.7573256255} best=-172898.7573256255
62: neval=1107{'avg': -171405.99366315093, 'max': 117689.93341512473, 'min': -172898.7573256255} best=-172898.7573256255
63: neval=1084{'avg': -171143.5727210167, 'max': 224258.4084423938, 'min': -172898.7573256255} best=-172898.7573256255
64: neval=1115{'avg': -171218.4593804656, 'max': 233155.85314521904, 'min': -172898.7573256255} best=-172898.7573256255
65: neval=1110{'avg': -171810.41681341993, 'max': 50924.02552355039, 'min': -172898.7573256255} best=-172898.7573256255
66: neval=1139{'avg': -172587.69387270455, 'max': -54765.34426569709, 'min': -172898.7573256255} best=-172898.7573256255
67: neval=1087{'avg': -171789.35356289873, 'max': 57442.63795602299, 'min': -172898.7573256255} best=-172898.7573256255
68: neval=1106{'avg': -172183.81877935375, 'max': 227594.4117657282, 'min': -172898.7573256255} best=-172898.7573256255
69: neval=1086{'avg': -171900.8791070479, 'max': 158303.6868140748, 'min': -172898.7573256255} best=-172898.7573256255
70: neval=1121{'avg': -171934.73127356198, 'max': 52690.81925929497, 'min': -172898.7573256255} best=-172898.7573256255
71: neval=1152{'avg': -171086.3160179981, 'max': 122434.91060033647, 'min': -172898.7573256255} best=-172898.7573256255
72: neval=1125{'avg': -171245.7181089162, 'max': 216152.42635261067, 'min': -172898.7573256255} best=-172898.7573256255
73: neval=1085{'avg': -171432.52100375932, 'max': 126571.8304655956, 'min': -172898.7573256255} best=-172898.7573256255
74: neval=1147{'avg': -171763.51558887292, 'max': 20436.76526272354, 'min': -172898.7573256255} best=-172898.7573256255
75: neval=1170{'avg': -171386.58148161514, 'max': 276750.0053660752, 'min': -172898.7573256255} best=-172898.7573256255
76: neval=1112{'avg': -171556.24558305868, 'max': 95515.84219955308, 'min': -172898.7573256255} best=-172898.7573256255
77: neval=1074{'avg': -171454.93323328448, 'max': 78990.47943771112, 'min': -172898.7573256255} best=-172898.7573256255
78: neval=1094{'avg': -172516.27937016575, 'max': 7213.757458552238, 'min': -172898.7573256255} best=-172898.7573256255
79: neval=1079{'avg': -171673.08881955827, 'max': 49628.186822306714, 'min': -172898.7573256255} best=-172898.7573256255
80: neval=1095{'avg': -172095.38633855933, 'max': 11383.24974412093, 'min': -172898.7573256255} best=-172898.7573256255
81: neval=1117{'avg': -171487.98020678898, 'max': 187031.6401235389, 'min': -172898.7573256255} best=-172898.7573256255
82: neval=1099{'avg': -171579.362543552, 'max': 33703.34066253186, 'min': -172898.7573256255} best=-172898.7573256255
83: neval=1087{'avg': -171544.54968487515, 'max': 196035.83262601634, 'min': -172898.7573256255} best=-172898.7573256255
84: neval=1120{'avg': -171642.50239147892, 'max': 143806.40542669635, 'min': -172898.7573256255} best=-172898.7573256255
85: neval=1116{'avg': -171857.89333337388, 'max': 22392.643181918622, 'min': -172898.7573256255} best=-172898.7573256255
86: neval=1133{'avg': -171745.32947467183, 'max': 146801.9211846908, 'min': -172898.7573256255} best=-172898.7573256255
87: neval=1112{'avg': -171557.49163006377, 'max': 113715.09334608303, 'min': -172898.7573256255} best=-172898.7573256255
88: neval=1144{'avg': -171394.5082974147, 'max': 115569.43109997269, 'min': -172898.7573256255} best=-172898.7573256255
89: neval=1073{'avg': -171802.95724399562, 'max': 125932.74544876494, 'min': -172898.7573256255} best=-172898.7573256255
90: neval=1135{'avg': -171579.46461841572, 'max': 56731.16521565299, 'min': -172898.7573256255} best=-172898.7573256255
91: neval=1108{'avg': -170773.80752324837, 'max': 213115.86372444383, 'min': -172898.7573256255} best=-172898.7573256255
92: neval=1090{'avg': -172085.93942120386, 'max': 39553.696214286545, 'min': -172898.7573256255} best=-172898.7573256255
93: neval=1119{'avg': -171155.8954172026, 'max': 173664.74503467634, 'min': -172898.7573256255} best=-172898.7573256255
94: neval=1106{'avg': -171313.00127704706, 'max': 149439.37120771728, 'min': -172898.7573256255} best=-172898.7573256255
95: neval=1120{'avg': -171325.32144695325, 'max': 71414.54193478043, 'min': -172898.7573256255} best=-172898.7573256255
96: neval=1107{'avg': -171659.40400198, 'max': 150104.0874656025, 'min': -172898.7573256255} best=-172898.7573256255
97: neval=1113{'avg': -171157.1656293379, 'max': 97436.60883499931, 'min': -172898.7573256255} best=-172898.7573256255
98: neval=1102{'avg': -171579.66085977753, 'max': 119684.88697028632, 'min': -172898.7573256255} best=-172898.7573256255
99: neval=1102{'avg': -171611.83312848772, 'max': 116271.717451142, 'min': -172898.7573256255} best=-172898.7573256255


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 115, 116, 117, 118, 119, 120, 122, 123, 124, 162]
best_individual.trans_facility = [125, 6, 26, 32, 1, 53, 52, 56, 69, 70, 54, 80, 87, 126, 143, 170, 172]
best_individual.unused_cities = {0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174}
best_individual.fitness.values = (-176232.91996338422,)