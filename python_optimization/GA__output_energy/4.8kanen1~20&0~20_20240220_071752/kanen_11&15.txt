局----------------------  実行情報  ----------------------
実行時間＝5432秒
個体数＝1300
合計世代数＝100
===============================
Total cost: -174641.90575344462
===============================
------------------------  前提  ------------------------

waste=kanen

ごみ量36位以内：
札幌市 (349353), 函館市 (66649), 旭川市 (64890), 苫小牧市 (42288), 釧路市 (38335), 帯広市 (35291), 千歳市 (25770), 小樽市 (25049), 江別市 (24906), 北見市 (20809), 室蘭市 (20448), 岩見沢市 (12638), 登別市 (11426), 北広島市 (10822), 石狩市 (9341), 音更町 (7531), 稚内市 (7127), 恵庭市 (6987), 伊達市 (6907), 網走市 (6299), 滝川市 (5831), 北斗市 (5150), 七飯町 (5008), 中標津町 (4837), 根室市 (4736), 幕別町 (4414), 新ひだか町 (4277), 釧路町 (4090), 美幌町 (4063), 白老町 (3395), 紋別市 (3325), 中札内村 (2807), 芽室町 (2638), 東神楽町 (2584), 余市町 (2489), 砂川市 (2419)

焼却施設数: 11
中継施設数: 15

輸送単価＝ 4.8 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='kanen'
unit ='t/year'

inc_size= [764872, 162502, 7127, 2582, 2315, 1481, 110, 33, 26, 24, 24]
inc_facility = ['札幌市', '帯広市', '稚内市', '中川町', '浜頓別町', '初山別村', '中頓別町', '豊富町', '遠別町', '天塩町', '幌延町']
inc_blocks = [['南幌町', '札幌市', '江別市', '北広島市', '石狩市', '当別町', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町'], ['猿払村', '浜頓別町', '枝幸町', '興部町', '西興部村', '雄武町'], ['名寄市', '下川町', '美深町', '音威子府村', '中川町'], ['遠別町'], ['天塩町'], ['稚内市'], ['留萌市', '増毛町', '小平町', '苫前町', '羽幌町', '初山別村'], ['中頓別町'], ['豊富町'], ['幌延町'], ['えりも町', '南富良野町', '占冠村', '斜里町', '帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町', '本別町', '足寄町', '陸別町', '浦幌町']]

trans_size=[83618, 74068, 46307, 45633, 34187, 32922, 32045, 31874, 19659, 17415, 15724, 14491, 8879, 6860, 4463]
trans_facility = ['函館市', '旭川市', '苫小牧市', '釧路市', '千歳市', '北見市', '小樽市', '室蘭市', '岩見沢市', '豊浦町', '滝川市', '別海町', '新ひだか町', '遠軽町', '鷹栖町']
trans_blocks = [['夕張市', '岩見沢市', '美唄市', '三笠市', '由仁町', '長沼町', '栗山町', '月形町', '新篠津村'], ['芦別市', '赤平市', '滝川市', '砂川市', '歌志内市', '深川市', '奈井江町', '上砂川町', '浦臼町', '新十津川町', '妹背牛町', '秩父別町', '雨竜町', '北竜町', '沼田町'], ['千歳市', '恵庭市', '厚真町', '安平町'], ['小樽市', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村'], ['室蘭市', '登別市'], ['苫小牧市', '白老町', 'むかわ町'], ['島牧村', '寿都町', '黒松内町', '伊達市', '豊浦町', '壮瞥町', '洞爺湖町', '八雲町', '長万部町', '今金町', 'せたな町'], ['日高町', '平取町', '新冠町', '浦河町', '様似町', '新ひだか町'], ['函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '江差町', '上ノ国町', '厚沢部町', '乙部町'], ['旭川市', '富良野市', '東神楽町', '当麻町', '愛別町', '東川町', '美瑛町', '上富良野町', '中富良野町'], ['士別市', '鷹栖町', '比布町', '上川町', '和寒町', '剣淵町', '幌加内町'], ['北見市', '網走市', '美幌町', '津別町', '清里町', '小清水町', '訓子府町', '置戸町', '大空町'], ['紋別市', '佐呂間町', '遠軽町', '湧別町', '滝上町'], ['釧路市', '釧路町', '厚岸町', '標茶町', '鶴居村', '白糠町'], ['浜中町', '弟子屈町', '根室市', '別海町', '中標津町', '標津町', '羅臼町']]

arrows = [[['札幌市'], ['小樽市', '岩見沢市', '新ひだか町', '滝川市', '函館市', '室蘭市', '苫小牧市', '旭川市', '豊浦町', '千歳市', '鷹栖町']], [['帯広市'], ['遠軽町', '釧路市', '別海町', '北見市']]]


---------------------  エネルギー情報  ---------------------
[16623.807192958328, 234094.61158161223, -453987.71192527545, 28627.38739726027]

EL_direct: {'札幌市': 7503.434974208334, '帯広市': 6242.6671051875, '稚内市': 0.0, '中川町': 1637.8649465208337, '浜頓別町': 681.3823542500002, '初山別村': 558.4578127916668, '中頓別町': 0.0, '豊富町': 0.0, '遠別町': 0.0, '天塩町': 0.0, '幌延町': 0.0}
ED_inc: {'札幌市': -518914.00506826444, '帯広市': 30433.82485845464, '稚内市': 15144.566798995975, '中川町': 7111.223207950842, '浜頓別町': 6532.457819432465, '初山別村': 4589.042298863878, '中頓別町': 518.0804921426532, '豊富町': 180.0454620005565, '遠別町': 145.69531867270277, '天塩町': 135.67844323768028, '幌延町': 135.67844323768028}

EL_indirect: {'函館市': 82574.7988576593, '旭川市': 32411.310309453835, '苫小牧市': 10141.120542156501, '釧路市': 18197.059543021667, '千歳市': 5335.555729497501, '北見市': 18637.734638876165, '小樽市': 5947.0408341825005, '室蘭市': 14137.254320284334, '岩見沢市': 3640.2421771495005, '豊浦町': 10840.559320391669, '滝川市': 5852.888054125668, '別海町': 13451.983248671502, '新ひだか町': 4779.048490263667, '遠軽町': 4987.060317470834, '鷹栖町': 3160.9551984074997}
ED_trans: {'函館市': 5113.297972602739, '旭川市': 4529.30893150685, '苫小牧市': 2831.7047671232876, '釧路市': 2790.489205479452, '千歳市': 2090.5584657534246, '北見市': 2013.2028493150688, '小樽市': 1959.5736986301372, '室蘭市': 1949.1169315068496, '岩見沢市': 1202.1613150684934, '豊浦町': 1064.9391780821918, '滝川市': 961.5333698630137, '別海町': 886.1345753424657, '新ひだか町': 542.9569315068493, '遠軽町': 419.493698630137, '鷹栖町': 272.9155068493151}

----------------------  輸送情報  ----------------------

direct 札幌市(1087/2096) t/day → receive from: 南幌町, 札幌市, 江別市, 北広島市, 石狩市, 当別町, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町
indirect 札幌市(1009/2096) t/day → receive from: 中継施設＝ 小樽市(32045) → receive from: 小樽市, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村
岩見沢市(19659) → receive from: 夕張市, 岩見沢市, 美唄市, 三笠市, 由仁町, 長沼町, 栗山町, 月形町, 新篠津村
新ひだか町(8879) → receive from: 日高町, 平取町, 新冠町, 浦河町, 様似町, 新ひだか町
滝川市(15724) → receive from: 芦別市, 赤平市, 滝川市, 砂川市, 歌志内市, 深川市, 奈井江町, 上砂川町, 浦臼町, 新十津川町, 妹背牛町, 秩父別町, 雨竜町, 北竜町, 沼田町
函館市(83618) → receive from: 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 江差町, 上ノ国町, 厚沢部町, 乙部町
室蘭市(31874) → receive from: 室蘭市, 登別市
苫小牧市(46307) → receive from: 苫小牧市, 白老町, むかわ町
旭川市(74068) → receive from: 旭川市, 富良野市, 東神楽町, 当麻町, 愛別町, 東川町, 美瑛町, 上富良野町, 中富良野町
豊浦町(17415) → receive from: 島牧村, 寿都町, 黒松内町, 伊達市, 豊浦町, 壮瞥町, 洞爺湖町, 八雲町, 長万部町, 今金町, せたな町
千歳市(34187) → receive from: 千歳市, 恵庭市, 厚真町, 安平町
鷹栖町(4463) → receive from: 士別市, 鷹栖町, 比布町, 上川町, 和寒町, 剣淵町, 幌加内町
direct 帯広市(171/445) t/day → receive from: えりも町, 南富良野町, 占冠村, 斜里町, 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町, 本別町, 足寄町, 陸別町, 浦幌町
indirect 帯広市(274/445) t/day → receive from: 中継施設＝ 遠軽町(6860) → receive from: 紋別市, 佐呂間町, 遠軽町, 湧別町, 滝上町
釧路市(45633) → receive from: 釧路市, 釧路町, 厚岸町, 標茶町, 鶴居村, 白糠町
別海町(14491) → receive from: 浜中町, 弟子屈町, 根室市, 別海町, 中標津町, 標津町, 羅臼町
北見市(32922) → receive from: 北見市, 網走市, 美幌町, 津別町, 清里町, 小清水町, 訓子府町, 置戸町, 大空町
direct 稚内市(20/20) t/day → receive from: 稚内市
direct 中川町(7/7) t/day → receive from: 名寄市, 下川町, 美深町, 音威子府村, 中川町
direct 浜頓別町(6/6) t/day → receive from: 猿払村, 浜頓別町, 枝幸町, 興部町, 西興部村, 雄武町
direct 初山別村(4/4) t/day → receive from: 留萌市, 増毛町, 小平町, 苫前町, 羽幌町, 初山別村
direct 中頓別町(0/0) t/day → receive from: 中頓別町
direct 豊富町(0/0) t/day → receive from: 豊富町
direct 遠別町(0/0) t/day → receive from: 遠別町
direct 天塩町(0/0) t/day → receive from: 天塩町
direct 幌延町(0/0) t/day → receive from: 幌延町

----------------------  遺伝情報  ----------------------

個体数＝1300
世代数＝100
0: neval=1300{'avg': inf, 'max': inf, 'min': 114658.59609070083} best=114658.59609070083
1: neval=1012{'avg': inf, 'max': inf, 'min': 84300.53640094091} best=84300.53640094091
2: neval=1031{'avg': inf, 'max': inf, 'min': 84300.53640094091} best=84300.53640094091
3: neval=1008{'avg': inf, 'max': inf, 'min': 84300.53640094091} best=84300.53640094091
4: neval=1029{'avg': inf, 'max': inf, 'min': 33927.49853415878} best=33927.49853415878
5: neval=1015{'avg': inf, 'max': inf, 'min': 33927.49853415878} best=33927.49853415878
6: neval=1022{'avg': inf, 'max': inf, 'min': 19019.602160083487} best=19019.602160083487
7: neval=1054{'avg': inf, 'max': inf, 'min': 19019.602160083487} best=19019.602160083487
8: neval=997{'avg': inf, 'max': inf, 'min': 5051.678935559525} best=5051.678935559525
9: neval=1053{'avg': inf, 'max': inf, 'min': 5051.678935559525} best=5051.678935559525
10: neval=1038{'avg': inf, 'max': inf, 'min': 13093.298842244076} best=5051.678935559525
11: neval=1030{'avg': inf, 'max': inf, 'min': 13093.298842244076} best=5051.678935559525
12: neval=1014{'avg': inf, 'max': inf, 'min': 13093.298842244076} best=5051.678935559525
13: neval=998{'avg': inf, 'max': inf, 'min': 13093.298842244076} best=5051.678935559525
14: neval=1030{'avg': inf, 'max': inf, 'min': -24106.1283530844} best=-24106.1283530844
15: neval=1017{'avg': inf, 'max': inf, 'min': -5575.53480704207} best=-24106.1283530844
16: neval=1004{'avg': inf, 'max': inf, 'min': -36703.26372271189} best=-36703.26372271189
17: neval=1050{'avg': inf, 'max': inf, 'min': -24696.307549311776} best=-36703.26372271189
18: neval=1005{'avg': inf, 'max': inf, 'min': -28303.397103066935} best=-36703.26372271189
19: neval=1017{'avg': inf, 'max': inf, 'min': -51443.53589150988} best=-51443.53589150988
20: neval=1034{'avg': inf, 'max': inf, 'min': -51443.53589150988} best=-51443.53589150988
21: neval=1028{'avg': inf, 'max': inf, 'min': -36328.887217394906} best=-51443.53589150988
22: neval=1044{'avg': 14297.341645680632, 'max': 318921.6909867963, 'min': -39599.59075859213} best=-51443.53589150988
23: neval=1017{'avg': 5204.165776547697, 'max': 408627.3188441469, 'min': -70453.64762584532} best=-70453.64762584532
24: neval=1045{'avg': 554.1293495319253, 'max': 314822.0216058904, 'min': -70453.64762584532} best=-70453.64762584532
25: neval=1007{'avg': -9980.83614515579, 'max': 280133.4807366462, 'min': -73409.26980370743} best=-73409.26980370743
26: neval=1023{'avg': -20660.119831548927, 'max': 287289.0770636705, 'min': -73409.26980370743} best=-73409.26980370743
27: neval=1039{'avg': -27145.494487766384, 'max': 293014.8206236985, 'min': -89166.53422298076} best=-89166.53422298076
28: neval=1024{'avg': -34772.559989464135, 'max': 274722.1823001169, 'min': -91956.84650046917} best=-91956.84650046917
29: neval=1022{'avg': -41835.18678891049, 'max': 243021.14669849668, 'min': -98793.51612221608} best=-98793.51612221608
30: neval=995{'avg': -51156.94440337736, 'max': 149782.6978765817, 'min': -104502.34944372576} best=-104502.34944372576
31: neval=1032{'avg': -59447.58515688518, 'max': 198747.47403685478, 'min': -118230.00853113431} best=-118230.00853113431
32: neval=1014{'avg': -68213.63838758369, 'max': 416640.41180092836, 'min': -118230.00853113431} best=-118230.00853113431
33: neval=1044{'avg': -77137.40960071502, 'max': 185362.2311680361, 'min': -122557.97752024044} best=-122557.97752024044
34: neval=1020{'avg': -86651.0323068056, 'max': 238771.0912373927, 'min': -124669.54212713135} best=-124669.54212713135
35: neval=992{'avg': -97707.21683129692, 'max': 186598.4016007359, 'min': -123136.29319103612} best=-124669.54212713135
36: neval=1029{'avg': -107422.47295540672, 'max': 74171.50647041656, 'min': -124335.53139688098} best=-124669.54212713135
37: neval=1063{'avg': -111346.9416920955, 'max': 285408.4285272846, 'min': -127520.92401417458} best=-127520.92401417458
38: neval=1022{'avg': -116766.8197277645, 'max': 229745.41518016666, 'min': -127520.92401417458} best=-127520.92401417458
39: neval=1054{'avg': -119357.27115279957, 'max': 423496.4005716199, 'min': -128121.28404511926} best=-128121.28404511926
40: neval=1027{'avg': -121251.70203515967, 'max': 232253.84033537592, 'min': -131885.2572707306} best=-131885.2572707306
41: neval=1020{'avg': -123124.10460235417, 'max': 135008.35575114258, 'min': -131897.2992452311} best=-131897.2992452311
42: neval=1030{'avg': -124968.89581770943, 'max': 286302.7399824304, 'min': -131897.2992452311} best=-131897.2992452311
43: neval=1017{'avg': -126304.28214567114, 'max': 188932.00200265474, 'min': -133482.93295949308} best=-133482.93295949308
44: neval=985{'avg': -127402.37585291285, 'max': 134562.33983648414, 'min': -136335.4081173432} best=-136335.4081173432
45: neval=1059{'avg': -128869.26109730093, 'max': 136666.9707588839, 'min': -136855.29026027882} best=-136855.29026027882
46: neval=1028{'avg': -130786.19952778581, 'max': 41626.60782583215, 'min': -136855.29026027882} best=-136855.29026027882
47: neval=1034{'avg': -131022.2307790227, 'max': 247709.85955237737, 'min': -139973.97936829066} best=-139973.97936829066
48: neval=1028{'avg': -132506.6606071018, 'max': 169737.8187960933, 'min': -139501.78404119465} best=-139973.97936829066
49: neval=1047{'avg': -133436.58117406882, 'max': 159793.11923128087, 'min': -140388.6240416203} best=-140388.6240416203
50: neval=1023{'avg': -134646.46055092427, 'max': 172944.29298506974, 'min': -141499.60125795682} best=-141499.60125795682
51: neval=1015{'avg': -136340.19626678544, 'max': 139490.80391251514, 'min': -141859.4066213505} best=-141859.4066213505
52: neval=1025{'avg': -137547.20624937525, 'max': 275574.19658618886, 'min': -143300.01757879718} best=-143300.01757879718
53: neval=1024{'avg': -138574.01807228167, 'max': 146105.58377687648, 'min': -143680.54472852696} best=-143680.54472852696
54: neval=1016{'avg': -139921.81708388557, 'max': 78619.05152718068, 'min': -150909.68837057886} best=-150909.68837057886
55: neval=1011{'avg': -140692.89757877844, 'max': 175648.07695803585, 'min': -154398.01843228668} best=-154398.01843228668
56: neval=1047{'avg': -140622.74703553118, 'max': 131731.7479389615, 'min': -154398.01843228668} best=-154398.01843228668
57: neval=1016{'avg': -142039.3880408709, 'max': 252468.07247901085, 'min': -155871.6967861849} best=-155871.6967861849
58: neval=1016{'avg': -143726.99624291825, 'max': 124080.30735281605, 'min': -163990.5474323902} best=-163990.5474323902
59: neval=1013{'avg': -147686.14011813264, 'max': 114199.39175712426, 'min': -165595.5046931212} best=-165595.5046931212
60: neval=985{'avg': -152388.50697227952, 'max': 156029.37458820053, 'min': -166861.29688481125} best=-166861.29688481125
61: neval=1034{'avg': -155894.33515467047, 'max': 85905.96554857597, 'min': -166861.29688481125} best=-166861.29688481125
62: neval=1024{'avg': -158554.10519699656, 'max': 154598.86327804558, 'min': -169903.78686553822} best=-169903.78686553822
63: neval=1032{'avg': -161178.81803805573, 'max': 341189.43940435647, 'min': -169903.78686553822} best=-169903.78686553822
64: neval=1030{'avg': -164338.1271023485, 'max': 37224.62070747138, 'min': -171702.7071967874} best=-171702.7071967874
65: neval=1056{'avg': -164876.37827321005, 'max': 242219.0033072145, 'min': -171780.87373130556} best=-171780.87373130556
66: neval=1051{'avg': -165913.23407230136, 'max': 119549.95250184207, 'min': -172957.46478339596} best=-172957.46478339596
67: neval=1023{'avg': -167573.28081857096, 'max': 142219.540399849, 'min': -173176.38555068566} best=-173176.38555068566
68: neval=1054{'avg': -168115.98669674943, 'max': 244066.86315594937, 'min': -173269.76193910453} best=-173269.76193910453
69: neval=1029{'avg': -169101.20174139796, 'max': 174077.33359768367, 'min': -173269.76193910453} best=-173269.76193910453
70: neval=1018{'avg': -170399.72872608702, 'max': 88829.13714813394, 'min': -173269.76193910453} best=-173269.76193910453
71: neval=1046{'avg': -171713.3812640818, 'max': 128468.89478266232, 'min': -173269.76193910453} best=-173269.76193910453
72: neval=984{'avg': -171389.38984081434, 'max': 146282.15035632346, 'min': -173269.76193910453} best=-173269.76193910453
73: neval=1045{'avg': -172213.7148447543, 'max': 39011.11913637046, 'min': -173269.76193910453} best=-173269.76193910453
74: neval=992{'avg': -171886.6044204334, 'max': 138837.70139181346, 'min': -173269.76193910453} best=-173269.76193910453
75: neval=1017{'avg': -171667.36490215693, 'max': 110914.3778965209, 'min': -173269.76193910453} best=-173269.76193910453
76: neval=1018{'avg': -171032.9781303798, 'max': 305720.3687967674, 'min': -173269.76193910453} best=-173269.76193910453
77: neval=1007{'avg': -171628.91722269543, 'max': 128351.06007985798, 'min': -173269.76193910453} best=-173269.76193910453
78: neval=1042{'avg': -170923.5480854313, 'max': 65206.50971409987, 'min': -173269.76193910453} best=-173269.76193910453
79: neval=1000{'avg': -171872.5263300327, 'max': 97889.36427744802, 'min': -173269.76193910453} best=-173269.76193910453
80: neval=1021{'avg': -172368.31631556977, 'max': 82990.84856375407, 'min': -173269.76193910453} best=-173269.76193910453
81: neval=1055{'avg': -172325.29422236708, 'max': 171367.40849747736, 'min': -173269.76193910453} best=-173269.76193910453
82: neval=1033{'avg': -171782.5761097225, 'max': 121278.71030104245, 'min': -173269.76193910453} best=-173269.76193910453
83: neval=1013{'avg': -172178.47198794773, 'max': 118260.2839334193, 'min': -173269.76193910453} best=-173269.76193910453
84: neval=1058{'avg': -172554.70252789967, 'max': 8613.583240474683, 'min': -173269.76193910453} best=-173269.76193910453
85: neval=1031{'avg': -171479.82769709977, 'max': 201980.22113612955, 'min': -173269.76193910453} best=-173269.76193910453
86: neval=1008{'avg': -171244.9164900804, 'max': 58581.27503393291, 'min': -173269.76193910453} best=-173269.76193910453
87: neval=1031{'avg': -171167.8112773385, 'max': 134016.86610048305, 'min': -173269.76193910453} best=-173269.76193910453
88: neval=1030{'avg': -170909.78078473278, 'max': 191731.6205943129, 'min': -173269.76193910453} best=-173269.76193910453
89: neval=1027{'avg': -172177.7404918667, 'max': 159361.24715204412, 'min': -173269.76193910453} best=-173269.76193910453
90: neval=1026{'avg': -170873.95530810268, 'max': 140457.09200667895, 'min': -173269.76193910453} best=-173269.76193910453
91: neval=1024{'avg': -171429.30786032212, 'max': 163966.057236013, 'min': -173269.76193910453} best=-173269.76193910453
92: neval=1025{'avg': -171695.31796245472, 'max': 37310.75991865267, 'min': -173269.76193910453} best=-173269.76193910453
93: neval=1023{'avg': -171572.22518841486, 'max': 114680.33202063384, 'min': -173269.76193910453} best=-173269.76193910453
94: neval=1034{'avg': -171576.43771650357, 'max': 195596.20865971432, 'min': -173269.76193910453} best=-173269.76193910453
95: neval=1004{'avg': -172358.74116637127, 'max': 26762.909223179457, 'min': -173269.76193910453} best=-173269.76193910453
96: neval=1023{'avg': -171468.83091399982, 'max': 71672.34377138849, 'min': -173269.76193910453} best=-173269.76193910453
97: neval=1011{'avg': -171728.01314865076, 'max': 53390.66087601865, 'min': -173269.76193910453} best=-173269.76193910453
98: neval=1027{'avg': -172018.98515773562, 'max': 69147.68789369625, 'min': -173269.76193910453} best=-173269.76193910453
99: neval=1010{'avg': -171760.07375783328, 'max': 164079.3565319867, 'min': -173269.76193910453} best=-173269.76193910453


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 120, 108, 116, 117, 118, 115, 121, 123, 124, 143]
best_individual.trans_facility = [1, 6, 26, 32, 52, 53, 56, 69, 70, 87, 91, 125, 136, 162, 171]
best_individual.unused_cities = {0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 119, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174}
best_individual.fitness.values = (-174641.90575344462,)