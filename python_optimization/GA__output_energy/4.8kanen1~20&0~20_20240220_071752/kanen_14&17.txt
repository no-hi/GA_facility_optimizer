局----------------------  実行情報  ----------------------
実行時間＝7124秒
個体数＝1550
合計世代数＝100
===============================
Total cost: -155878.14766168466
===============================
------------------------  前提  ------------------------

waste=kanen

ごみ量41位以内：
札幌市 (349353), 函館市 (66649), 旭川市 (64890), 苫小牧市 (42288), 釧路市 (38335), 帯広市 (35291), 千歳市 (25770), 小樽市 (25049), 江別市 (24906), 北見市 (20809), 室蘭市 (20448), 岩見沢市 (12638), 登別市 (11426), 北広島市 (10822), 石狩市 (9341), 音更町 (7531), 稚内市 (7127), 恵庭市 (6987), 伊達市 (6907), 網走市 (6299), 滝川市 (5831), 北斗市 (5150), 七飯町 (5008), 中標津町 (4837), 根室市 (4736), 幕別町 (4414), 新ひだか町 (4277), 釧路町 (4090), 美幌町 (4063), 白老町 (3395), 紋別市 (3325), 中札内村 (2807), 芽室町 (2638), 東神楽町 (2584), 余市町 (2489), 砂川市 (2419), せたな町 (2370), 遠軽町 (2357), 深川市 (2253), 名寄市 (2243), 洞爺湖町 (2163)

焼却施設数: 14
中継施設数: 17

輸送単価＝ 4.8 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='kanen'
unit ='t/year'

inc_size= [672097, 257917, 7127, 2351, 718, 528, 101, 97, 37, 33, 26, 24, 24, 16]
inc_facility = ['札幌市', '旭川市', '稚内市', '浜頓別町', '小平町', '羽幌町', '増毛町', '苫前町', '初山別村', '豊富町', '遠別町', '天塩町', '幌延町', '中川町']
inc_blocks = [['南幌町', '札幌市', '江別市', '北広島市', '石狩市', '当別町', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町'], ['芦別市', '深川市', '旭川市', '富良野市', '鷹栖町', '東神楽町', '当麻町', '比布町', '愛別町', '上川町', '東川町', '美瑛町', '上富良野町', '中富良野町', '南富良野町', '和寒町', '幌加内町', '斜里町'], ['天塩町'], ['音威子府村', '中川町'], ['初山別村'], ['留萌市', '小平町'], ['羽幌町'], ['遠別町'], ['稚内市'], ['苫前町'], ['増毛町'], ['猿払村', '浜頓別町', '中頓別町', '枝幸町', '興部町', '雄武町'], ['豊富町'], ['幌延町']]

trans_size=[83618, 61174, 46307, 45633, 34734, 32045, 25530, 20448, 20057, 17415, 14491, 11426, 11089, 9414, 7532, 6860, 4970]
trans_facility = ['函館市', '帯広市', '苫小牧市', '釧路市', '千歳市', '小樽市', '北見市', '室蘭市', '岩見沢市', '豊浦町', '中標津町', '登別市', '雨竜町', '新ひだか町', '網走市', '遠軽町', '士別市']
trans_blocks = [['夕張市', '岩見沢市', '美唄市', '三笠市', '奈井江町', '由仁町', '長沼町', '栗山町', '月形町', '新篠津村'], ['網走市', '清里町', '小清水町', '大空町'], ['赤平市', '滝川市', '砂川市', '歌志内市', '上砂川町', '浦臼町', '新十津川町', '妹背牛町', '秩父別町', '雨竜町', '北竜町', '沼田町'], ['千歳市', '恵庭市', '厚真町', '安平町', '占冠村'], ['小樽市', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村'], ['室蘭市'], ['苫小牧市', '白老町', 'むかわ町'], ['登別市'], ['島牧村', '寿都町', '黒松内町', '伊達市', '豊浦町', '壮瞥町', '洞爺湖町', '八雲町', '長万部町', '今金町', 'せたな町'], ['日高町', '平取町', '新冠町', '浦河町', '様似町', 'えりも町', '新ひだか町'], ['函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '江差町', '上ノ国町', '厚沢部町', '乙部町'], ['士別市', '名寄市', '剣淵町', '下川町', '美深町', '西興部村'], ['北見市', '美幌町', '津別町', '訓子府町', '置戸町', '陸別町'], ['紋別市', '佐呂間町', '遠軽町', '湧別町', '滝上町'], ['帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町', '本別町', '足寄町', '浦幌町'], ['釧路市', '釧路町', '厚岸町', '標茶町', '鶴居村', '白糠町'], ['浜中町', '弟子屈町', '根室市', '別海町', '中標津町', '標津町', '羅臼町']]

arrows = [[['札幌市'], ['小樽市', '岩見沢市', '新ひだか町', '函館市', '室蘭市', '苫小牧市', '登別市', '豊浦町', '千歳市']], [['旭川市'], ['釧路市', '遠軽町', '中標津町', '帯広市', '雨竜町', '士別市', '北見市', '網走市']]]


---------------------  エネルギー情報  ---------------------
[11787.081679479166, 258038.8400014424, -453389.6138905515, 27685.544547945203]

EL_direct: {'札幌市': 7503.434974208334, '旭川市': 3614.1428513125, '稚内市': 0.0, '浜頓別町': 628.2344022500001, '小平町': 40.49905220833334, '羽幌町': 0.0, '増毛町': 0.0, '苫前町': 0.0, '初山別村': 0.0, '豊富町': 0.0, '遠別町': 0.0, '天塩町': 0.0, '幌延町': 0.0, '中川町': 0.7703995000000001}
ED_inc: {'札幌市': -455972.4320727721, '旭川市': -25530.04992185243, '稚内市': 15144.566798995975, '浜頓別町': 6611.560751988967, '小平町': 2546.9430925457677, '羽幌町': 1973.533764116069, '増毛町': 481.03472475266034, '苫前町': 464.41289336074425, '初山別村': 199.24585617849738, '豊富町': 180.0454620005565, '遠別町': 145.69531867270277, '天塩町': 135.67844323768028, '幌延町': 135.67844323768028, '中川町': 94.4725549858057}

EL_indirect: {'函館市': 82574.7988576593, '帯広市': 36439.57152811949, '苫小牧市': 10141.120542156501, '釧路市': 39269.455331101664, '千歳市': 5732.45048792, '小樽市': 5947.0408341825005, '北見市': 14716.637231681669, '室蘭市': 8068.9939499520015, '岩見沢市': 3778.228329930167, '豊浦町': 10840.559320391669, '中標津町': 17413.270616895832, '登別市': 4112.243634096, '雨竜町': 3076.694037219834, '新ひだか町': 5330.977747872834, '網走市': 4997.0333010455, '遠軽町': 4168.2216859508335, '士別市': 1431.5425652666668}
ED_trans: {'函館市': 5113.297972602739, '帯広市': 3740.832, '苫小牧市': 2831.7047671232876, '釧路市': 2790.489205479452, '千歳市': 2124.007890410959, '小樽市': 1959.5736986301372, '北見市': 1561.1769863013699, '室蘭市': 1250.409205479452, '岩見沢市': 1226.499287671233, '豊浦町': 1064.9391780821918, '中標津町': 886.1345753424657, '登別市': 698.7077260273974, '雨竜町': 678.0999452054795, '新ひだか町': 575.6725479452055, '網走市': 460.58695890410957, '遠軽町': 419.493698630137, '士別市': 303.91890410958905}

----------------------  輸送情報  ----------------------

direct 札幌市(1087/1841) t/day → receive from: 南幌町, 札幌市, 江別市, 北広島市, 石狩市, 当別町, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町
indirect 札幌市(755/1841) t/day → receive from: 中継施設＝ 小樽市(32045) → receive from: 小樽市, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村
岩見沢市(20057) → receive from: 夕張市, 岩見沢市, 美唄市, 三笠市, 奈井江町, 由仁町, 長沼町, 栗山町, 月形町, 新篠津村
新ひだか町(9414) → receive from: 日高町, 平取町, 新冠町, 浦河町, 様似町, えりも町, 新ひだか町
函館市(83618) → receive from: 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 江差町, 上ノ国町, 厚沢部町, 乙部町
室蘭市(20448) → receive from: 室蘭市
苫小牧市(46307) → receive from: 苫小牧市, 白老町, むかわ町
登別市(11426) → receive from: 登別市
豊浦町(17415) → receive from: 島牧村, 寿都町, 黒松内町, 伊達市, 豊浦町, 壮瞥町, 洞爺湖町, 八雲町, 長万部町, 今金町, せたな町
千歳市(34734) → receive from: 千歳市, 恵庭市, 厚真町, 安平町, 占冠村
direct 旭川市(221/707) t/day → receive from: 芦別市, 深川市, 旭川市, 富良野市, 鷹栖町, 東神楽町, 当麻町, 比布町, 愛別町, 上川町, 東川町, 美瑛町, 上富良野町, 中富良野町, 南富良野町, 和寒町, 幌加内町, 斜里町
indirect 旭川市(486/707) t/day → receive from: 中継施設＝ 釧路市(45633) → receive from: 釧路市, 釧路町, 厚岸町, 標茶町, 鶴居村, 白糠町
遠軽町(6860) → receive from: 紋別市, 佐呂間町, 遠軽町, 湧別町, 滝上町
中標津町(14491) → receive from: 浜中町, 弟子屈町, 根室市, 別海町, 中標津町, 標津町, 羅臼町
帯広市(61174) → receive from: 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町, 本別町, 足寄町, 浦幌町
雨竜町(11089) → receive from: 赤平市, 滝川市, 砂川市, 歌志内市, 上砂川町, 浦臼町, 新十津川町, 妹背牛町, 秩父別町, 雨竜町, 北竜町, 沼田町
士別市(4970) → receive from: 士別市, 名寄市, 剣淵町, 下川町, 美深町, 西興部村
北見市(25530) → receive from: 北見市, 美幌町, 津別町, 訓子府町, 置戸町, 陸別町
網走市(7532) → receive from: 網走市, 清里町, 小清水町, 大空町
direct 稚内市(20/20) t/day → receive from: 稚内市
direct 浜頓別町(6/6) t/day → receive from: 猿払村, 浜頓別町, 中頓別町, 枝幸町, 興部町, 雄武町
direct 小平町(2/2) t/day → receive from: 留萌市, 小平町
direct 羽幌町(1/1) t/day → receive from: 羽幌町
direct 増毛町(0/0) t/day → receive from: 増毛町
direct 苫前町(0/0) t/day → receive from: 苫前町
direct 初山別村(0/0) t/day → receive from: 初山別村
direct 豊富町(0/0) t/day → receive from: 豊富町
direct 遠別町(0/0) t/day → receive from: 遠別町
direct 天塩町(0/0) t/day → receive from: 天塩町
direct 幌延町(0/0) t/day → receive from: 幌延町
direct 中川町(0/0) t/day → receive from: 音威子府村, 中川町

----------------------  遺伝情報  ----------------------

個体数＝1550
世代数＝100
0: neval=1550{'avg': inf, 'max': inf, 'min': 164673.15342745866} best=164673.15342745866
1: neval=1204{'avg': inf, 'max': inf, 'min': 164673.15342745866} best=164673.15342745866
2: neval=1242{'avg': inf, 'max': inf, 'min': 196463.76922736305} best=164673.15342745866
3: neval=1241{'avg': inf, 'max': inf, 'min': 110537.23302562084} best=110537.23302562084
4: neval=1217{'avg': inf, 'max': inf, 'min': 110537.23302562084} best=110537.23302562084
5: neval=1240{'avg': inf, 'max': inf, 'min': 61151.467424533424} best=61151.467424533424
6: neval=1250{'avg': inf, 'max': inf, 'min': 40978.83831279331} best=40978.83831279331
7: neval=1237{'avg': inf, 'max': inf, 'min': 41212.86809545784} best=40978.83831279331
8: neval=1234{'avg': inf, 'max': inf, 'min': 51197.46790533743} best=40978.83831279331
9: neval=1204{'avg': inf, 'max': inf, 'min': 51197.46790533743} best=40978.83831279331
10: neval=1238{'avg': inf, 'max': inf, 'min': 51197.46790533743} best=40978.83831279331
11: neval=1229{'avg': inf, 'max': inf, 'min': 14174.575393569172} best=14174.575393569172
12: neval=1232{'avg': inf, 'max': inf, 'min': 14174.575393569172} best=14174.575393569172
13: neval=1236{'avg': inf, 'max': inf, 'min': 14174.575393569172} best=14174.575393569172
14: neval=1201{'avg': inf, 'max': inf, 'min': 14174.575393569172} best=14174.575393569172
15: neval=1232{'avg': inf, 'max': inf, 'min': 14174.575393569172} best=14174.575393569172
16: neval=1217{'avg': inf, 'max': inf, 'min': 14174.575393569172} best=14174.575393569172
17: neval=1237{'avg': inf, 'max': inf, 'min': 14174.575393569172} best=14174.575393569172
18: neval=1231{'avg': 82113.25226967417, 'max': 450626.7320785892, 'min': 14174.575393569172} best=14174.575393569172
19: neval=1205{'avg': inf, 'max': inf, 'min': 7757.8700974720705} best=7757.8700974720705
20: neval=1241{'avg': inf, 'max': inf, 'min': -3865.7195157482747} best=-3865.7195157482747
21: neval=1231{'avg': inf, 'max': inf, 'min': -7782.521549350382} best=-7782.521549350382
22: neval=1270{'avg': inf, 'max': inf, 'min': -11626.366479003736} best=-11626.366479003736
23: neval=1254{'avg': inf, 'max': inf, 'min': -11626.366479003736} best=-11626.366479003736
24: neval=1213{'avg': 34843.73109053417, 'max': 510015.83926966414, 'min': -20834.837418909374} best=-20834.837418909374
25: neval=1238{'avg': inf, 'max': inf, 'min': -20834.837418909374} best=-20834.837418909374
26: neval=1218{'avg': inf, 'max': inf, 'min': -28695.424151399595} best=-28695.424151399595
27: neval=1203{'avg': inf, 'max': inf, 'min': -43743.59214162738} best=-43743.59214162738
28: neval=1215{'avg': 9072.606400950332, 'max': 317273.5733626034, 'min': -43743.59214162738} best=-43743.59214162738
29: neval=1225{'avg': 2196.3099677947685, 'max': 425654.13653826376, 'min': -56827.98565917034} best=-56827.98565917034
30: neval=1229{'avg': -3955.8321896513457, 'max': 417491.653568369, 'min': -58588.57291191796} best=-58588.57291191796
31: neval=1205{'avg': inf, 'max': inf, 'min': -59011.61385752661} best=-59011.61385752661
32: neval=1181{'avg': -22080.29678958089, 'max': 389080.76190956845, 'min': -68773.11127710502} best=-68773.11127710502
33: neval=1224{'avg': -30395.038981040092, 'max': 236162.49303948876, 'min': -71225.10297821929} best=-71225.10297821929
34: neval=1263{'avg': -36641.656295582114, 'max': 350016.26487428835, 'min': -72627.33430908601} best=-72627.33430908601
35: neval=1273{'avg': -43658.68314287696, 'max': 222428.96431691386, 'min': -86164.0438169569} best=-86164.0438169569
36: neval=1245{'avg': -50397.0844984814, 'max': 208836.68373488256, 'min': -86164.0438169569} best=-86164.0438169569
37: neval=1211{'avg': -56637.82770009291, 'max': 208495.84178087095, 'min': -86164.0438169569} best=-86164.0438169569
38: neval=1216{'avg': -61267.53333619144, 'max': 261951.8451693086, 'min': -97273.85533820119} best=-97273.85533820119
39: neval=1239{'avg': -64001.60121788254, 'max': 234326.79267993232, 'min': -108005.49798095762} best=-108005.49798095762
40: neval=1211{'avg': -68786.12113555627, 'max': 178365.30305655018, 'min': -112028.66480809647} best=-112028.66480809647
41: neval=1195{'avg': -71945.68124624593, 'max': 228026.0066735268, 'min': -112028.66480809647} best=-112028.66480809647
42: neval=1224{'avg': -74750.6156956264, 'max': 226500.88659607098, 'min': -114729.9173087797} best=-114729.9173087797
43: neval=1220{'avg': -78521.58470364318, 'max': 254417.45102243684, 'min': -116859.2646830933} best=-116859.2646830933
44: neval=1240{'avg': -82720.13993763049, 'max': 225118.89831796382, 'min': -116859.2646830933} best=-116859.2646830933
45: neval=1226{'avg': -86899.13328448283, 'max': 269172.55195107806, 'min': -119747.29325467756} best=-119747.29325467756
46: neval=1199{'avg': -98855.75712160849, 'max': 194489.0560090838, 'min': -121194.04247928754} best=-121194.04247928754
47: neval=1203{'avg': -106801.02881549005, 'max': 247048.53543947835, 'min': -124235.83477175793} best=-124235.83477175793
48: neval=1244{'avg': -111916.03609857228, 'max': 195812.33157711712, 'min': -126623.97380679181} best=-126623.97380679181
49: neval=1192{'avg': -116155.24650456628, 'max': 221684.4679168147, 'min': -126934.53762292635} best=-126934.53762292635
50: neval=1217{'avg': -118010.48324964335, 'max': 242515.4627732564, 'min': -128988.30731781079} best=-128988.30731781079
51: neval=1240{'avg': -120413.33360122328, 'max': 257850.48873006925, 'min': -135097.48983969042} best=-135097.48983969042
52: neval=1215{'avg': -121355.65860627298, 'max': 211354.10336648888, 'min': -136896.1336914656} best=-136896.1336914656
53: neval=1265{'avg': -123299.05576472732, 'max': 175244.6462882398, 'min': -137259.45681321184} best=-137259.45681321184
54: neval=1206{'avg': -125517.4271460359, 'max': 233252.7890173535, 'min': -137259.45681321184} best=-137259.45681321184
55: neval=1233{'avg': -126954.11145326299, 'max': 201115.1523354323, 'min': -137927.3987162308} best=-137927.3987162308
56: neval=1216{'avg': -127757.02090368902, 'max': 330649.7309139446, 'min': -138174.33705946684} best=-138174.33705946684
57: neval=1238{'avg': -131489.00890081914, 'max': 185650.26409452865, 'min': -139251.7417690648} best=-139251.7417690648
58: neval=1221{'avg': -134186.48855029725, 'max': 144216.8034740012, 'min': -140915.8893865516} best=-140915.8893865516
59: neval=1274{'avg': -134078.6692362021, 'max': 237848.74983981848, 'min': -141074.60333481285} best=-141074.60333481285
60: neval=1182{'avg': -136870.42297828544, 'max': 215802.2571234824, 'min': -142717.24257626088} best=-142717.24257626088
61: neval=1198{'avg': -137306.75124830738, 'max': 247801.77570019529, 'min': -143851.62341876485} best=-143851.62341876485
62: neval=1201{'avg': -139829.096161768, 'max': 121344.80447504876, 'min': -144891.42325211878} best=-144891.42325211878
63: neval=1253{'avg': -140100.60544451946, 'max': 164583.0496281019, 'min': -145284.43316066364} best=-145284.43316066364
64: neval=1240{'avg': -141180.3017789137, 'max': 144081.26027822116, 'min': -145284.43316066364} best=-145284.43316066364
65: neval=1207{'avg': -142181.24296904137, 'max': 180911.38354933183, 'min': -145497.13414685836} best=-145497.13414685836
66: neval=1249{'avg': -142063.15475607844, 'max': 257392.39668439218, 'min': -145550.84358527962} best=-145550.84358527962
67: neval=1227{'avg': -142813.5368181228, 'max': 207440.68594581663, 'min': -151219.29199521913} best=-151219.29199521913
68: neval=1225{'avg': -143724.37929324678, 'max': 307420.3040263549, 'min': -150158.1981817124} best=-151219.29199521913
69: neval=1235{'avg': -143677.22039566343, 'max': 202407.88140447848, 'min': -150158.1981817124} best=-151219.29199521913
70: neval=1202{'avg': -144869.690362356, 'max': 83163.3370552598, 'min': -152158.04544129063} best=-152158.04544129063
71: neval=1239{'avg': -144422.41474101561, 'max': 117633.60547400125, 'min': -152781.45632897897} best=-152781.45632897897
72: neval=1232{'avg': -145485.32888519246, 'max': 249220.7263413947, 'min': -152845.96852865056} best=-152845.96852865056
73: neval=1224{'avg': -147043.58072419238, 'max': 212395.85164725635, 'min': -152845.96852865056} best=-152845.96852865056
74: neval=1245{'avg': -149002.81916069487, 'max': 217285.31068626101, 'min': -152845.96852865056} best=-152845.96852865056
75: neval=1167{'avg': -150733.0758245556, 'max': 137800.63976665118, 'min': -152845.96852865056} best=-152845.96852865056
76: neval=1228{'avg': -151626.50878284936, 'max': 218254.99573067614, 'min': -152845.96852865056} best=-152845.96852865056
77: neval=1253{'avg': -151117.9316217625, 'max': 177237.8680327335, 'min': -152845.96852865056} best=-152845.96852865056
78: neval=1206{'avg': -150629.99575336996, 'max': 178991.6115820516, 'min': -152845.96852865056} best=-152845.96852865056
79: neval=1241{'avg': -150046.66067104295, 'max': 338733.57124913577, 'min': -152845.96852865056} best=-152845.96852865056
80: neval=1241{'avg': -150962.96453322616, 'max': 201388.66581515508, 'min': -152845.96852865056} best=-152845.96852865056
81: neval=1235{'avg': -150538.183391367, 'max': 261004.9477510517, 'min': -152845.96852865056} best=-152845.96852865056
82: neval=1229{'avg': -151300.62495925243, 'max': 219521.11284427907, 'min': -152845.96852865056} best=-152845.96852865056
83: neval=1204{'avg': -151112.50667472254, 'max': 255682.4851099859, 'min': -152845.96852865056} best=-152845.96852865056
84: neval=1175{'avg': -151154.55117461382, 'max': 191808.3196564955, 'min': -152845.96852865056} best=-152845.96852865056
85: neval=1247{'avg': -150693.56741216758, 'max': 204579.45178860732, 'min': -152845.96852865056} best=-152845.96852865056
86: neval=1228{'avg': -150234.90259682416, 'max': 337591.71740645455, 'min': -152845.96852865056} best=-152845.96852865056
87: neval=1237{'avg': -150030.29983800126, 'max': 199789.71888645377, 'min': -152845.96852865056} best=-152845.96852865056
88: neval=1263{'avg': -151350.31076435433, 'max': 166648.97094266606, 'min': -152845.96852865056} best=-152845.96852865056
89: neval=1222{'avg': -151307.98576948507, 'max': 234273.5739492617, 'min': -152845.96852865056} best=-152845.96852865056
90: neval=1236{'avg': -150900.0184224143, 'max': 258981.7891828565, 'min': -152845.96852865056} best=-152845.96852865056
91: neval=1206{'avg': -151589.70992780736, 'max': 189447.98198461454, 'min': -152845.96852865056} best=-152845.96852865056
92: neval=1230{'avg': -151305.85879040897, 'max': 186687.15135419436, 'min': -152845.96852865056} best=-152845.96852865056
93: neval=1259{'avg': -151022.80891011, 'max': 171262.78541973996, 'min': -152845.96852865056} best=-152845.96852865056
94: neval=1197{'avg': -150205.9172192115, 'max': 197882.44941845292, 'min': -152845.96852865056} best=-152845.96852865056
95: neval=1210{'avg': -151350.05969541986, 'max': 252091.59244131763, 'min': -152845.96852865056} best=-152845.96852865056
96: neval=1241{'avg': -150288.43774545158, 'max': 213377.57463100457, 'min': -152845.96852865056} best=-152845.96852865056
97: neval=1218{'avg': -150671.4216233503, 'max': 192385.69833911507, 'min': -152845.96852865056} best=-152845.96852865056
98: neval=1240{'avg': -149837.24351488022, 'max': 207824.77387584193, 'min': -152845.96852865056} best=-152845.96852865056
99: neval=1223{'avg': -149785.03220686593, 'max': 306895.7975959305, 'min': -152845.96852865056} best=-152845.96852865056


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 87, 117, 108, 115, 112, 114, 116, 118, 113, 111, 120, 123, 124]
best_individual.trans_facility = [1, 126, 21, 26, 32, 52, 53, 54, 56, 69, 70, 88, 125, 136, 143, 162, 172]
best_individual.unused_cities = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 119, 121, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174}
best_individual.fitness.values = (-155878.14766168466,)