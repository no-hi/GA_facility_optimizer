局----------------------  実行情報  ----------------------
実行時間＝7363秒
個体数＝1450
合計世代数＝100
==============================
Total cost: -84637.93152999002
==============================
------------------------  前提  ------------------------

waste=kanen

ごみ量39位以内：
札幌市 (349353), 函館市 (66649), 旭川市 (64890), 苫小牧市 (42288), 釧路市 (38335), 帯広市 (35291), 千歳市 (25770), 小樽市 (25049), 江別市 (24906), 北見市 (20809), 室蘭市 (20448), 岩見沢市 (12638), 登別市 (11426), 北広島市 (10822), 石狩市 (9341), 音更町 (7531), 稚内市 (7127), 恵庭市 (6987), 伊達市 (6907), 網走市 (6299), 滝川市 (5831), 北斗市 (5150), 七飯町 (5008), 中標津町 (4837), 根室市 (4736), 幕別町 (4414), 新ひだか町 (4277), 釧路町 (4090), 美幌町 (4063), 白老町 (3395), 紋別市 (3325), 中札内村 (2807), 芽室町 (2638), 東神楽町 (2584), 余市町 (2489), 砂川市 (2419), せたな町 (2370), 遠軽町 (2357), 深川市 (2253)

焼却施設数: 19
中継施設数: 10

輸送単価＝ 4.8 円/t/km
--------------------  GAPlot_input  --------------------

waste_name ='kanen'
unit ='t/year'

inc_size= [764872, 62130, 45105, 39598, 13596, 7127, 2582, 1594, 1481, 877, 854, 439, 342, 282, 110, 33, 26, 24, 24]
inc_facility = ['札幌市', '帯広市', '釧路市', '北見市', '中標津町', '稚内市', '中川町', '枝幸町', '初山別村', '標津町', '白糠町', '浜頓別町', '羅臼町', '猿払村', '中頓別町', '豊富町', '遠別町', '天塩町', '幌延町']
inc_blocks = [['夕張市', '岩見沢市', '美唄市', '三笠市', '南幌町', '長沼町', '栗山町', '月形町', '札幌市', '江別市', '北広島市', '石狩市', '当別町', '新篠津村', '蘭越町', 'ニセコ町', '真狩村', '留寿都村', '喜茂別町', '京極町', '俱知安町'], ['名寄市', '下川町', '美深町', '音威子府村', '中川町'], ['留萌市', '増毛町', '小平町', '苫前町', '羽幌町', '初山別村'], ['遠別町'], ['天塩町'], ['稚内市'], ['猿払村'], ['浜頓別町'], ['中頓別町'], ['枝幸町', '興部町', '西興部村', '雄武町'], ['豊富町'], ['幌延町'], ['北見市', '網走市', '紋別市', '美幌町', '津別町', '小清水町', '訓子府町', '置戸町', '佐呂間町', '遠軽町', '湧別町', '滝上町', '大空町', '陸別町'], ['えりも町', '南富良野町', '占冠村', '帯広市', '音更町', '士幌町', '上士幌町', '鹿追町', '新得町', '清水町', '芽室町', '中札内村', '更別村', '大樹町', '広尾町', '幕別町', '池田町', '豊頃町', '本別町', '足寄町'], ['釧路市', '釧路町', '厚岸町', '標茶町', '鶴居村'], ['浦幌町', '白糠町'], ['浜中町', '弟子屈町', '根室市', '別海町', '中標津町'], ['清里町', '斜里町', '標津町'], ['羅臼町']]

trans_size=[83618, 74068, 46307, 34345, 32045, 31874, 17415, 15724, 8879, 4463]
trans_facility = ['函館市', '旭川市', '苫小牧市', '千歳市', '小樽市', '室蘭市', '豊浦町', '滝川市', '新ひだか町', '鷹栖町']
trans_blocks = [['旭川市', '富良野市', '東神楽町', '当麻町', '愛別町', '東川町', '美瑛町', '上富良野町', '中富良野町'], ['芦別市', '赤平市', '滝川市', '砂川市', '歌志内市', '深川市', '奈井江町', '上砂川町', '浦臼町', '新十津川町', '妹背牛町', '秩父別町', '雨竜町', '北竜町', '沼田町'], ['由仁町', '千歳市', '恵庭市', '厚真町', '安平町'], ['小樽市', '共和町', '岩内町', '泊村', '神恵内村', '積丹町', '古平町', '仁木町', '余市町', '赤井川村'], ['室蘭市', '登別市'], ['苫小牧市', '白老町', 'むかわ町'], ['島牧村', '寿都町', '黒松内町', '伊達市', '豊浦町', '壮瞥町', '洞爺湖町', '八雲町', '長万部町', '今金町', 'せたな町'], ['日高町', '平取町', '新冠町', '浦河町', '様似町', '新ひだか町'], ['函館市', '北斗市', '松前町', '福島町', '知内町', '木古内町', '七飯町', '鹿部町', '森町', '江差町', '上ノ国町', '厚沢部町', '乙部町'], ['士別市', '鷹栖町', '比布町', '上川町', '和寒町', '剣淵町', '幌加内町']]

arrows = [[['札幌市'], ['小樽市', '新ひだか町', '滝川市', '函館市', '室蘭市', '苫小牧市', '旭川市', '豊浦町', '千歳市', '鷹栖町']]]


---------------------  エネルギー情報  ---------------------
[36283.64511064583, 175236.92839775415, -317484.07260003383, 21325.567561643835]

EL_direct: {'札幌市': 14533.605841625, '帯広市': 6010.593822187499, '釧路市': 1240.714241541667, '北見市': 7661.472227500001, '中標津町': 4149.084566520834, '稚内市': 0.0, '中川町': 1637.8649465208337, '枝幸町': 226.79341370833336, '初山別村': 558.4578127916668, '標津町': 157.27318425, '白糠町': 107.785054, '浜頓別町': 0.0, '羅臼町': 0.0, '猿払村': 0.0, '中頓別町': 0.0, '豊富町': 0.0, '遠別町': 0.0, '天塩町': 0.0, '幌延町': 0.0}
ED_inc: {'札幌市': -518914.00506826444, '帯広市': 48653.950778025726, '釧路市': 44272.7639993069, '北見市': 42062.685527432644, '中標津町': 23449.054939499165, '稚内市': 15144.566798995975, '中川町': 7111.223207950842, '枝幸町': 4866.553320767104, '初山別村': 4589.042298863878, '標津町': 3002.244239956554, '白糠町': 2937.5725906451607, '浜頓別町': 1691.0928798414677, '羅臼町': 1370.3528057844808, '猿払村': 1163.6509218695028, '中頓別町': 518.0804921426532, '豊富町': 180.0454620005565, '遠別町': 145.69531867270277, '天塩町': 135.67844323768028, '幌延町': 135.67844323768028}

EL_indirect: {'函館市': 82574.7988576593, '旭川市': 32411.310309453835, '苫小牧市': 10141.120542156501, '千歳市': 5391.9524708291665, '小樽市': 5947.0408341825005, '室蘭市': 14137.254320284334, '豊浦町': 10840.559320391669, '滝川市': 5852.888054125668, '新ひだか町': 4779.048490263667, '鷹栖町': 3160.9551984074997}
ED_trans: {'函館市': 5113.297972602739, '旭川市': 4529.30893150685, '苫小牧市': 2831.7047671232876, '千歳市': 2100.2202739726026, '小樽市': 1959.5736986301372, '室蘭市': 1949.1169315068496, '豊浦町': 1064.9391780821918, '滝川市': 961.5333698630137, '新ひだか町': 542.9569315068493, '鷹栖町': 272.9155068493151}

----------------------  輸送情報  ----------------------

direct 札幌市(1140/2096) t/day → receive from: 夕張市, 岩見沢市, 美唄市, 三笠市, 南幌町, 長沼町, 栗山町, 月形町, 札幌市, 江別市, 北広島市, 石狩市, 当別町, 新篠津村, 蘭越町, ニセコ町, 真狩村, 留寿都村, 喜茂別町, 京極町, 俱知安町
indirect 札幌市(955/2096) t/day → receive from: 中継施設＝ 小樽市(32045) → receive from: 小樽市, 共和町, 岩内町, 泊村, 神恵内村, 積丹町, 古平町, 仁木町, 余市町, 赤井川村
新ひだか町(8879) → receive from: 日高町, 平取町, 新冠町, 浦河町, 様似町, 新ひだか町
滝川市(15724) → receive from: 芦別市, 赤平市, 滝川市, 砂川市, 歌志内市, 深川市, 奈井江町, 上砂川町, 浦臼町, 新十津川町, 妹背牛町, 秩父別町, 雨竜町, 北竜町, 沼田町
函館市(83618) → receive from: 函館市, 北斗市, 松前町, 福島町, 知内町, 木古内町, 七飯町, 鹿部町, 森町, 江差町, 上ノ国町, 厚沢部町, 乙部町
室蘭市(31874) → receive from: 室蘭市, 登別市
苫小牧市(46307) → receive from: 苫小牧市, 白老町, むかわ町
旭川市(74068) → receive from: 旭川市, 富良野市, 東神楽町, 当麻町, 愛別町, 東川町, 美瑛町, 上富良野町, 中富良野町
豊浦町(17415) → receive from: 島牧村, 寿都町, 黒松内町, 伊達市, 豊浦町, 壮瞥町, 洞爺湖町, 八雲町, 長万部町, 今金町, せたな町
千歳市(34345) → receive from: 由仁町, 千歳市, 恵庭市, 厚真町, 安平町
鷹栖町(4463) → receive from: 士別市, 鷹栖町, 比布町, 上川町, 和寒町, 剣淵町, 幌加内町
direct 帯広市(170/170) t/day → receive from: えりも町, 南富良野町, 占冠村, 帯広市, 音更町, 士幌町, 上士幌町, 鹿追町, 新得町, 清水町, 芽室町, 中札内村, 更別村, 大樹町, 広尾町, 幕別町, 池田町, 豊頃町, 本別町, 足寄町
direct 釧路市(124/124) t/day → receive from: 釧路市, 釧路町, 厚岸町, 標茶町, 鶴居村
direct 北見市(108/108) t/day → receive from: 北見市, 網走市, 紋別市, 美幌町, 津別町, 小清水町, 訓子府町, 置戸町, 佐呂間町, 遠軽町, 湧別町, 滝上町, 大空町, 陸別町
direct 中標津町(37/37) t/day → receive from: 浜中町, 弟子屈町, 根室市, 別海町, 中標津町
direct 稚内市(20/20) t/day → receive from: 稚内市
direct 中川町(7/7) t/day → receive from: 名寄市, 下川町, 美深町, 音威子府村, 中川町
direct 枝幸町(4/4) t/day → receive from: 枝幸町, 興部町, 西興部村, 雄武町
direct 初山別村(4/4) t/day → receive from: 留萌市, 増毛町, 小平町, 苫前町, 羽幌町, 初山別村
direct 標津町(2/2) t/day → receive from: 清里町, 斜里町, 標津町
direct 白糠町(2/2) t/day → receive from: 浦幌町, 白糠町
direct 浜頓別町(1/1) t/day → receive from: 浜頓別町
direct 羅臼町(1/1) t/day → receive from: 羅臼町
direct 猿払村(1/1) t/day → receive from: 猿払村
direct 中頓別町(0/0) t/day → receive from: 中頓別町
direct 豊富町(0/0) t/day → receive from: 豊富町
direct 遠別町(0/0) t/day → receive from: 遠別町
direct 天塩町(0/0) t/day → receive from: 天塩町
direct 幌延町(0/0) t/day → receive from: 幌延町

----------------------  遺伝情報  ----------------------

個体数＝1450
世代数＝100
0: neval=1450{'avg': inf, 'max': inf, 'min': 321297.55849773414} best=321297.55849773414
1: neval=1119{'avg': inf, 'max': inf, 'min': 295190.8557813737} best=295190.8557813737
2: neval=1183{'avg': inf, 'max': inf, 'min': 245632.2212745081} best=245632.2212745081
3: neval=1116{'avg': inf, 'max': inf, 'min': 245632.2212745081} best=245632.2212745081
4: neval=1130{'avg': inf, 'max': inf, 'min': 239834.61895044416} best=239834.61895044416
5: neval=1151{'avg': inf, 'max': inf, 'min': 231008.521871585} best=231008.521871585
6: neval=1155{'avg': inf, 'max': inf, 'min': 169686.45734708503} best=169686.45734708503
7: neval=1138{'avg': inf, 'max': inf, 'min': 169686.45734708503} best=169686.45734708503
8: neval=1159{'avg': inf, 'max': inf, 'min': 111468.19392289012} best=111468.19392289012
9: neval=1136{'avg': inf, 'max': inf, 'min': 111468.19392289012} best=111468.19392289012
10: neval=1163{'avg': inf, 'max': inf, 'min': 119889.94492829549} best=111468.19392289012
11: neval=1128{'avg': inf, 'max': inf, 'min': 106121.49205232802} best=106121.49205232802
12: neval=1159{'avg': inf, 'max': inf, 'min': 79305.44012726634} best=79305.44012726634
13: neval=1169{'avg': inf, 'max': inf, 'min': 88825.66482165469} best=79305.44012726634
14: neval=1130{'avg': 181100.21521818376, 'max': 507149.55606456765, 'min': 81022.26932031373} best=79305.44012726634
15: neval=1141{'avg': inf, 'max': inf, 'min': 75071.63276050914} best=75071.63276050914
16: neval=1175{'avg': 147034.18391912116, 'max': 481548.71639643423, 'min': 64533.66502870967} best=64533.66502870967
17: neval=1148{'avg': inf, 'max': inf, 'min': 53081.43855176125} best=53081.43855176125
18: neval=1153{'avg': 111277.69264632497, 'max': 562574.9336161775, 'min': 53610.97446707694} best=53081.43855176125
19: neval=1139{'avg': 99667.00056872057, 'max': 538373.2189364277, 'min': 43717.18485260752} best=43717.18485260752
20: neval=1159{'avg': 89099.89021710781, 'max': 376265.0222227623, 'min': 37038.171973168784} best=37038.171973168784
21: neval=1121{'avg': 77506.31705979382, 'max': 484544.82042939, 'min': 28587.5746292521} best=28587.5746292521
22: neval=1139{'avg': 68339.48476384357, 'max': 394617.96242109005, 'min': 10201.436184742732} best=10201.436184742732
23: neval=1147{'avg': inf, 'max': inf, 'min': -428.45295012853603} best=-428.45295012853603
24: neval=1140{'avg': 54852.765017486505, 'max': 355535.7605041116, 'min': -428.45295012853603} best=-428.45295012853603
25: neval=1156{'avg': 48893.14122737422, 'max': 428752.1045124202, 'min': -2118.409932306462} best=-2118.409932306462
26: neval=1140{'avg': 41874.30485681814, 'max': 386445.8116506974, 'min': -9643.790500185693} best=-9643.790500185693
27: neval=1155{'avg': 35315.57690208675, 'max': 342536.6024858988, 'min': -14374.83797276934} best=-14374.83797276934
28: neval=1155{'avg': 28749.77205043312, 'max': 428694.65169003734, 'min': -10561.633013486924} best=-14374.83797276934
29: neval=1128{'avg': 23270.68740823718, 'max': 368293.9021921328, 'min': -21934.09041715739} best=-21934.09041715739
30: neval=1143{'avg': 13073.331215636383, 'max': 423824.31975272356, 'min': -30555.34535127268} best=-30555.34535127268
31: neval=1174{'avg': 3908.7603900960153, 'max': 337386.1356081499, 'min': -28921.049415527563} best=-30555.34535127268
32: neval=1138{'avg': -6004.780937075385, 'max': 389696.51789716876, 'min': -43089.50574856554} best=-43089.50574856554
33: neval=1157{'avg': -12930.9005927194, 'max': 314922.8613900959, 'min': -36755.74098592397} best=-43089.50574856554
34: neval=1120{'avg': -17936.137973079673, 'max': 352764.9040618165, 'min': -44160.43271730069} best=-44160.43271730069
35: neval=1130{'avg': -22868.359486238405, 'max': 317740.4873617881, 'min': -45815.353515449795} best=-45815.353515449795
36: neval=1127{'avg': -27549.746780017882, 'max': 295654.97393985395, 'min': -49091.03611121451} best=-49091.03611121451
37: neval=1164{'avg': -30889.449364254197, 'max': 313337.16758072015, 'min': -55344.14891316241} best=-55344.14891316241
38: neval=1140{'avg': -33304.87225582855, 'max': 423895.2864051377, 'min': -56676.975586250315} best=-56676.975586250315
39: neval=1164{'avg': -36681.20534347072, 'max': 325063.4547560093, 'min': -56880.849520522555} best=-56880.849520522555
40: neval=1139{'avg': -40758.86143539006, 'max': 232060.03640280987, 'min': -59841.07560642174} best=-59841.07560642174
41: neval=1163{'avg': -44825.1673508121, 'max': 325334.0388406536, 'min': -64021.58314056386} best=-64021.58314056386
42: neval=1154{'avg': -49317.292750630026, 'max': 251614.0953319923, 'min': -64021.58314056386} best=-64021.58314056386
43: neval=1180{'avg': -54354.76066867105, 'max': 270855.1919987492, 'min': -67556.220079419} best=-67556.220079419
44: neval=1143{'avg': -57224.49150282307, 'max': 341817.42554861336, 'min': -69486.69549552108} best=-69486.69549552108
45: neval=1132{'avg': -60452.283657395325, 'max': 156799.12040477237, 'min': -71311.55864652534} best=-71311.55864652534
46: neval=1168{'avg': -61400.66451528589, 'max': 334279.42581998266, 'min': -72260.79285951535} best=-72260.79285951535
47: neval=1133{'avg': -63004.24135241003, 'max': 253684.49539009054, 'min': -73634.94527114657} best=-73634.94527114657
48: neval=1130{'avg': -65474.70305232744, 'max': 304702.78183897625, 'min': -74576.65396093106} best=-74576.65396093106
49: neval=1163{'avg': -66427.3051990719, 'max': 275725.559235182, 'min': -75521.81592667205} best=-75521.81592667205
50: neval=1116{'avg': -69366.35766794812, 'max': 246392.55990258427, 'min': -75521.81592667205} best=-75521.81592667205
51: neval=1146{'avg': -70100.89980422953, 'max': 295677.7815163282, 'min': -75521.81592667205} best=-75521.81592667205
52: neval=1106{'avg': -72565.76387270239, 'max': 178915.05703159474, 'min': -75521.81592667205} best=-75521.81592667205
53: neval=1186{'avg': -72749.36909519239, 'max': 274543.0983799999, 'min': -76111.15085124498} best=-76111.15085124498
54: neval=1131{'avg': -73385.99431041697, 'max': 263550.1934307952, 'min': -78744.25791675206} best=-78744.25791675206
55: neval=1146{'avg': -72927.21559891876, 'max': 305606.01403988106, 'min': -78744.25791675206} best=-78744.25791675206
56: neval=1144{'avg': -74410.9033280827, 'max': 248477.3783086609, 'min': -78744.25791675206} best=-78744.25791675206
57: neval=1154{'avg': -73750.41349553091, 'max': 268637.7186996806, 'min': -78904.95407308497} best=-78904.95407308497
58: neval=1157{'avg': -73417.71143036212, 'max': 300628.4050475278, 'min': -78904.95407308497} best=-78904.95407308497
59: neval=1119{'avg': -75727.21080014679, 'max': 305970.0547386194, 'min': -78904.95407308497} best=-78904.95407308497
60: neval=1149{'avg': -76343.89771141484, 'max': 247880.38129055913, 'min': -78904.95407308497} best=-78904.95407308497
61: neval=1156{'avg': -77504.83302649054, 'max': 220288.71751706506, 'min': -78904.95407308497} best=-78904.95407308497
62: neval=1175{'avg': -77940.73357967123, 'max': 246269.9475430521, 'min': -78904.95407308497} best=-78904.95407308497
63: neval=1151{'avg': -75222.91007062589, 'max': 378098.47693007585, 'min': -78904.95407308497} best=-78904.95407308497
64: neval=1171{'avg': -76975.02852693947, 'max': 290519.8414910303, 'min': -78904.95407308497} best=-78904.95407308497
65: neval=1141{'avg': -75152.9495930455, 'max': 416122.7083085741, 'min': -78904.95407308497} best=-78904.95407308497
66: neval=1170{'avg': -76658.0269356861, 'max': 415513.56460131286, 'min': -78904.95407308497} best=-78904.95407308497
67: neval=1123{'avg': -76616.46204253988, 'max': 293247.6564435399, 'min': -78904.95407308497} best=-78904.95407308497
68: neval=1152{'avg': -77663.10527373123, 'max': 272454.73357874755, 'min': -78904.95407308497} best=-78904.95407308497
69: neval=1119{'avg': -77606.35277371606, 'max': 341580.41514922376, 'min': -78904.95407308497} best=-78904.95407308497
70: neval=1153{'avg': -76681.45455467011, 'max': 338788.78797220584, 'min': -78904.95407308497} best=-78904.95407308497
71: neval=1128{'avg': -77548.0701029059, 'max': 296866.71984495496, 'min': -78904.95407308497} best=-78904.95407308497
72: neval=1149{'avg': -78282.24292442446, 'max': 282782.00601766165, 'min': -78904.95407308497} best=-78904.95407308497
73: neval=1144{'avg': -76743.89046766023, 'max': 219063.34661878494, 'min': -78904.95407308497} best=-78904.95407308497
74: neval=1134{'avg': -78011.39650415299, 'max': 247394.79144217627, 'min': -78904.95407308497} best=-78904.95407308497
75: neval=1158{'avg': -76814.94141315315, 'max': 392404.1338339774, 'min': -78904.95407308497} best=-78904.95407308497
76: neval=1128{'avg': -77882.61297772796, 'max': 179382.64632234172, 'min': -78904.95407308497} best=-78904.95407308497
77: neval=1116{'avg': -77814.32486367605, 'max': 267822.952933633, 'min': -78904.95407308497} best=-78904.95407308497
78: neval=1152{'avg': -77616.35549149393, 'max': 303255.16533927683, 'min': -78904.95407308497} best=-78904.95407308497
79: neval=1151{'avg': -76482.05673971285, 'max': 287669.6059914763, 'min': -78904.95407308497} best=-78904.95407308497
80: neval=1185{'avg': -77264.38053376565, 'max': 311468.8130644533, 'min': -78904.95407308497} best=-78904.95407308497
81: neval=1167{'avg': -76220.29738535856, 'max': 402703.9627147311, 'min': -78904.95407308497} best=-78904.95407308497
82: neval=1171{'avg': -75535.60599869213, 'max': 287781.48451413127, 'min': -78904.95407308497} best=-78904.95407308497
83: neval=1144{'avg': -77451.28605527541, 'max': 282761.6013853766, 'min': -78904.95407308497} best=-78904.95407308497
84: neval=1175{'avg': -77615.00630603137, 'max': 239712.25313011688, 'min': -78904.95407308497} best=-78904.95407308497
85: neval=1133{'avg': -76917.21800139779, 'max': 325303.8968483142, 'min': -78904.95407308497} best=-78904.95407308497
86: neval=1165{'avg': -75891.4614424775, 'max': 317113.6656791418, 'min': -78904.95407308497} best=-78904.95407308497
87: neval=1115{'avg': -76910.42503296117, 'max': 242287.97471647366, 'min': -78904.95407308497} best=-78904.95407308497
88: neval=1142{'avg': -76719.33655687269, 'max': 265665.5449202267, 'min': -78904.95407308497} best=-78904.95407308497
89: neval=1106{'avg': -77192.76348615061, 'max': 344704.3301695696, 'min': -78904.95407308497} best=-78904.95407308497
90: neval=1150{'avg': -76278.12091399604, 'max': 318931.47207717516, 'min': -78904.95407308497} best=-78904.95407308497
91: neval=1157{'avg': -77322.4262526929, 'max': 336749.4782890785, 'min': -78904.95407308497} best=-78904.95407308497
92: neval=1183{'avg': -76560.74667828492, 'max': 365796.7959045363, 'min': -78904.95407308497} best=-78904.95407308497
93: neval=1140{'avg': -77581.75058878216, 'max': 384808.89926718525, 'min': -78904.95407308497} best=-78904.95407308497
94: neval=1135{'avg': -76688.67436502072, 'max': 308563.9832313744, 'min': -78904.95407308497} best=-78904.95407308497
95: neval=1176{'avg': -75984.19350575015, 'max': 405116.0826943029, 'min': -78904.95407308497} best=-78904.95407308497
96: neval=1151{'avg': -76155.73852377024, 'max': 307455.3580142701, 'min': -78904.95407308497} best=-78904.95407308497
97: neval=1140{'avg': -76033.96485366735, 'max': 267078.4147793069, 'min': -78904.95407308497} best=-78904.95407308497
98: neval=1131{'avg': -77210.79189231941, 'max': 224212.8244265946, 'min': -78904.95407308497} best=-78904.95407308497
99: neval=1141{'avg': -78223.19165307074, 'max': 136883.88980721796, 'min': -78904.95407308497} best=-78904.95407308497


----------------------  最適個体  ----------------------

best_individual.inc_facility = [24, 108, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 143, 162, 169, 172, 173, 174]
best_individual.trans_facility = [87, 6, 26, 32, 52, 53, 56, 69, 70, 91]
best_individual.unused_cities = {0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171}
best_individual.fitness.values = (-84637.93152999002,)